//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Condenser {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetQuery")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetQuery : global::System.Data.DataSet {
        
        private QMainEquipmentsDataTable tableQMainEquipments;
        
        private QInsulatingLiquidTypesDataTable tableQInsulatingLiquidTypes;
        
        private QCondenserRecordDataTable tableQCondenserRecord;
        
        private QCondenserTestRecordDataTable tableQCondenserTestRecord;
        
        private QCondenserTestDataTable tableQCondenserTest;
        
        private QCondenserTypesDataTable tableQCondenserTypes;
        
        private QCondenserTypeParametersDataTable tableQCondenserTypeParameters;
        
        private QCondenserTypesForTableDataTable tableQCondenserTypesForTable;
        
        private QCondensersDataTable tableQCondensers;
        
        private global::System.Data.DataRelation relationFK_CondenserTest_01;
        
        private global::System.Data.DataRelation relationFK_Condensers_0;
        
        private global::System.Data.DataRelation relationFK_CondenserTest_0;
        
        private global::System.Data.DataRelation relationFK_CondenserTest_02;
        
        private global::System.Data.DataRelation relationFK_CondenserTest_03;
        
        private global::System.Data.DataRelation relationFK_CondenserTest_04;
        
        private global::System.Data.DataRelation relationFK_CondenserTypeParameters_01;
        
        private global::System.Data.DataRelation relationFK_CondenserTypes_0;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetQuery() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSetQuery(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["QMainEquipments"] != null)) {
                    base.Tables.Add(new QMainEquipmentsDataTable(ds.Tables["QMainEquipments"]));
                }
                if ((ds.Tables["QInsulatingLiquidTypes"] != null)) {
                    base.Tables.Add(new QInsulatingLiquidTypesDataTable(ds.Tables["QInsulatingLiquidTypes"]));
                }
                if ((ds.Tables["QCondenserRecord"] != null)) {
                    base.Tables.Add(new QCondenserRecordDataTable(ds.Tables["QCondenserRecord"]));
                }
                if ((ds.Tables["QCondenserTestRecord"] != null)) {
                    base.Tables.Add(new QCondenserTestRecordDataTable(ds.Tables["QCondenserTestRecord"]));
                }
                if ((ds.Tables["QCondenserTest"] != null)) {
                    base.Tables.Add(new QCondenserTestDataTable(ds.Tables["QCondenserTest"]));
                }
                if ((ds.Tables["QCondenserTypes"] != null)) {
                    base.Tables.Add(new QCondenserTypesDataTable(ds.Tables["QCondenserTypes"]));
                }
                if ((ds.Tables["QCondenserTypeParameters"] != null)) {
                    base.Tables.Add(new QCondenserTypeParametersDataTable(ds.Tables["QCondenserTypeParameters"]));
                }
                if ((ds.Tables["QCondenserTypesForTable"] != null)) {
                    base.Tables.Add(new QCondenserTypesForTableDataTable(ds.Tables["QCondenserTypesForTable"]));
                }
                if ((ds.Tables["QCondensers"] != null)) {
                    base.Tables.Add(new QCondensersDataTable(ds.Tables["QCondensers"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QMainEquipmentsDataTable QMainEquipments {
            get {
                return this.tableQMainEquipments;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QInsulatingLiquidTypesDataTable QInsulatingLiquidTypes {
            get {
                return this.tableQInsulatingLiquidTypes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QCondenserRecordDataTable QCondenserRecord {
            get {
                return this.tableQCondenserRecord;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QCondenserTestRecordDataTable QCondenserTestRecord {
            get {
                return this.tableQCondenserTestRecord;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QCondenserTestDataTable QCondenserTest {
            get {
                return this.tableQCondenserTest;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QCondenserTypesDataTable QCondenserTypes {
            get {
                return this.tableQCondenserTypes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QCondenserTypeParametersDataTable QCondenserTypeParameters {
            get {
                return this.tableQCondenserTypeParameters;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QCondenserTypesForTableDataTable QCondenserTypesForTable {
            get {
                return this.tableQCondenserTypesForTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QCondensersDataTable QCondensers {
            get {
                return this.tableQCondensers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSetQuery cln = ((DataSetQuery)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["QMainEquipments"] != null)) {
                    base.Tables.Add(new QMainEquipmentsDataTable(ds.Tables["QMainEquipments"]));
                }
                if ((ds.Tables["QInsulatingLiquidTypes"] != null)) {
                    base.Tables.Add(new QInsulatingLiquidTypesDataTable(ds.Tables["QInsulatingLiquidTypes"]));
                }
                if ((ds.Tables["QCondenserRecord"] != null)) {
                    base.Tables.Add(new QCondenserRecordDataTable(ds.Tables["QCondenserRecord"]));
                }
                if ((ds.Tables["QCondenserTestRecord"] != null)) {
                    base.Tables.Add(new QCondenserTestRecordDataTable(ds.Tables["QCondenserTestRecord"]));
                }
                if ((ds.Tables["QCondenserTest"] != null)) {
                    base.Tables.Add(new QCondenserTestDataTable(ds.Tables["QCondenserTest"]));
                }
                if ((ds.Tables["QCondenserTypes"] != null)) {
                    base.Tables.Add(new QCondenserTypesDataTable(ds.Tables["QCondenserTypes"]));
                }
                if ((ds.Tables["QCondenserTypeParameters"] != null)) {
                    base.Tables.Add(new QCondenserTypeParametersDataTable(ds.Tables["QCondenserTypeParameters"]));
                }
                if ((ds.Tables["QCondenserTypesForTable"] != null)) {
                    base.Tables.Add(new QCondenserTypesForTableDataTable(ds.Tables["QCondenserTypesForTable"]));
                }
                if ((ds.Tables["QCondensers"] != null)) {
                    base.Tables.Add(new QCondensersDataTable(ds.Tables["QCondensers"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableQMainEquipments = ((QMainEquipmentsDataTable)(base.Tables["QMainEquipments"]));
            if ((initTable == true)) {
                if ((this.tableQMainEquipments != null)) {
                    this.tableQMainEquipments.InitVars();
                }
            }
            this.tableQInsulatingLiquidTypes = ((QInsulatingLiquidTypesDataTable)(base.Tables["QInsulatingLiquidTypes"]));
            if ((initTable == true)) {
                if ((this.tableQInsulatingLiquidTypes != null)) {
                    this.tableQInsulatingLiquidTypes.InitVars();
                }
            }
            this.tableQCondenserRecord = ((QCondenserRecordDataTable)(base.Tables["QCondenserRecord"]));
            if ((initTable == true)) {
                if ((this.tableQCondenserRecord != null)) {
                    this.tableQCondenserRecord.InitVars();
                }
            }
            this.tableQCondenserTestRecord = ((QCondenserTestRecordDataTable)(base.Tables["QCondenserTestRecord"]));
            if ((initTable == true)) {
                if ((this.tableQCondenserTestRecord != null)) {
                    this.tableQCondenserTestRecord.InitVars();
                }
            }
            this.tableQCondenserTest = ((QCondenserTestDataTable)(base.Tables["QCondenserTest"]));
            if ((initTable == true)) {
                if ((this.tableQCondenserTest != null)) {
                    this.tableQCondenserTest.InitVars();
                }
            }
            this.tableQCondenserTypes = ((QCondenserTypesDataTable)(base.Tables["QCondenserTypes"]));
            if ((initTable == true)) {
                if ((this.tableQCondenserTypes != null)) {
                    this.tableQCondenserTypes.InitVars();
                }
            }
            this.tableQCondenserTypeParameters = ((QCondenserTypeParametersDataTable)(base.Tables["QCondenserTypeParameters"]));
            if ((initTable == true)) {
                if ((this.tableQCondenserTypeParameters != null)) {
                    this.tableQCondenserTypeParameters.InitVars();
                }
            }
            this.tableQCondenserTypesForTable = ((QCondenserTypesForTableDataTable)(base.Tables["QCondenserTypesForTable"]));
            if ((initTable == true)) {
                if ((this.tableQCondenserTypesForTable != null)) {
                    this.tableQCondenserTypesForTable.InitVars();
                }
            }
            this.tableQCondensers = ((QCondensersDataTable)(base.Tables["QCondensers"]));
            if ((initTable == true)) {
                if ((this.tableQCondensers != null)) {
                    this.tableQCondensers.InitVars();
                }
            }
            this.relationFK_CondenserTest_01 = this.Relations["FK_CondenserTest_01"];
            this.relationFK_Condensers_0 = this.Relations["FK_Condensers_0"];
            this.relationFK_CondenserTest_0 = this.Relations["FK_CondenserTest_0"];
            this.relationFK_CondenserTest_02 = this.Relations["FK_CondenserTest_02"];
            this.relationFK_CondenserTest_03 = this.Relations["FK_CondenserTest_03"];
            this.relationFK_CondenserTest_04 = this.Relations["FK_CondenserTest_04"];
            this.relationFK_CondenserTypeParameters_01 = this.Relations["FK_CondenserTypeParameters_01"];
            this.relationFK_CondenserTypes_0 = this.Relations["FK_CondenserTypes_0"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSetQuery";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetQuery.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableQMainEquipments = new QMainEquipmentsDataTable();
            base.Tables.Add(this.tableQMainEquipments);
            this.tableQInsulatingLiquidTypes = new QInsulatingLiquidTypesDataTable();
            base.Tables.Add(this.tableQInsulatingLiquidTypes);
            this.tableQCondenserRecord = new QCondenserRecordDataTable();
            base.Tables.Add(this.tableQCondenserRecord);
            this.tableQCondenserTestRecord = new QCondenserTestRecordDataTable();
            base.Tables.Add(this.tableQCondenserTestRecord);
            this.tableQCondenserTest = new QCondenserTestDataTable();
            base.Tables.Add(this.tableQCondenserTest);
            this.tableQCondenserTypes = new QCondenserTypesDataTable();
            base.Tables.Add(this.tableQCondenserTypes);
            this.tableQCondenserTypeParameters = new QCondenserTypeParametersDataTable();
            base.Tables.Add(this.tableQCondenserTypeParameters);
            this.tableQCondenserTypesForTable = new QCondenserTypesForTableDataTable();
            base.Tables.Add(this.tableQCondenserTypesForTable);
            this.tableQCondensers = new QCondensersDataTable();
            base.Tables.Add(this.tableQCondensers);
            this.relationFK_CondenserTest_01 = new global::System.Data.DataRelation("FK_CondenserTest_01", new global::System.Data.DataColumn[] {
                        this.tableQCondenserTestRecord.CondenserIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableQCondenserTest.CondenserIDColumn}, false);
            this.Relations.Add(this.relationFK_CondenserTest_01);
            this.relationFK_Condensers_0 = new global::System.Data.DataRelation("FK_Condensers_0", new global::System.Data.DataColumn[] {
                        this.tableQCondenserTypes.CondenserTypeIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableQCondenserRecord.CondenserTypeIDColumn}, false);
            this.Relations.Add(this.relationFK_Condensers_0);
            this.relationFK_CondenserTest_0 = new global::System.Data.DataRelation("FK_CondenserTest_0", new global::System.Data.DataColumn[] {
                        this.tableQMainEquipments.CondenserIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableQCondenserTestRecord.CondenserIDColumn}, false);
            this.Relations.Add(this.relationFK_CondenserTest_0);
            this.relationFK_CondenserTest_02 = new global::System.Data.DataRelation("FK_CondenserTest_02", new global::System.Data.DataColumn[] {
                        this.tableQMainEquipments.CondenserIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableQCondenserTest.CondenserIDColumn}, false);
            this.Relations.Add(this.relationFK_CondenserTest_02);
            this.relationFK_CondenserTest_03 = new global::System.Data.DataRelation("FK_CondenserTest_03", new global::System.Data.DataColumn[] {
                        this.tableQCondensers.CondenserIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableQCondenserTestRecord.CondenserIDColumn}, false);
            this.Relations.Add(this.relationFK_CondenserTest_03);
            this.relationFK_CondenserTest_04 = new global::System.Data.DataRelation("FK_CondenserTest_04", new global::System.Data.DataColumn[] {
                        this.tableQCondensers.CondenserIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableQCondenserTest.CondenserIDColumn}, false);
            this.Relations.Add(this.relationFK_CondenserTest_04);
            this.relationFK_CondenserTypeParameters_01 = new global::System.Data.DataRelation("FK_CondenserTypeParameters_01", new global::System.Data.DataColumn[] {
                        this.tableQCondenserTypes.CondenserTypeIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableQCondenserTypesForTable.CondenserTypeIDColumn}, false);
            this.Relations.Add(this.relationFK_CondenserTypeParameters_01);
            this.relationFK_CondenserTypes_0 = new global::System.Data.DataRelation("FK_CondenserTypes_0", new global::System.Data.DataColumn[] {
                        this.tableQInsulatingLiquidTypes.InsulatingLiquidTypeIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableQCondenserTypes.InsulatingLiquidTypeIDColumn}, false);
            this.Relations.Add(this.relationFK_CondenserTypes_0);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeQMainEquipments() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeQInsulatingLiquidTypes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeQCondenserRecord() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeQCondenserTestRecord() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeQCondenserTest() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeQCondenserTypes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeQCondenserTypeParameters() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeQCondenserTypesForTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeQCondensers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetQuery ds = new DataSetQuery();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void QMainEquipmentsRowChangeEventHandler(object sender, QMainEquipmentsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void QInsulatingLiquidTypesRowChangeEventHandler(object sender, QInsulatingLiquidTypesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void QCondenserRecordRowChangeEventHandler(object sender, QCondenserRecordRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void QCondenserTestRecordRowChangeEventHandler(object sender, QCondenserTestRecordRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void QCondenserTestRowChangeEventHandler(object sender, QCondenserTestRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void QCondenserTypesRowChangeEventHandler(object sender, QCondenserTypesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void QCondenserTypeParametersRowChangeEventHandler(object sender, QCondenserTypeParametersRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void QCondenserTypesForTableRowChangeEventHandler(object sender, QCondenserTypesForTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void QCondensersRowChangeEventHandler(object sender, QCondensersRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QMainEquipmentsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCondenserID;
            
            private global::System.Data.DataColumn columnCondenserNumber;
            
            private global::System.Data.DataColumn columnCondenserTypeName;
            
            private global::System.Data.DataColumn columnInsulatingLiquidTypeName;
            
            private global::System.Data.DataColumn columnNominalVoltage;
            
            private global::System.Data.DataColumn columnNominalCapacitance;
            
            private global::System.Data.DataColumn columnCondenserState;
            
            private global::System.Data.DataColumn columnCondenserTestType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QMainEquipmentsDataTable() {
                this.TableName = "QMainEquipments";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QMainEquipmentsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected QMainEquipmentsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserIDColumn {
                get {
                    return this.columnCondenserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserNumberColumn {
                get {
                    return this.columnCondenserNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserTypeNameColumn {
                get {
                    return this.columnCondenserTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsulatingLiquidTypeNameColumn {
                get {
                    return this.columnInsulatingLiquidTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NominalVoltageColumn {
                get {
                    return this.columnNominalVoltage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NominalCapacitanceColumn {
                get {
                    return this.columnNominalCapacitance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserStateColumn {
                get {
                    return this.columnCondenserState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserTestTypeColumn {
                get {
                    return this.columnCondenserTestType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QMainEquipmentsRow this[int index] {
                get {
                    return ((QMainEquipmentsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QMainEquipmentsRowChangeEventHandler QMainEquipmentsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QMainEquipmentsRowChangeEventHandler QMainEquipmentsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QMainEquipmentsRowChangeEventHandler QMainEquipmentsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QMainEquipmentsRowChangeEventHandler QMainEquipmentsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddQMainEquipmentsRow(QMainEquipmentsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QMainEquipmentsRow AddQMainEquipmentsRow(string CondenserNumber, string CondenserTypeName, string InsulatingLiquidTypeName, decimal NominalVoltage, decimal NominalCapacitance, long CondenserState, long CondenserTestType) {
                QMainEquipmentsRow rowQMainEquipmentsRow = ((QMainEquipmentsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CondenserNumber,
                        CondenserTypeName,
                        InsulatingLiquidTypeName,
                        NominalVoltage,
                        NominalCapacitance,
                        CondenserState,
                        CondenserTestType};
                rowQMainEquipmentsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQMainEquipmentsRow);
                return rowQMainEquipmentsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QMainEquipmentsRow FindByCondenserID(long CondenserID) {
                return ((QMainEquipmentsRow)(this.Rows.Find(new object[] {
                            CondenserID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                QMainEquipmentsDataTable cln = ((QMainEquipmentsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QMainEquipmentsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCondenserID = base.Columns["CondenserID"];
                this.columnCondenserNumber = base.Columns["CondenserNumber"];
                this.columnCondenserTypeName = base.Columns["CondenserTypeName"];
                this.columnInsulatingLiquidTypeName = base.Columns["InsulatingLiquidTypeName"];
                this.columnNominalVoltage = base.Columns["NominalVoltage"];
                this.columnNominalCapacitance = base.Columns["NominalCapacitance"];
                this.columnCondenserState = base.Columns["CondenserState"];
                this.columnCondenserTestType = base.Columns["CondenserTestType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCondenserID = new global::System.Data.DataColumn("CondenserID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserID);
                this.columnCondenserNumber = new global::System.Data.DataColumn("CondenserNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserNumber);
                this.columnCondenserTypeName = new global::System.Data.DataColumn("CondenserTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserTypeName);
                this.columnInsulatingLiquidTypeName = new global::System.Data.DataColumn("InsulatingLiquidTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsulatingLiquidTypeName);
                this.columnNominalVoltage = new global::System.Data.DataColumn("NominalVoltage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalVoltage);
                this.columnNominalCapacitance = new global::System.Data.DataColumn("NominalCapacitance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalCapacitance);
                this.columnCondenserState = new global::System.Data.DataColumn("CondenserState", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserState);
                this.columnCondenserTestType = new global::System.Data.DataColumn("CondenserTestType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserTestType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCondenserID}, true));
                this.columnCondenserID.AutoIncrement = true;
                this.columnCondenserID.AutoIncrementSeed = -1;
                this.columnCondenserID.AutoIncrementStep = -1;
                this.columnCondenserID.AllowDBNull = false;
                this.columnCondenserID.Unique = true;
                this.columnCondenserNumber.AllowDBNull = false;
                this.columnCondenserNumber.MaxLength = 64;
                this.columnCondenserTypeName.AllowDBNull = false;
                this.columnCondenserTypeName.MaxLength = 256;
                this.columnInsulatingLiquidTypeName.AllowDBNull = false;
                this.columnInsulatingLiquidTypeName.MaxLength = 256;
                this.columnNominalVoltage.AllowDBNull = false;
                this.columnNominalCapacitance.AllowDBNull = false;
                this.columnCondenserState.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QMainEquipmentsRow NewQMainEquipmentsRow() {
                return ((QMainEquipmentsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QMainEquipmentsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(QMainEquipmentsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QMainEquipmentsRowChanged != null)) {
                    this.QMainEquipmentsRowChanged(this, new QMainEquipmentsRowChangeEvent(((QMainEquipmentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QMainEquipmentsRowChanging != null)) {
                    this.QMainEquipmentsRowChanging(this, new QMainEquipmentsRowChangeEvent(((QMainEquipmentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QMainEquipmentsRowDeleted != null)) {
                    this.QMainEquipmentsRowDeleted(this, new QMainEquipmentsRowChangeEvent(((QMainEquipmentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QMainEquipmentsRowDeleting != null)) {
                    this.QMainEquipmentsRowDeleting(this, new QMainEquipmentsRowChangeEvent(((QMainEquipmentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveQMainEquipmentsRow(QMainEquipmentsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetQuery ds = new DataSetQuery();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QMainEquipmentsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QInsulatingLiquidTypesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnInsulatingLiquidTypeID;
            
            private global::System.Data.DataColumn columnInsulatingLiquidTypeName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QInsulatingLiquidTypesDataTable() {
                this.TableName = "QInsulatingLiquidTypes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QInsulatingLiquidTypesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected QInsulatingLiquidTypesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsulatingLiquidTypeIDColumn {
                get {
                    return this.columnInsulatingLiquidTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsulatingLiquidTypeNameColumn {
                get {
                    return this.columnInsulatingLiquidTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QInsulatingLiquidTypesRow this[int index] {
                get {
                    return ((QInsulatingLiquidTypesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QInsulatingLiquidTypesRowChangeEventHandler QInsulatingLiquidTypesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QInsulatingLiquidTypesRowChangeEventHandler QInsulatingLiquidTypesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QInsulatingLiquidTypesRowChangeEventHandler QInsulatingLiquidTypesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QInsulatingLiquidTypesRowChangeEventHandler QInsulatingLiquidTypesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddQInsulatingLiquidTypesRow(QInsulatingLiquidTypesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QInsulatingLiquidTypesRow AddQInsulatingLiquidTypesRow(string InsulatingLiquidTypeName) {
                QInsulatingLiquidTypesRow rowQInsulatingLiquidTypesRow = ((QInsulatingLiquidTypesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        InsulatingLiquidTypeName};
                rowQInsulatingLiquidTypesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQInsulatingLiquidTypesRow);
                return rowQInsulatingLiquidTypesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QInsulatingLiquidTypesRow FindByInsulatingLiquidTypeID(long InsulatingLiquidTypeID) {
                return ((QInsulatingLiquidTypesRow)(this.Rows.Find(new object[] {
                            InsulatingLiquidTypeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                QInsulatingLiquidTypesDataTable cln = ((QInsulatingLiquidTypesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QInsulatingLiquidTypesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnInsulatingLiquidTypeID = base.Columns["InsulatingLiquidTypeID"];
                this.columnInsulatingLiquidTypeName = base.Columns["InsulatingLiquidTypeName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnInsulatingLiquidTypeID = new global::System.Data.DataColumn("InsulatingLiquidTypeID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsulatingLiquidTypeID);
                this.columnInsulatingLiquidTypeName = new global::System.Data.DataColumn("InsulatingLiquidTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsulatingLiquidTypeName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnInsulatingLiquidTypeID}, true));
                this.columnInsulatingLiquidTypeID.AutoIncrement = true;
                this.columnInsulatingLiquidTypeID.AutoIncrementSeed = -1;
                this.columnInsulatingLiquidTypeID.AutoIncrementStep = -1;
                this.columnInsulatingLiquidTypeID.AllowDBNull = false;
                this.columnInsulatingLiquidTypeID.Unique = true;
                this.columnInsulatingLiquidTypeName.AllowDBNull = false;
                this.columnInsulatingLiquidTypeName.MaxLength = 256;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QInsulatingLiquidTypesRow NewQInsulatingLiquidTypesRow() {
                return ((QInsulatingLiquidTypesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QInsulatingLiquidTypesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(QInsulatingLiquidTypesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QInsulatingLiquidTypesRowChanged != null)) {
                    this.QInsulatingLiquidTypesRowChanged(this, new QInsulatingLiquidTypesRowChangeEvent(((QInsulatingLiquidTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QInsulatingLiquidTypesRowChanging != null)) {
                    this.QInsulatingLiquidTypesRowChanging(this, new QInsulatingLiquidTypesRowChangeEvent(((QInsulatingLiquidTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QInsulatingLiquidTypesRowDeleted != null)) {
                    this.QInsulatingLiquidTypesRowDeleted(this, new QInsulatingLiquidTypesRowChangeEvent(((QInsulatingLiquidTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QInsulatingLiquidTypesRowDeleting != null)) {
                    this.QInsulatingLiquidTypesRowDeleting(this, new QInsulatingLiquidTypesRowChangeEvent(((QInsulatingLiquidTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveQInsulatingLiquidTypesRow(QInsulatingLiquidTypesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetQuery ds = new DataSetQuery();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QInsulatingLiquidTypesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QCondenserRecordDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCondenserTypeName;
            
            private global::System.Data.DataColumn columnInsulatingLiquidTypeID;
            
            private global::System.Data.DataColumn columnDielectricType;
            
            private global::System.Data.DataColumn columnDielectricThickness;
            
            private global::System.Data.DataColumn columnTangentAngle;
            
            private global::System.Data.DataColumn columnDielectricInductiveCapacity;
            
            private global::System.Data.DataColumn columnCasingType;
            
            private global::System.Data.DataColumn columnCasingThickness;
            
            private global::System.Data.DataColumn columnCondenserID;
            
            private global::System.Data.DataColumn columnCondenserNumber;
            
            private global::System.Data.DataColumn columnNominalVoltage;
            
            private global::System.Data.DataColumn columnNominalCapacitance;
            
            private global::System.Data.DataColumn columnEnergyCharge;
            
            private global::System.Data.DataColumn columnInductivity;
            
            private global::System.Data.DataColumn columnNormalizedResource;
            
            private global::System.Data.DataColumn columnMaxDischargeCurrent;
            
            private global::System.Data.DataColumn columnCondenserWeight;
            
            private global::System.Data.DataColumn columnCondenserVolume;
            
            private global::System.Data.DataColumn columnDesignFeaturesSection;
            
            private global::System.Data.DataColumn columnInsulationResistance;
            
            private global::System.Data.DataColumn columnTemperatureKoeff;
            
            private global::System.Data.DataColumn columnTechnologicalFeatures;
            
            private global::System.Data.DataColumn columnCondenserImage;
            
            private global::System.Data.DataColumn columnSpecificCapacityByWeight;
            
            private global::System.Data.DataColumn columnSpecificEnergyByWeight;
            
            private global::System.Data.DataColumn columnSpecificEnergyByVolume;
            
            private global::System.Data.DataColumn columnCondenserTypeID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserRecordDataTable() {
                this.TableName = "QCondenserRecord";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QCondenserRecordDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected QCondenserRecordDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserTypeNameColumn {
                get {
                    return this.columnCondenserTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsulatingLiquidTypeIDColumn {
                get {
                    return this.columnInsulatingLiquidTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DielectricTypeColumn {
                get {
                    return this.columnDielectricType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DielectricThicknessColumn {
                get {
                    return this.columnDielectricThickness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TangentAngleColumn {
                get {
                    return this.columnTangentAngle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DielectricInductiveCapacityColumn {
                get {
                    return this.columnDielectricInductiveCapacity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CasingTypeColumn {
                get {
                    return this.columnCasingType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CasingThicknessColumn {
                get {
                    return this.columnCasingThickness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserIDColumn {
                get {
                    return this.columnCondenserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserNumberColumn {
                get {
                    return this.columnCondenserNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NominalVoltageColumn {
                get {
                    return this.columnNominalVoltage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NominalCapacitanceColumn {
                get {
                    return this.columnNominalCapacitance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnergyChargeColumn {
                get {
                    return this.columnEnergyCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InductivityColumn {
                get {
                    return this.columnInductivity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NormalizedResourceColumn {
                get {
                    return this.columnNormalizedResource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxDischargeCurrentColumn {
                get {
                    return this.columnMaxDischargeCurrent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserWeightColumn {
                get {
                    return this.columnCondenserWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserVolumeColumn {
                get {
                    return this.columnCondenserVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DesignFeaturesSectionColumn {
                get {
                    return this.columnDesignFeaturesSection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsulationResistanceColumn {
                get {
                    return this.columnInsulationResistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TemperatureKoeffColumn {
                get {
                    return this.columnTemperatureKoeff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TechnologicalFeaturesColumn {
                get {
                    return this.columnTechnologicalFeatures;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserImageColumn {
                get {
                    return this.columnCondenserImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpecificCapacityByWeightColumn {
                get {
                    return this.columnSpecificCapacityByWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpecificEnergyByWeightColumn {
                get {
                    return this.columnSpecificEnergyByWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpecificEnergyByVolumeColumn {
                get {
                    return this.columnSpecificEnergyByVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserTypeIDColumn {
                get {
                    return this.columnCondenserTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserRecordRow this[int index] {
                get {
                    return ((QCondenserRecordRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserRecordRowChangeEventHandler QCondenserRecordRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserRecordRowChangeEventHandler QCondenserRecordRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserRecordRowChangeEventHandler QCondenserRecordRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserRecordRowChangeEventHandler QCondenserRecordRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddQCondenserRecordRow(QCondenserRecordRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserRecordRow AddQCondenserRecordRow(
                        string CondenserTypeName, 
                        long InsulatingLiquidTypeID, 
                        long DielectricType, 
                        decimal DielectricThickness, 
                        decimal TangentAngle, 
                        decimal DielectricInductiveCapacity, 
                        long CasingType, 
                        decimal CasingThickness, 
                        string CondenserNumber, 
                        decimal NominalVoltage, 
                        decimal NominalCapacitance, 
                        decimal EnergyCharge, 
                        decimal Inductivity, 
                        long NormalizedResource, 
                        decimal MaxDischargeCurrent, 
                        decimal CondenserWeight, 
                        decimal CondenserVolume, 
                        string DesignFeaturesSection, 
                        decimal InsulationResistance, 
                        decimal TemperatureKoeff, 
                        string TechnologicalFeatures, 
                        byte[] CondenserImage, 
                        decimal SpecificCapacityByWeight, 
                        decimal SpecificEnergyByWeight, 
                        decimal SpecificEnergyByVolume, 
                        QCondenserTypesRow parentQCondenserTypesRowByFK_Condensers_0) {
                QCondenserRecordRow rowQCondenserRecordRow = ((QCondenserRecordRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CondenserTypeName,
                        InsulatingLiquidTypeID,
                        DielectricType,
                        DielectricThickness,
                        TangentAngle,
                        DielectricInductiveCapacity,
                        CasingType,
                        CasingThickness,
                        null,
                        CondenserNumber,
                        NominalVoltage,
                        NominalCapacitance,
                        EnergyCharge,
                        Inductivity,
                        NormalizedResource,
                        MaxDischargeCurrent,
                        CondenserWeight,
                        CondenserVolume,
                        DesignFeaturesSection,
                        InsulationResistance,
                        TemperatureKoeff,
                        TechnologicalFeatures,
                        CondenserImage,
                        SpecificCapacityByWeight,
                        SpecificEnergyByWeight,
                        SpecificEnergyByVolume,
                        null};
                if ((parentQCondenserTypesRowByFK_Condensers_0 != null)) {
                    columnValuesArray[26] = parentQCondenserTypesRowByFK_Condensers_0[2];
                }
                rowQCondenserRecordRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQCondenserRecordRow);
                return rowQCondenserRecordRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserRecordRow FindByCondenserID(long CondenserID) {
                return ((QCondenserRecordRow)(this.Rows.Find(new object[] {
                            CondenserID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                QCondenserRecordDataTable cln = ((QCondenserRecordDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QCondenserRecordDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCondenserTypeName = base.Columns["CondenserTypeName"];
                this.columnInsulatingLiquidTypeID = base.Columns["InsulatingLiquidTypeID"];
                this.columnDielectricType = base.Columns["DielectricType"];
                this.columnDielectricThickness = base.Columns["DielectricThickness"];
                this.columnTangentAngle = base.Columns["TangentAngle"];
                this.columnDielectricInductiveCapacity = base.Columns["DielectricInductiveCapacity"];
                this.columnCasingType = base.Columns["CasingType"];
                this.columnCasingThickness = base.Columns["CasingThickness"];
                this.columnCondenserID = base.Columns["CondenserID"];
                this.columnCondenserNumber = base.Columns["CondenserNumber"];
                this.columnNominalVoltage = base.Columns["NominalVoltage"];
                this.columnNominalCapacitance = base.Columns["NominalCapacitance"];
                this.columnEnergyCharge = base.Columns["EnergyCharge"];
                this.columnInductivity = base.Columns["Inductivity"];
                this.columnNormalizedResource = base.Columns["NormalizedResource"];
                this.columnMaxDischargeCurrent = base.Columns["MaxDischargeCurrent"];
                this.columnCondenserWeight = base.Columns["CondenserWeight"];
                this.columnCondenserVolume = base.Columns["CondenserVolume"];
                this.columnDesignFeaturesSection = base.Columns["DesignFeaturesSection"];
                this.columnInsulationResistance = base.Columns["InsulationResistance"];
                this.columnTemperatureKoeff = base.Columns["TemperatureKoeff"];
                this.columnTechnologicalFeatures = base.Columns["TechnologicalFeatures"];
                this.columnCondenserImage = base.Columns["CondenserImage"];
                this.columnSpecificCapacityByWeight = base.Columns["SpecificCapacityByWeight"];
                this.columnSpecificEnergyByWeight = base.Columns["SpecificEnergyByWeight"];
                this.columnSpecificEnergyByVolume = base.Columns["SpecificEnergyByVolume"];
                this.columnCondenserTypeID = base.Columns["CondenserTypeID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCondenserTypeName = new global::System.Data.DataColumn("CondenserTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserTypeName);
                this.columnInsulatingLiquidTypeID = new global::System.Data.DataColumn("InsulatingLiquidTypeID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsulatingLiquidTypeID);
                this.columnDielectricType = new global::System.Data.DataColumn("DielectricType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDielectricType);
                this.columnDielectricThickness = new global::System.Data.DataColumn("DielectricThickness", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDielectricThickness);
                this.columnTangentAngle = new global::System.Data.DataColumn("TangentAngle", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTangentAngle);
                this.columnDielectricInductiveCapacity = new global::System.Data.DataColumn("DielectricInductiveCapacity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDielectricInductiveCapacity);
                this.columnCasingType = new global::System.Data.DataColumn("CasingType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCasingType);
                this.columnCasingThickness = new global::System.Data.DataColumn("CasingThickness", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCasingThickness);
                this.columnCondenserID = new global::System.Data.DataColumn("CondenserID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserID);
                this.columnCondenserNumber = new global::System.Data.DataColumn("CondenserNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserNumber);
                this.columnNominalVoltage = new global::System.Data.DataColumn("NominalVoltage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalVoltage);
                this.columnNominalCapacitance = new global::System.Data.DataColumn("NominalCapacitance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalCapacitance);
                this.columnEnergyCharge = new global::System.Data.DataColumn("EnergyCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnergyCharge);
                this.columnInductivity = new global::System.Data.DataColumn("Inductivity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInductivity);
                this.columnNormalizedResource = new global::System.Data.DataColumn("NormalizedResource", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNormalizedResource);
                this.columnMaxDischargeCurrent = new global::System.Data.DataColumn("MaxDischargeCurrent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDischargeCurrent);
                this.columnCondenserWeight = new global::System.Data.DataColumn("CondenserWeight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserWeight);
                this.columnCondenserVolume = new global::System.Data.DataColumn("CondenserVolume", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserVolume);
                this.columnDesignFeaturesSection = new global::System.Data.DataColumn("DesignFeaturesSection", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignFeaturesSection);
                this.columnInsulationResistance = new global::System.Data.DataColumn("InsulationResistance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsulationResistance);
                this.columnTemperatureKoeff = new global::System.Data.DataColumn("TemperatureKoeff", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemperatureKoeff);
                this.columnTechnologicalFeatures = new global::System.Data.DataColumn("TechnologicalFeatures", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechnologicalFeatures);
                this.columnCondenserImage = new global::System.Data.DataColumn("CondenserImage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserImage);
                this.columnSpecificCapacityByWeight = new global::System.Data.DataColumn("SpecificCapacityByWeight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecificCapacityByWeight);
                this.columnSpecificEnergyByWeight = new global::System.Data.DataColumn("SpecificEnergyByWeight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecificEnergyByWeight);
                this.columnSpecificEnergyByVolume = new global::System.Data.DataColumn("SpecificEnergyByVolume", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecificEnergyByVolume);
                this.columnCondenserTypeID = new global::System.Data.DataColumn("CondenserTypeID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserTypeID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCondenserID}, true));
                this.columnCondenserTypeName.DefaultValue = ((string)(""));
                this.columnCondenserTypeName.MaxLength = 256;
                this.columnCondenserID.AutoIncrement = true;
                this.columnCondenserID.AutoIncrementSeed = -1;
                this.columnCondenserID.AutoIncrementStep = -1;
                this.columnCondenserID.AllowDBNull = false;
                this.columnCondenserID.Unique = true;
                this.columnCondenserNumber.DefaultValue = ((string)(""));
                this.columnCondenserNumber.MaxLength = 64;
                this.columnDesignFeaturesSection.DefaultValue = ((string)(""));
                this.columnDesignFeaturesSection.MaxLength = 1024;
                this.columnTechnologicalFeatures.DefaultValue = ((string)(""));
                this.columnTechnologicalFeatures.MaxLength = 1024;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserRecordRow NewQCondenserRecordRow() {
                return ((QCondenserRecordRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QCondenserRecordRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(QCondenserRecordRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QCondenserRecordRowChanged != null)) {
                    this.QCondenserRecordRowChanged(this, new QCondenserRecordRowChangeEvent(((QCondenserRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QCondenserRecordRowChanging != null)) {
                    this.QCondenserRecordRowChanging(this, new QCondenserRecordRowChangeEvent(((QCondenserRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QCondenserRecordRowDeleted != null)) {
                    this.QCondenserRecordRowDeleted(this, new QCondenserRecordRowChangeEvent(((QCondenserRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QCondenserRecordRowDeleting != null)) {
                    this.QCondenserRecordRowDeleting(this, new QCondenserRecordRowChangeEvent(((QCondenserRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveQCondenserRecordRow(QCondenserRecordRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetQuery ds = new DataSetQuery();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QCondenserRecordDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QCondenserTestRecordDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCondenserID;
            
            private global::System.Data.DataColumn columnCondenserTestType;
            
            private global::System.Data.DataColumn columnCondenserTestDate;
            
            private global::System.Data.DataColumn columnCondenserTestEquipment;
            
            private global::System.Data.DataColumn columnTestVoltageImageForm;
            
            private global::System.Data.DataColumn columnTestVoltageImagePoints;
            
            private global::System.Data.DataColumn columnTestVoltageFrequency;
            
            private global::System.Data.DataColumn columnTestVoltageAmplitude;
            
            private global::System.Data.DataColumn columnAnalysisDateProbe;
            
            private global::System.Data.DataColumn columnAnalysisDateExecute;
            
            private global::System.Data.DataColumn columnH2;
            
            private global::System.Data.DataColumn columnCH4;
            
            private global::System.Data.DataColumn columnCO;
            
            private global::System.Data.DataColumn columnCO2_CO;
            
            private global::System.Data.DataColumn columnCO2;
            
            private global::System.Data.DataColumn columnC2H4;
            
            private global::System.Data.DataColumn columnC2H6;
            
            private global::System.Data.DataColumn columnC2H2;
            
            private global::System.Data.DataColumn columnCondenserTestID;
            
            private global::System.Data.DataColumn columnAnalysisEmployeeFIO;
            
            private global::System.Data.DataColumn columnH2_Vabs;
            
            private global::System.Data.DataColumn columnH2_Votn;
            
            private global::System.Data.DataColumn columnO2;
            
            private global::System.Data.DataColumn columnO2_Vabs;
            
            private global::System.Data.DataColumn columnO2_Votn;
            
            private global::System.Data.DataColumn columnN2;
            
            private global::System.Data.DataColumn columnN2_Vabs;
            
            private global::System.Data.DataColumn columnN2_Votn;
            
            private global::System.Data.DataColumn columnCH4_Vabs;
            
            private global::System.Data.DataColumn columnCH4_Votn;
            
            private global::System.Data.DataColumn columnCO_Vabs;
            
            private global::System.Data.DataColumn columnCO_Votn;
            
            private global::System.Data.DataColumn columnCO2_CO_Vabs;
            
            private global::System.Data.DataColumn columnCO2_CO_Votn;
            
            private global::System.Data.DataColumn columnCO2_Vabs;
            
            private global::System.Data.DataColumn columnCO2_Votn;
            
            private global::System.Data.DataColumn columnC2H4_Vabs;
            
            private global::System.Data.DataColumn columnC2H4_Votn;
            
            private global::System.Data.DataColumn columnC2H6_Vabs;
            
            private global::System.Data.DataColumn columnC2H6_Votn;
            
            private global::System.Data.DataColumn columnC2H2_Vabs;
            
            private global::System.Data.DataColumn columnC2H2_Votn;
            
            private global::System.Data.DataColumn columnCycleCount;
            
            private global::System.Data.DataColumn columnCH3OH;
            
            private global::System.Data.DataColumn columnCH3OH_Vabs;
            
            private global::System.Data.DataColumn columnCH3OH_Votn;
            
            private global::System.Data.DataColumn columnTemperature;
            
            private global::System.Data.DataColumn columnCondenserState;
            
            private global::System.Data.DataColumn columnRecommendation;
            
            private global::System.Data.DataColumn columnConclusion;
            
            private global::System.Data.DataColumn columnCCNext;
            
            private global::System.Data.DataColumn columnVR;
            
            private global::System.Data.DataColumn columnKCF;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTestRecordDataTable() {
                this.TableName = "QCondenserTestRecord";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QCondenserTestRecordDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected QCondenserTestRecordDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserIDColumn {
                get {
                    return this.columnCondenserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserTestTypeColumn {
                get {
                    return this.columnCondenserTestType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserTestDateColumn {
                get {
                    return this.columnCondenserTestDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserTestEquipmentColumn {
                get {
                    return this.columnCondenserTestEquipment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TestVoltageImageFormColumn {
                get {
                    return this.columnTestVoltageImageForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TestVoltageImagePointsColumn {
                get {
                    return this.columnTestVoltageImagePoints;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TestVoltageFrequencyColumn {
                get {
                    return this.columnTestVoltageFrequency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TestVoltageAmplitudeColumn {
                get {
                    return this.columnTestVoltageAmplitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnalysisDateProbeColumn {
                get {
                    return this.columnAnalysisDateProbe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnalysisDateExecuteColumn {
                get {
                    return this.columnAnalysisDateExecute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn H2Column {
                get {
                    return this.columnH2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CH4Column {
                get {
                    return this.columnCH4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COColumn {
                get {
                    return this.columnCO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CO2_COColumn {
                get {
                    return this.columnCO2_CO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CO2Column {
                get {
                    return this.columnCO2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C2H4Column {
                get {
                    return this.columnC2H4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C2H6Column {
                get {
                    return this.columnC2H6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C2H2Column {
                get {
                    return this.columnC2H2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserTestIDColumn {
                get {
                    return this.columnCondenserTestID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnalysisEmployeeFIOColumn {
                get {
                    return this.columnAnalysisEmployeeFIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn H2_VabsColumn {
                get {
                    return this.columnH2_Vabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn H2_VotnColumn {
                get {
                    return this.columnH2_Votn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn O2Column {
                get {
                    return this.columnO2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn O2_VabsColumn {
                get {
                    return this.columnO2_Vabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn O2_VotnColumn {
                get {
                    return this.columnO2_Votn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn N2Column {
                get {
                    return this.columnN2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn N2_VabsColumn {
                get {
                    return this.columnN2_Vabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn N2_VotnColumn {
                get {
                    return this.columnN2_Votn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CH4_VabsColumn {
                get {
                    return this.columnCH4_Vabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CH4_VotnColumn {
                get {
                    return this.columnCH4_Votn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CO_VabsColumn {
                get {
                    return this.columnCO_Vabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CO_VotnColumn {
                get {
                    return this.columnCO_Votn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CO2_CO_VabsColumn {
                get {
                    return this.columnCO2_CO_Vabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CO2_CO_VotnColumn {
                get {
                    return this.columnCO2_CO_Votn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CO2_VabsColumn {
                get {
                    return this.columnCO2_Vabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CO2_VotnColumn {
                get {
                    return this.columnCO2_Votn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C2H4_VabsColumn {
                get {
                    return this.columnC2H4_Vabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C2H4_VotnColumn {
                get {
                    return this.columnC2H4_Votn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C2H6_VabsColumn {
                get {
                    return this.columnC2H6_Vabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C2H6_VotnColumn {
                get {
                    return this.columnC2H6_Votn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C2H2_VabsColumn {
                get {
                    return this.columnC2H2_Vabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C2H2_VotnColumn {
                get {
                    return this.columnC2H2_Votn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleCountColumn {
                get {
                    return this.columnCycleCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CH3OHColumn {
                get {
                    return this.columnCH3OH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CH3OH_VabsColumn {
                get {
                    return this.columnCH3OH_Vabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CH3OH_VotnColumn {
                get {
                    return this.columnCH3OH_Votn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TemperatureColumn {
                get {
                    return this.columnTemperature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserStateColumn {
                get {
                    return this.columnCondenserState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecommendationColumn {
                get {
                    return this.columnRecommendation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConclusionColumn {
                get {
                    return this.columnConclusion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CCNextColumn {
                get {
                    return this.columnCCNext;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VRColumn {
                get {
                    return this.columnVR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KCFColumn {
                get {
                    return this.columnKCF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTestRecordRow this[int index] {
                get {
                    return ((QCondenserTestRecordRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserTestRecordRowChangeEventHandler QCondenserTestRecordRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserTestRecordRowChangeEventHandler QCondenserTestRecordRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserTestRecordRowChangeEventHandler QCondenserTestRecordRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserTestRecordRowChangeEventHandler QCondenserTestRecordRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddQCondenserTestRecordRow(QCondenserTestRecordRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTestRecordRow AddQCondenserTestRecordRow(
                        QMainEquipmentsRow parentQMainEquipmentsRowByFK_CondenserTest_0, 
                        long CondenserTestType, 
                        System.DateTime CondenserTestDate, 
                        string CondenserTestEquipment, 
                        byte[] TestVoltageImageForm, 
                        string TestVoltageImagePoints, 
                        decimal TestVoltageFrequency, 
                        decimal TestVoltageAmplitude, 
                        System.DateTime AnalysisDateProbe, 
                        System.DateTime AnalysisDateExecute, 
                        decimal H2, 
                        decimal CH4, 
                        decimal CO, 
                        decimal CO2_CO, 
                        decimal CO2, 
                        decimal C2H4, 
                        decimal C2H6, 
                        decimal C2H2, 
                        string AnalysisEmployeeFIO, 
                        decimal H2_Vabs, 
                        decimal H2_Votn, 
                        decimal O2, 
                        decimal O2_Vabs, 
                        decimal O2_Votn, 
                        decimal N2, 
                        decimal N2_Vabs, 
                        decimal N2_Votn, 
                        decimal CH4_Vabs, 
                        decimal CH4_Votn, 
                        decimal CO_Vabs, 
                        decimal CO_Votn, 
                        decimal CO2_CO_Vabs, 
                        decimal CO2_CO_Votn, 
                        decimal CO2_Vabs, 
                        decimal CO2_Votn, 
                        decimal C2H4_Vabs, 
                        decimal C2H4_Votn, 
                        decimal C2H6_Vabs, 
                        decimal C2H6_Votn, 
                        decimal C2H2_Vabs, 
                        decimal C2H2_Votn, 
                        long CycleCount, 
                        decimal CH3OH, 
                        decimal CH3OH_Vabs, 
                        decimal CH3OH_Votn, 
                        string Temperature, 
                        long CondenserState, 
                        string Recommendation, 
                        string Conclusion, 
                        long CCNext, 
                        double VR, 
                        double KCF) {
                QCondenserTestRecordRow rowQCondenserTestRecordRow = ((QCondenserTestRecordRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CondenserTestType,
                        CondenserTestDate,
                        CondenserTestEquipment,
                        TestVoltageImageForm,
                        TestVoltageImagePoints,
                        TestVoltageFrequency,
                        TestVoltageAmplitude,
                        AnalysisDateProbe,
                        AnalysisDateExecute,
                        H2,
                        CH4,
                        CO,
                        CO2_CO,
                        CO2,
                        C2H4,
                        C2H6,
                        C2H2,
                        null,
                        AnalysisEmployeeFIO,
                        H2_Vabs,
                        H2_Votn,
                        O2,
                        O2_Vabs,
                        O2_Votn,
                        N2,
                        N2_Vabs,
                        N2_Votn,
                        CH4_Vabs,
                        CH4_Votn,
                        CO_Vabs,
                        CO_Votn,
                        CO2_CO_Vabs,
                        CO2_CO_Votn,
                        CO2_Vabs,
                        CO2_Votn,
                        C2H4_Vabs,
                        C2H4_Votn,
                        C2H6_Vabs,
                        C2H6_Votn,
                        C2H2_Vabs,
                        C2H2_Votn,
                        CycleCount,
                        CH3OH,
                        CH3OH_Vabs,
                        CH3OH_Votn,
                        Temperature,
                        CondenserState,
                        Recommendation,
                        Conclusion,
                        CCNext,
                        VR,
                        KCF};
                if ((parentQMainEquipmentsRowByFK_CondenserTest_0 != null)) {
                    columnValuesArray[0] = parentQMainEquipmentsRowByFK_CondenserTest_0[0];
                }
                rowQCondenserTestRecordRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQCondenserTestRecordRow);
                return rowQCondenserTestRecordRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTestRecordRow FindByCondenserTestID(long CondenserTestID) {
                return ((QCondenserTestRecordRow)(this.Rows.Find(new object[] {
                            CondenserTestID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                QCondenserTestRecordDataTable cln = ((QCondenserTestRecordDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QCondenserTestRecordDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCondenserID = base.Columns["CondenserID"];
                this.columnCondenserTestType = base.Columns["CondenserTestType"];
                this.columnCondenserTestDate = base.Columns["CondenserTestDate"];
                this.columnCondenserTestEquipment = base.Columns["CondenserTestEquipment"];
                this.columnTestVoltageImageForm = base.Columns["TestVoltageImageForm"];
                this.columnTestVoltageImagePoints = base.Columns["TestVoltageImagePoints"];
                this.columnTestVoltageFrequency = base.Columns["TestVoltageFrequency"];
                this.columnTestVoltageAmplitude = base.Columns["TestVoltageAmplitude"];
                this.columnAnalysisDateProbe = base.Columns["AnalysisDateProbe"];
                this.columnAnalysisDateExecute = base.Columns["AnalysisDateExecute"];
                this.columnH2 = base.Columns["H2"];
                this.columnCH4 = base.Columns["CH4"];
                this.columnCO = base.Columns["CO"];
                this.columnCO2_CO = base.Columns["CO2_CO"];
                this.columnCO2 = base.Columns["CO2"];
                this.columnC2H4 = base.Columns["C2H4"];
                this.columnC2H6 = base.Columns["C2H6"];
                this.columnC2H2 = base.Columns["C2H2"];
                this.columnCondenserTestID = base.Columns["CondenserTestID"];
                this.columnAnalysisEmployeeFIO = base.Columns["AnalysisEmployeeFIO"];
                this.columnH2_Vabs = base.Columns["H2_Vabs"];
                this.columnH2_Votn = base.Columns["H2_Votn"];
                this.columnO2 = base.Columns["O2"];
                this.columnO2_Vabs = base.Columns["O2_Vabs"];
                this.columnO2_Votn = base.Columns["O2_Votn"];
                this.columnN2 = base.Columns["N2"];
                this.columnN2_Vabs = base.Columns["N2_Vabs"];
                this.columnN2_Votn = base.Columns["N2_Votn"];
                this.columnCH4_Vabs = base.Columns["CH4_Vabs"];
                this.columnCH4_Votn = base.Columns["CH4_Votn"];
                this.columnCO_Vabs = base.Columns["CO_Vabs"];
                this.columnCO_Votn = base.Columns["CO_Votn"];
                this.columnCO2_CO_Vabs = base.Columns["CO2_CO_Vabs"];
                this.columnCO2_CO_Votn = base.Columns["CO2_CO_Votn"];
                this.columnCO2_Vabs = base.Columns["CO2_Vabs"];
                this.columnCO2_Votn = base.Columns["CO2_Votn"];
                this.columnC2H4_Vabs = base.Columns["C2H4_Vabs"];
                this.columnC2H4_Votn = base.Columns["C2H4_Votn"];
                this.columnC2H6_Vabs = base.Columns["C2H6_Vabs"];
                this.columnC2H6_Votn = base.Columns["C2H6_Votn"];
                this.columnC2H2_Vabs = base.Columns["C2H2_Vabs"];
                this.columnC2H2_Votn = base.Columns["C2H2_Votn"];
                this.columnCycleCount = base.Columns["CycleCount"];
                this.columnCH3OH = base.Columns["CH3OH"];
                this.columnCH3OH_Vabs = base.Columns["CH3OH_Vabs"];
                this.columnCH3OH_Votn = base.Columns["CH3OH_Votn"];
                this.columnTemperature = base.Columns["Temperature"];
                this.columnCondenserState = base.Columns["CondenserState"];
                this.columnRecommendation = base.Columns["Recommendation"];
                this.columnConclusion = base.Columns["Conclusion"];
                this.columnCCNext = base.Columns["CCNext"];
                this.columnVR = base.Columns["VR"];
                this.columnKCF = base.Columns["KCF"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCondenserID = new global::System.Data.DataColumn("CondenserID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserID);
                this.columnCondenserTestType = new global::System.Data.DataColumn("CondenserTestType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserTestType);
                this.columnCondenserTestDate = new global::System.Data.DataColumn("CondenserTestDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserTestDate);
                this.columnCondenserTestEquipment = new global::System.Data.DataColumn("CondenserTestEquipment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserTestEquipment);
                this.columnTestVoltageImageForm = new global::System.Data.DataColumn("TestVoltageImageForm", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestVoltageImageForm);
                this.columnTestVoltageImagePoints = new global::System.Data.DataColumn("TestVoltageImagePoints", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestVoltageImagePoints);
                this.columnTestVoltageFrequency = new global::System.Data.DataColumn("TestVoltageFrequency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestVoltageFrequency);
                this.columnTestVoltageAmplitude = new global::System.Data.DataColumn("TestVoltageAmplitude", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestVoltageAmplitude);
                this.columnAnalysisDateProbe = new global::System.Data.DataColumn("AnalysisDateProbe", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnalysisDateProbe);
                this.columnAnalysisDateExecute = new global::System.Data.DataColumn("AnalysisDateExecute", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnalysisDateExecute);
                this.columnH2 = new global::System.Data.DataColumn("H2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH2);
                this.columnCH4 = new global::System.Data.DataColumn("CH4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCH4);
                this.columnCO = new global::System.Data.DataColumn("CO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCO);
                this.columnCO2_CO = new global::System.Data.DataColumn("CO2_CO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCO2_CO);
                this.columnCO2 = new global::System.Data.DataColumn("CO2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCO2);
                this.columnC2H4 = new global::System.Data.DataColumn("C2H4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2H4);
                this.columnC2H6 = new global::System.Data.DataColumn("C2H6", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2H6);
                this.columnC2H2 = new global::System.Data.DataColumn("C2H2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2H2);
                this.columnCondenserTestID = new global::System.Data.DataColumn("CondenserTestID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserTestID);
                this.columnAnalysisEmployeeFIO = new global::System.Data.DataColumn("AnalysisEmployeeFIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnalysisEmployeeFIO);
                this.columnH2_Vabs = new global::System.Data.DataColumn("H2_Vabs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH2_Vabs);
                this.columnH2_Votn = new global::System.Data.DataColumn("H2_Votn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH2_Votn);
                this.columnO2 = new global::System.Data.DataColumn("O2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO2);
                this.columnO2_Vabs = new global::System.Data.DataColumn("O2_Vabs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO2_Vabs);
                this.columnO2_Votn = new global::System.Data.DataColumn("O2_Votn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO2_Votn);
                this.columnN2 = new global::System.Data.DataColumn("N2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN2);
                this.columnN2_Vabs = new global::System.Data.DataColumn("N2_Vabs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN2_Vabs);
                this.columnN2_Votn = new global::System.Data.DataColumn("N2_Votn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN2_Votn);
                this.columnCH4_Vabs = new global::System.Data.DataColumn("CH4_Vabs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCH4_Vabs);
                this.columnCH4_Votn = new global::System.Data.DataColumn("CH4_Votn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCH4_Votn);
                this.columnCO_Vabs = new global::System.Data.DataColumn("CO_Vabs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCO_Vabs);
                this.columnCO_Votn = new global::System.Data.DataColumn("CO_Votn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCO_Votn);
                this.columnCO2_CO_Vabs = new global::System.Data.DataColumn("CO2_CO_Vabs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCO2_CO_Vabs);
                this.columnCO2_CO_Votn = new global::System.Data.DataColumn("CO2_CO_Votn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCO2_CO_Votn);
                this.columnCO2_Vabs = new global::System.Data.DataColumn("CO2_Vabs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCO2_Vabs);
                this.columnCO2_Votn = new global::System.Data.DataColumn("CO2_Votn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCO2_Votn);
                this.columnC2H4_Vabs = new global::System.Data.DataColumn("C2H4_Vabs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2H4_Vabs);
                this.columnC2H4_Votn = new global::System.Data.DataColumn("C2H4_Votn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2H4_Votn);
                this.columnC2H6_Vabs = new global::System.Data.DataColumn("C2H6_Vabs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2H6_Vabs);
                this.columnC2H6_Votn = new global::System.Data.DataColumn("C2H6_Votn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2H6_Votn);
                this.columnC2H2_Vabs = new global::System.Data.DataColumn("C2H2_Vabs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2H2_Vabs);
                this.columnC2H2_Votn = new global::System.Data.DataColumn("C2H2_Votn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2H2_Votn);
                this.columnCycleCount = new global::System.Data.DataColumn("CycleCount", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleCount);
                this.columnCH3OH = new global::System.Data.DataColumn("CH3OH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCH3OH);
                this.columnCH3OH_Vabs = new global::System.Data.DataColumn("CH3OH_Vabs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCH3OH_Vabs);
                this.columnCH3OH_Votn = new global::System.Data.DataColumn("CH3OH_Votn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCH3OH_Votn);
                this.columnTemperature = new global::System.Data.DataColumn("Temperature", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemperature);
                this.columnCondenserState = new global::System.Data.DataColumn("CondenserState", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserState);
                this.columnRecommendation = new global::System.Data.DataColumn("Recommendation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecommendation);
                this.columnConclusion = new global::System.Data.DataColumn("Conclusion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConclusion);
                this.columnCCNext = new global::System.Data.DataColumn("CCNext", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCNext);
                this.columnVR = new global::System.Data.DataColumn("VR", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVR);
                this.columnKCF = new global::System.Data.DataColumn("KCF", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKCF);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCondenserTestID}, true));
                this.columnCondenserID.AllowDBNull = false;
                this.columnCondenserTestType.AllowDBNull = false;
                this.columnCondenserTestEquipment.AllowDBNull = false;
                this.columnCondenserTestEquipment.DefaultValue = ((string)(""));
                this.columnCondenserTestEquipment.MaxLength = 1024;
                this.columnTestVoltageImagePoints.AllowDBNull = false;
                this.columnTestVoltageImagePoints.DefaultValue = ((string)(""));
                this.columnTestVoltageImagePoints.MaxLength = 1024;
                this.columnCondenserTestID.AutoIncrement = true;
                this.columnCondenserTestID.AutoIncrementSeed = -1;
                this.columnCondenserTestID.AutoIncrementStep = -1;
                this.columnCondenserTestID.AllowDBNull = false;
                this.columnCondenserTestID.Unique = true;
                this.columnAnalysisEmployeeFIO.AllowDBNull = false;
                this.columnAnalysisEmployeeFIO.DefaultValue = ((string)(""));
                this.columnAnalysisEmployeeFIO.MaxLength = 256;
                this.columnTemperature.AllowDBNull = false;
                this.columnTemperature.DefaultValue = ((string)(""));
                this.columnTemperature.MaxLength = 50;
                this.columnRecommendation.AllowDBNull = false;
                this.columnRecommendation.DefaultValue = ((string)(""));
                this.columnRecommendation.MaxLength = 256;
                this.columnConclusion.AllowDBNull = false;
                this.columnConclusion.DefaultValue = ((string)(""));
                this.columnConclusion.MaxLength = 256;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTestRecordRow NewQCondenserTestRecordRow() {
                return ((QCondenserTestRecordRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QCondenserTestRecordRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(QCondenserTestRecordRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QCondenserTestRecordRowChanged != null)) {
                    this.QCondenserTestRecordRowChanged(this, new QCondenserTestRecordRowChangeEvent(((QCondenserTestRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QCondenserTestRecordRowChanging != null)) {
                    this.QCondenserTestRecordRowChanging(this, new QCondenserTestRecordRowChangeEvent(((QCondenserTestRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QCondenserTestRecordRowDeleted != null)) {
                    this.QCondenserTestRecordRowDeleted(this, new QCondenserTestRecordRowChangeEvent(((QCondenserTestRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QCondenserTestRecordRowDeleting != null)) {
                    this.QCondenserTestRecordRowDeleting(this, new QCondenserTestRecordRowChangeEvent(((QCondenserTestRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveQCondenserTestRecordRow(QCondenserTestRecordRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetQuery ds = new DataSetQuery();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QCondenserTestRecordDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QCondenserTestDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCondenserTestID;
            
            private global::System.Data.DataColumn columnCondenserID;
            
            private global::System.Data.DataColumn columnCondenserTestType;
            
            private global::System.Data.DataColumn columnCondenserTestDate;
            
            private global::System.Data.DataColumn columnCondenserTestEquipment;
            
            private global::System.Data.DataColumn columnTestVoltageImageForm;
            
            private global::System.Data.DataColumn columnTestVoltageImagePoints;
            
            private global::System.Data.DataColumn columnTestVoltageFrequency;
            
            private global::System.Data.DataColumn columnTestVoltageAmplitude;
            
            private global::System.Data.DataColumn columnAnalysisDateProbe;
            
            private global::System.Data.DataColumn columnAnalysisDateExecute;
            
            private global::System.Data.DataColumn columnH2;
            
            private global::System.Data.DataColumn columnCH4;
            
            private global::System.Data.DataColumn columnCO;
            
            private global::System.Data.DataColumn columnCO2;
            
            private global::System.Data.DataColumn columnC2H4;
            
            private global::System.Data.DataColumn columnC2H6;
            
            private global::System.Data.DataColumn columnC2H2;
            
            private global::System.Data.DataColumn columnAnalysisEmployeeFIO;
            
            private global::System.Data.DataColumn columnH2_Vabs;
            
            private global::System.Data.DataColumn columnH2_Votn;
            
            private global::System.Data.DataColumn columnO2;
            
            private global::System.Data.DataColumn columnO2_Vabs;
            
            private global::System.Data.DataColumn columnO2_Votn;
            
            private global::System.Data.DataColumn columnN2;
            
            private global::System.Data.DataColumn columnN2_Vabs;
            
            private global::System.Data.DataColumn columnN2_Votn;
            
            private global::System.Data.DataColumn columnCH4_Vabs;
            
            private global::System.Data.DataColumn columnCH4_Votn;
            
            private global::System.Data.DataColumn columnCO_Vabs;
            
            private global::System.Data.DataColumn columnCO_Votn;
            
            private global::System.Data.DataColumn columnCO2_Vabs;
            
            private global::System.Data.DataColumn columnCO2_Votn;
            
            private global::System.Data.DataColumn columnC2H4_Vabs;
            
            private global::System.Data.DataColumn columnC2H4_Votn;
            
            private global::System.Data.DataColumn columnC2H6_Vabs;
            
            private global::System.Data.DataColumn columnC2H6_Votn;
            
            private global::System.Data.DataColumn columnC2H2_Vabs;
            
            private global::System.Data.DataColumn columnC2H2_Votn;
            
            private global::System.Data.DataColumn columnCycleCount;
            
            private global::System.Data.DataColumn columnCH3OH;
            
            private global::System.Data.DataColumn columnCH3OH_Vabs;
            
            private global::System.Data.DataColumn columnCH3OH_Votn;
            
            private global::System.Data.DataColumn columnTemperature;
            
            private global::System.Data.DataColumn columnCondenserState;
            
            private global::System.Data.DataColumn columnRecommendation;
            
            private global::System.Data.DataColumn columnConclusion;
            
            private global::System.Data.DataColumn columnCCNext;
            
            private global::System.Data.DataColumn columnVR;
            
            private global::System.Data.DataColumn columnKCF;
            
            private global::System.Data.DataColumn columnCO2_CO;
            
            private global::System.Data.DataColumn columnCO2_CO_Vabs;
            
            private global::System.Data.DataColumn columnCO2_CO_Votn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTestDataTable() {
                this.TableName = "QCondenserTest";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QCondenserTestDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected QCondenserTestDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserTestIDColumn {
                get {
                    return this.columnCondenserTestID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserIDColumn {
                get {
                    return this.columnCondenserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserTestTypeColumn {
                get {
                    return this.columnCondenserTestType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserTestDateColumn {
                get {
                    return this.columnCondenserTestDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserTestEquipmentColumn {
                get {
                    return this.columnCondenserTestEquipment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TestVoltageImageFormColumn {
                get {
                    return this.columnTestVoltageImageForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TestVoltageImagePointsColumn {
                get {
                    return this.columnTestVoltageImagePoints;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TestVoltageFrequencyColumn {
                get {
                    return this.columnTestVoltageFrequency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TestVoltageAmplitudeColumn {
                get {
                    return this.columnTestVoltageAmplitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnalysisDateProbeColumn {
                get {
                    return this.columnAnalysisDateProbe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnalysisDateExecuteColumn {
                get {
                    return this.columnAnalysisDateExecute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn H2Column {
                get {
                    return this.columnH2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CH4Column {
                get {
                    return this.columnCH4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COColumn {
                get {
                    return this.columnCO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CO2Column {
                get {
                    return this.columnCO2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C2H4Column {
                get {
                    return this.columnC2H4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C2H6Column {
                get {
                    return this.columnC2H6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C2H2Column {
                get {
                    return this.columnC2H2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnalysisEmployeeFIOColumn {
                get {
                    return this.columnAnalysisEmployeeFIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn H2_VabsColumn {
                get {
                    return this.columnH2_Vabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn H2_VotnColumn {
                get {
                    return this.columnH2_Votn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn O2Column {
                get {
                    return this.columnO2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn O2_VabsColumn {
                get {
                    return this.columnO2_Vabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn O2_VotnColumn {
                get {
                    return this.columnO2_Votn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn N2Column {
                get {
                    return this.columnN2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn N2_VabsColumn {
                get {
                    return this.columnN2_Vabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn N2_VotnColumn {
                get {
                    return this.columnN2_Votn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CH4_VabsColumn {
                get {
                    return this.columnCH4_Vabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CH4_VotnColumn {
                get {
                    return this.columnCH4_Votn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CO_VabsColumn {
                get {
                    return this.columnCO_Vabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CO_VotnColumn {
                get {
                    return this.columnCO_Votn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CO2_VabsColumn {
                get {
                    return this.columnCO2_Vabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CO2_VotnColumn {
                get {
                    return this.columnCO2_Votn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C2H4_VabsColumn {
                get {
                    return this.columnC2H4_Vabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C2H4_VotnColumn {
                get {
                    return this.columnC2H4_Votn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C2H6_VabsColumn {
                get {
                    return this.columnC2H6_Vabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C2H6_VotnColumn {
                get {
                    return this.columnC2H6_Votn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C2H2_VabsColumn {
                get {
                    return this.columnC2H2_Vabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C2H2_VotnColumn {
                get {
                    return this.columnC2H2_Votn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleCountColumn {
                get {
                    return this.columnCycleCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CH3OHColumn {
                get {
                    return this.columnCH3OH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CH3OH_VabsColumn {
                get {
                    return this.columnCH3OH_Vabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CH3OH_VotnColumn {
                get {
                    return this.columnCH3OH_Votn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TemperatureColumn {
                get {
                    return this.columnTemperature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserStateColumn {
                get {
                    return this.columnCondenserState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecommendationColumn {
                get {
                    return this.columnRecommendation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConclusionColumn {
                get {
                    return this.columnConclusion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CCNextColumn {
                get {
                    return this.columnCCNext;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VRColumn {
                get {
                    return this.columnVR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KCFColumn {
                get {
                    return this.columnKCF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CO2_COColumn {
                get {
                    return this.columnCO2_CO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CO2_CO_VabsColumn {
                get {
                    return this.columnCO2_CO_Vabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CO2_CO_VotnColumn {
                get {
                    return this.columnCO2_CO_Votn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTestRow this[int index] {
                get {
                    return ((QCondenserTestRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserTestRowChangeEventHandler QCondenserTestRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserTestRowChangeEventHandler QCondenserTestRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserTestRowChangeEventHandler QCondenserTestRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserTestRowChangeEventHandler QCondenserTestRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddQCondenserTestRow(QCondenserTestRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTestRow AddQCondenserTestRow(
                        QCondenserTestRecordRow parentQCondenserTestRecordRowByFK_CondenserTest_01, 
                        long CondenserTestType, 
                        System.DateTime CondenserTestDate, 
                        string CondenserTestEquipment, 
                        byte[] TestVoltageImageForm, 
                        string TestVoltageImagePoints, 
                        decimal TestVoltageFrequency, 
                        decimal TestVoltageAmplitude, 
                        System.DateTime AnalysisDateProbe, 
                        System.DateTime AnalysisDateExecute, 
                        decimal H2, 
                        decimal CH4, 
                        decimal CO, 
                        decimal CO2, 
                        decimal C2H4, 
                        decimal C2H6, 
                        decimal C2H2, 
                        string AnalysisEmployeeFIO, 
                        decimal H2_Vabs, 
                        decimal H2_Votn, 
                        decimal O2, 
                        decimal O2_Vabs, 
                        decimal O2_Votn, 
                        decimal N2, 
                        decimal N2_Vabs, 
                        decimal N2_Votn, 
                        decimal CH4_Vabs, 
                        decimal CH4_Votn, 
                        decimal CO_Vabs, 
                        decimal CO_Votn, 
                        decimal CO2_Vabs, 
                        decimal CO2_Votn, 
                        decimal C2H4_Vabs, 
                        decimal C2H4_Votn, 
                        decimal C2H6_Vabs, 
                        decimal C2H6_Votn, 
                        decimal C2H2_Vabs, 
                        decimal C2H2_Votn, 
                        long CycleCount, 
                        decimal CH3OH, 
                        decimal CH3OH_Vabs, 
                        decimal CH3OH_Votn, 
                        string Temperature, 
                        long CondenserState, 
                        string Recommendation, 
                        string Conclusion, 
                        long CCNext, 
                        double VR, 
                        double KCF, 
                        decimal CO2_CO, 
                        decimal CO2_CO_Vabs, 
                        decimal CO2_CO_Votn) {
                QCondenserTestRow rowQCondenserTestRow = ((QCondenserTestRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        CondenserTestType,
                        CondenserTestDate,
                        CondenserTestEquipment,
                        TestVoltageImageForm,
                        TestVoltageImagePoints,
                        TestVoltageFrequency,
                        TestVoltageAmplitude,
                        AnalysisDateProbe,
                        AnalysisDateExecute,
                        H2,
                        CH4,
                        CO,
                        CO2,
                        C2H4,
                        C2H6,
                        C2H2,
                        AnalysisEmployeeFIO,
                        H2_Vabs,
                        H2_Votn,
                        O2,
                        O2_Vabs,
                        O2_Votn,
                        N2,
                        N2_Vabs,
                        N2_Votn,
                        CH4_Vabs,
                        CH4_Votn,
                        CO_Vabs,
                        CO_Votn,
                        CO2_Vabs,
                        CO2_Votn,
                        C2H4_Vabs,
                        C2H4_Votn,
                        C2H6_Vabs,
                        C2H6_Votn,
                        C2H2_Vabs,
                        C2H2_Votn,
                        CycleCount,
                        CH3OH,
                        CH3OH_Vabs,
                        CH3OH_Votn,
                        Temperature,
                        CondenserState,
                        Recommendation,
                        Conclusion,
                        CCNext,
                        VR,
                        KCF,
                        CO2_CO,
                        CO2_CO_Vabs,
                        CO2_CO_Votn};
                if ((parentQCondenserTestRecordRowByFK_CondenserTest_01 != null)) {
                    columnValuesArray[1] = parentQCondenserTestRecordRowByFK_CondenserTest_01[0];
                }
                rowQCondenserTestRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQCondenserTestRow);
                return rowQCondenserTestRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTestRow FindByCondenserTestID(long CondenserTestID) {
                return ((QCondenserTestRow)(this.Rows.Find(new object[] {
                            CondenserTestID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                QCondenserTestDataTable cln = ((QCondenserTestDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QCondenserTestDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCondenserTestID = base.Columns["CondenserTestID"];
                this.columnCondenserID = base.Columns["CondenserID"];
                this.columnCondenserTestType = base.Columns["CondenserTestType"];
                this.columnCondenserTestDate = base.Columns["CondenserTestDate"];
                this.columnCondenserTestEquipment = base.Columns["CondenserTestEquipment"];
                this.columnTestVoltageImageForm = base.Columns["TestVoltageImageForm"];
                this.columnTestVoltageImagePoints = base.Columns["TestVoltageImagePoints"];
                this.columnTestVoltageFrequency = base.Columns["TestVoltageFrequency"];
                this.columnTestVoltageAmplitude = base.Columns["TestVoltageAmplitude"];
                this.columnAnalysisDateProbe = base.Columns["AnalysisDateProbe"];
                this.columnAnalysisDateExecute = base.Columns["AnalysisDateExecute"];
                this.columnH2 = base.Columns["H2"];
                this.columnCH4 = base.Columns["CH4"];
                this.columnCO = base.Columns["CO"];
                this.columnCO2 = base.Columns["CO2"];
                this.columnC2H4 = base.Columns["C2H4"];
                this.columnC2H6 = base.Columns["C2H6"];
                this.columnC2H2 = base.Columns["C2H2"];
                this.columnAnalysisEmployeeFIO = base.Columns["AnalysisEmployeeFIO"];
                this.columnH2_Vabs = base.Columns["H2_Vabs"];
                this.columnH2_Votn = base.Columns["H2_Votn"];
                this.columnO2 = base.Columns["O2"];
                this.columnO2_Vabs = base.Columns["O2_Vabs"];
                this.columnO2_Votn = base.Columns["O2_Votn"];
                this.columnN2 = base.Columns["N2"];
                this.columnN2_Vabs = base.Columns["N2_Vabs"];
                this.columnN2_Votn = base.Columns["N2_Votn"];
                this.columnCH4_Vabs = base.Columns["CH4_Vabs"];
                this.columnCH4_Votn = base.Columns["CH4_Votn"];
                this.columnCO_Vabs = base.Columns["CO_Vabs"];
                this.columnCO_Votn = base.Columns["CO_Votn"];
                this.columnCO2_Vabs = base.Columns["CO2_Vabs"];
                this.columnCO2_Votn = base.Columns["CO2_Votn"];
                this.columnC2H4_Vabs = base.Columns["C2H4_Vabs"];
                this.columnC2H4_Votn = base.Columns["C2H4_Votn"];
                this.columnC2H6_Vabs = base.Columns["C2H6_Vabs"];
                this.columnC2H6_Votn = base.Columns["C2H6_Votn"];
                this.columnC2H2_Vabs = base.Columns["C2H2_Vabs"];
                this.columnC2H2_Votn = base.Columns["C2H2_Votn"];
                this.columnCycleCount = base.Columns["CycleCount"];
                this.columnCH3OH = base.Columns["CH3OH"];
                this.columnCH3OH_Vabs = base.Columns["CH3OH_Vabs"];
                this.columnCH3OH_Votn = base.Columns["CH3OH_Votn"];
                this.columnTemperature = base.Columns["Temperature"];
                this.columnCondenserState = base.Columns["CondenserState"];
                this.columnRecommendation = base.Columns["Recommendation"];
                this.columnConclusion = base.Columns["Conclusion"];
                this.columnCCNext = base.Columns["CCNext"];
                this.columnVR = base.Columns["VR"];
                this.columnKCF = base.Columns["KCF"];
                this.columnCO2_CO = base.Columns["CO2_CO"];
                this.columnCO2_CO_Vabs = base.Columns["CO2_CO_Vabs"];
                this.columnCO2_CO_Votn = base.Columns["CO2_CO_Votn"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCondenserTestID = new global::System.Data.DataColumn("CondenserTestID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserTestID);
                this.columnCondenserID = new global::System.Data.DataColumn("CondenserID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserID);
                this.columnCondenserTestType = new global::System.Data.DataColumn("CondenserTestType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserTestType);
                this.columnCondenserTestDate = new global::System.Data.DataColumn("CondenserTestDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserTestDate);
                this.columnCondenserTestEquipment = new global::System.Data.DataColumn("CondenserTestEquipment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserTestEquipment);
                this.columnTestVoltageImageForm = new global::System.Data.DataColumn("TestVoltageImageForm", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestVoltageImageForm);
                this.columnTestVoltageImagePoints = new global::System.Data.DataColumn("TestVoltageImagePoints", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestVoltageImagePoints);
                this.columnTestVoltageFrequency = new global::System.Data.DataColumn("TestVoltageFrequency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestVoltageFrequency);
                this.columnTestVoltageAmplitude = new global::System.Data.DataColumn("TestVoltageAmplitude", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestVoltageAmplitude);
                this.columnAnalysisDateProbe = new global::System.Data.DataColumn("AnalysisDateProbe", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnalysisDateProbe);
                this.columnAnalysisDateExecute = new global::System.Data.DataColumn("AnalysisDateExecute", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnalysisDateExecute);
                this.columnH2 = new global::System.Data.DataColumn("H2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH2);
                this.columnCH4 = new global::System.Data.DataColumn("CH4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCH4);
                this.columnCO = new global::System.Data.DataColumn("CO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCO);
                this.columnCO2 = new global::System.Data.DataColumn("CO2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCO2);
                this.columnC2H4 = new global::System.Data.DataColumn("C2H4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2H4);
                this.columnC2H6 = new global::System.Data.DataColumn("C2H6", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2H6);
                this.columnC2H2 = new global::System.Data.DataColumn("C2H2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2H2);
                this.columnAnalysisEmployeeFIO = new global::System.Data.DataColumn("AnalysisEmployeeFIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnalysisEmployeeFIO);
                this.columnH2_Vabs = new global::System.Data.DataColumn("H2_Vabs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH2_Vabs);
                this.columnH2_Votn = new global::System.Data.DataColumn("H2_Votn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH2_Votn);
                this.columnO2 = new global::System.Data.DataColumn("O2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO2);
                this.columnO2_Vabs = new global::System.Data.DataColumn("O2_Vabs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO2_Vabs);
                this.columnO2_Votn = new global::System.Data.DataColumn("O2_Votn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO2_Votn);
                this.columnN2 = new global::System.Data.DataColumn("N2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN2);
                this.columnN2_Vabs = new global::System.Data.DataColumn("N2_Vabs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN2_Vabs);
                this.columnN2_Votn = new global::System.Data.DataColumn("N2_Votn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN2_Votn);
                this.columnCH4_Vabs = new global::System.Data.DataColumn("CH4_Vabs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCH4_Vabs);
                this.columnCH4_Votn = new global::System.Data.DataColumn("CH4_Votn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCH4_Votn);
                this.columnCO_Vabs = new global::System.Data.DataColumn("CO_Vabs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCO_Vabs);
                this.columnCO_Votn = new global::System.Data.DataColumn("CO_Votn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCO_Votn);
                this.columnCO2_Vabs = new global::System.Data.DataColumn("CO2_Vabs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCO2_Vabs);
                this.columnCO2_Votn = new global::System.Data.DataColumn("CO2_Votn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCO2_Votn);
                this.columnC2H4_Vabs = new global::System.Data.DataColumn("C2H4_Vabs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2H4_Vabs);
                this.columnC2H4_Votn = new global::System.Data.DataColumn("C2H4_Votn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2H4_Votn);
                this.columnC2H6_Vabs = new global::System.Data.DataColumn("C2H6_Vabs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2H6_Vabs);
                this.columnC2H6_Votn = new global::System.Data.DataColumn("C2H6_Votn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2H6_Votn);
                this.columnC2H2_Vabs = new global::System.Data.DataColumn("C2H2_Vabs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2H2_Vabs);
                this.columnC2H2_Votn = new global::System.Data.DataColumn("C2H2_Votn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2H2_Votn);
                this.columnCycleCount = new global::System.Data.DataColumn("CycleCount", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleCount);
                this.columnCH3OH = new global::System.Data.DataColumn("CH3OH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCH3OH);
                this.columnCH3OH_Vabs = new global::System.Data.DataColumn("CH3OH_Vabs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCH3OH_Vabs);
                this.columnCH3OH_Votn = new global::System.Data.DataColumn("CH3OH_Votn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCH3OH_Votn);
                this.columnTemperature = new global::System.Data.DataColumn("Temperature", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemperature);
                this.columnCondenserState = new global::System.Data.DataColumn("CondenserState", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserState);
                this.columnRecommendation = new global::System.Data.DataColumn("Recommendation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecommendation);
                this.columnConclusion = new global::System.Data.DataColumn("Conclusion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConclusion);
                this.columnCCNext = new global::System.Data.DataColumn("CCNext", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCNext);
                this.columnVR = new global::System.Data.DataColumn("VR", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVR);
                this.columnKCF = new global::System.Data.DataColumn("KCF", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKCF);
                this.columnCO2_CO = new global::System.Data.DataColumn("CO2_CO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCO2_CO);
                this.columnCO2_CO_Vabs = new global::System.Data.DataColumn("CO2_CO_Vabs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCO2_CO_Vabs);
                this.columnCO2_CO_Votn = new global::System.Data.DataColumn("CO2_CO_Votn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCO2_CO_Votn);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCondenserTestID}, true));
                this.columnCondenserTestID.AutoIncrement = true;
                this.columnCondenserTestID.AutoIncrementSeed = -1;
                this.columnCondenserTestID.AutoIncrementStep = -1;
                this.columnCondenserTestID.AllowDBNull = false;
                this.columnCondenserTestID.Unique = true;
                this.columnCondenserID.AllowDBNull = false;
                this.columnCondenserTestType.AllowDBNull = false;
                this.columnCondenserTestDate.AllowDBNull = false;
                this.columnCondenserTestEquipment.AllowDBNull = false;
                this.columnCondenserTestEquipment.DefaultValue = ((string)(""));
                this.columnCondenserTestEquipment.MaxLength = 1024;
                this.columnTestVoltageImagePoints.AllowDBNull = false;
                this.columnTestVoltageImagePoints.DefaultValue = ((string)(""));
                this.columnTestVoltageImagePoints.MaxLength = 1024;
                this.columnTestVoltageFrequency.AllowDBNull = false;
                this.columnAnalysisEmployeeFIO.DefaultValue = ((string)(""));
                this.columnAnalysisEmployeeFIO.MaxLength = 256;
                this.columnTemperature.MaxLength = 50;
                this.columnCondenserState.AllowDBNull = false;
                this.columnRecommendation.MaxLength = 256;
                this.columnConclusion.MaxLength = 256;
                this.columnCO2_CO_Vabs.Caption = "CO2_CO";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTestRow NewQCondenserTestRow() {
                return ((QCondenserTestRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QCondenserTestRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(QCondenserTestRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QCondenserTestRowChanged != null)) {
                    this.QCondenserTestRowChanged(this, new QCondenserTestRowChangeEvent(((QCondenserTestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QCondenserTestRowChanging != null)) {
                    this.QCondenserTestRowChanging(this, new QCondenserTestRowChangeEvent(((QCondenserTestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QCondenserTestRowDeleted != null)) {
                    this.QCondenserTestRowDeleted(this, new QCondenserTestRowChangeEvent(((QCondenserTestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QCondenserTestRowDeleting != null)) {
                    this.QCondenserTestRowDeleting(this, new QCondenserTestRowChangeEvent(((QCondenserTestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveQCondenserTestRow(QCondenserTestRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetQuery ds = new DataSetQuery();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QCondenserTestDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QCondenserTypesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCasingType;
            
            private global::System.Data.DataColumn columnCasingThickness;
            
            private global::System.Data.DataColumn columnCondenserTypeID;
            
            private global::System.Data.DataColumn columnCondenserTypeName;
            
            private global::System.Data.DataColumn columnInsulatingLiquidTypeID;
            
            private global::System.Data.DataColumn columnDielectricType;
            
            private global::System.Data.DataColumn columnDielectricThickness;
            
            private global::System.Data.DataColumn columnTangentAngle;
            
            private global::System.Data.DataColumn columnDielectricInductiveCapacity;
            
            private global::System.Data.DataColumn columnStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypesDataTable() {
                this.TableName = "QCondenserTypes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QCondenserTypesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected QCondenserTypesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CasingTypeColumn {
                get {
                    return this.columnCasingType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CasingThicknessColumn {
                get {
                    return this.columnCasingThickness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserTypeIDColumn {
                get {
                    return this.columnCondenserTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserTypeNameColumn {
                get {
                    return this.columnCondenserTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsulatingLiquidTypeIDColumn {
                get {
                    return this.columnInsulatingLiquidTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DielectricTypeColumn {
                get {
                    return this.columnDielectricType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DielectricThicknessColumn {
                get {
                    return this.columnDielectricThickness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TangentAngleColumn {
                get {
                    return this.columnTangentAngle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DielectricInductiveCapacityColumn {
                get {
                    return this.columnDielectricInductiveCapacity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypesRow this[int index] {
                get {
                    return ((QCondenserTypesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserTypesRowChangeEventHandler QCondenserTypesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserTypesRowChangeEventHandler QCondenserTypesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserTypesRowChangeEventHandler QCondenserTypesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserTypesRowChangeEventHandler QCondenserTypesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddQCondenserTypesRow(QCondenserTypesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypesRow AddQCondenserTypesRow(long CasingType, decimal CasingThickness, string CondenserTypeName, QInsulatingLiquidTypesRow parentQInsulatingLiquidTypesRowByFK_CondenserTypes_0, long DielectricType, decimal DielectricThickness, decimal TangentAngle, decimal DielectricInductiveCapacity, object Status) {
                QCondenserTypesRow rowQCondenserTypesRow = ((QCondenserTypesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CasingType,
                        CasingThickness,
                        null,
                        CondenserTypeName,
                        null,
                        DielectricType,
                        DielectricThickness,
                        TangentAngle,
                        DielectricInductiveCapacity,
                        Status};
                if ((parentQInsulatingLiquidTypesRowByFK_CondenserTypes_0 != null)) {
                    columnValuesArray[4] = parentQInsulatingLiquidTypesRowByFK_CondenserTypes_0[0];
                }
                rowQCondenserTypesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQCondenserTypesRow);
                return rowQCondenserTypesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypesRow FindByCondenserTypeID(long CondenserTypeID) {
                return ((QCondenserTypesRow)(this.Rows.Find(new object[] {
                            CondenserTypeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                QCondenserTypesDataTable cln = ((QCondenserTypesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QCondenserTypesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCasingType = base.Columns["CasingType"];
                this.columnCasingThickness = base.Columns["CasingThickness"];
                this.columnCondenserTypeID = base.Columns["CondenserTypeID"];
                this.columnCondenserTypeName = base.Columns["CondenserTypeName"];
                this.columnInsulatingLiquidTypeID = base.Columns["InsulatingLiquidTypeID"];
                this.columnDielectricType = base.Columns["DielectricType"];
                this.columnDielectricThickness = base.Columns["DielectricThickness"];
                this.columnTangentAngle = base.Columns["TangentAngle"];
                this.columnDielectricInductiveCapacity = base.Columns["DielectricInductiveCapacity"];
                this.columnStatus = base.Columns["Status"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCasingType = new global::System.Data.DataColumn("CasingType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCasingType);
                this.columnCasingThickness = new global::System.Data.DataColumn("CasingThickness", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCasingThickness);
                this.columnCondenserTypeID = new global::System.Data.DataColumn("CondenserTypeID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserTypeID);
                this.columnCondenserTypeName = new global::System.Data.DataColumn("CondenserTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserTypeName);
                this.columnInsulatingLiquidTypeID = new global::System.Data.DataColumn("InsulatingLiquidTypeID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsulatingLiquidTypeID);
                this.columnDielectricType = new global::System.Data.DataColumn("DielectricType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDielectricType);
                this.columnDielectricThickness = new global::System.Data.DataColumn("DielectricThickness", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDielectricThickness);
                this.columnTangentAngle = new global::System.Data.DataColumn("TangentAngle", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTangentAngle);
                this.columnDielectricInductiveCapacity = new global::System.Data.DataColumn("DielectricInductiveCapacity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDielectricInductiveCapacity);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(object), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCondenserTypeID}, true));
                this.columnCondenserTypeID.AutoIncrement = true;
                this.columnCondenserTypeID.AutoIncrementSeed = -1;
                this.columnCondenserTypeID.AutoIncrementStep = -1;
                this.columnCondenserTypeID.AllowDBNull = false;
                this.columnCondenserTypeID.Unique = true;
                this.columnCondenserTypeName.AllowDBNull = false;
                this.columnCondenserTypeName.DefaultValue = ((string)(""));
                this.columnCondenserTypeName.MaxLength = 256;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypesRow NewQCondenserTypesRow() {
                return ((QCondenserTypesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QCondenserTypesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(QCondenserTypesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QCondenserTypesRowChanged != null)) {
                    this.QCondenserTypesRowChanged(this, new QCondenserTypesRowChangeEvent(((QCondenserTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QCondenserTypesRowChanging != null)) {
                    this.QCondenserTypesRowChanging(this, new QCondenserTypesRowChangeEvent(((QCondenserTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QCondenserTypesRowDeleted != null)) {
                    this.QCondenserTypesRowDeleted(this, new QCondenserTypesRowChangeEvent(((QCondenserTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QCondenserTypesRowDeleting != null)) {
                    this.QCondenserTypesRowDeleting(this, new QCondenserTypesRowChangeEvent(((QCondenserTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveQCondenserTypesRow(QCondenserTypesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetQuery ds = new DataSetQuery();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QCondenserTypesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QCondenserTypeParametersDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnKoefID;
            
            private global::System.Data.DataColumn columnCondenserTypeID;
            
            private global::System.Data.DataColumn columnKI1;
            
            private global::System.Data.DataColumn columnKoefA;
            
            private global::System.Data.DataColumn columnKoefB;
            
            private global::System.Data.DataColumn columnFunctionType;
            
            private global::System.Data.DataColumn columnKoefR2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypeParametersDataTable() {
                this.TableName = "QCondenserTypeParameters";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QCondenserTypeParametersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected QCondenserTypeParametersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KoefIDColumn {
                get {
                    return this.columnKoefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserTypeIDColumn {
                get {
                    return this.columnCondenserTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KI1Column {
                get {
                    return this.columnKI1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KoefAColumn {
                get {
                    return this.columnKoefA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KoefBColumn {
                get {
                    return this.columnKoefB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FunctionTypeColumn {
                get {
                    return this.columnFunctionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KoefR2Column {
                get {
                    return this.columnKoefR2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypeParametersRow this[int index] {
                get {
                    return ((QCondenserTypeParametersRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserTypeParametersRowChangeEventHandler QCondenserTypeParametersRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserTypeParametersRowChangeEventHandler QCondenserTypeParametersRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserTypeParametersRowChangeEventHandler QCondenserTypeParametersRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserTypeParametersRowChangeEventHandler QCondenserTypeParametersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddQCondenserTypeParametersRow(QCondenserTypeParametersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypeParametersRow AddQCondenserTypeParametersRow(long KoefID, decimal KI1, decimal KoefA, decimal KoefB, long FunctionType, decimal KoefR2) {
                QCondenserTypeParametersRow rowQCondenserTypeParametersRow = ((QCondenserTypeParametersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KoefID,
                        null,
                        KI1,
                        KoefA,
                        KoefB,
                        FunctionType,
                        KoefR2};
                rowQCondenserTypeParametersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQCondenserTypeParametersRow);
                return rowQCondenserTypeParametersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypeParametersRow FindByCondenserTypeID(long CondenserTypeID) {
                return ((QCondenserTypeParametersRow)(this.Rows.Find(new object[] {
                            CondenserTypeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                QCondenserTypeParametersDataTable cln = ((QCondenserTypeParametersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QCondenserTypeParametersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnKoefID = base.Columns["KoefID"];
                this.columnCondenserTypeID = base.Columns["CondenserTypeID"];
                this.columnKI1 = base.Columns["KI1"];
                this.columnKoefA = base.Columns["KoefA"];
                this.columnKoefB = base.Columns["KoefB"];
                this.columnFunctionType = base.Columns["FunctionType"];
                this.columnKoefR2 = base.Columns["KoefR2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnKoefID = new global::System.Data.DataColumn("KoefID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKoefID);
                this.columnCondenserTypeID = new global::System.Data.DataColumn("CondenserTypeID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserTypeID);
                this.columnKI1 = new global::System.Data.DataColumn("KI1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKI1);
                this.columnKoefA = new global::System.Data.DataColumn("KoefA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKoefA);
                this.columnKoefB = new global::System.Data.DataColumn("KoefB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKoefB);
                this.columnFunctionType = new global::System.Data.DataColumn("FunctionType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunctionType);
                this.columnKoefR2 = new global::System.Data.DataColumn("KoefR2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKoefR2);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCondenserTypeID}, true));
                this.columnCondenserTypeID.AutoIncrement = true;
                this.columnCondenserTypeID.AutoIncrementSeed = -1;
                this.columnCondenserTypeID.AutoIncrementStep = -1;
                this.columnCondenserTypeID.AllowDBNull = false;
                this.columnCondenserTypeID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypeParametersRow NewQCondenserTypeParametersRow() {
                return ((QCondenserTypeParametersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QCondenserTypeParametersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(QCondenserTypeParametersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QCondenserTypeParametersRowChanged != null)) {
                    this.QCondenserTypeParametersRowChanged(this, new QCondenserTypeParametersRowChangeEvent(((QCondenserTypeParametersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QCondenserTypeParametersRowChanging != null)) {
                    this.QCondenserTypeParametersRowChanging(this, new QCondenserTypeParametersRowChangeEvent(((QCondenserTypeParametersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QCondenserTypeParametersRowDeleted != null)) {
                    this.QCondenserTypeParametersRowDeleted(this, new QCondenserTypeParametersRowChangeEvent(((QCondenserTypeParametersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QCondenserTypeParametersRowDeleting != null)) {
                    this.QCondenserTypeParametersRowDeleting(this, new QCondenserTypeParametersRowChangeEvent(((QCondenserTypeParametersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveQCondenserTypeParametersRow(QCondenserTypeParametersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetQuery ds = new DataSetQuery();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QCondenserTypeParametersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QCondenserTypesForTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnKoefID;
            
            private global::System.Data.DataColumn columnCondenserTypeID;
            
            private global::System.Data.DataColumn columnCondenserTypeName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypesForTableDataTable() {
                this.TableName = "QCondenserTypesForTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QCondenserTypesForTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected QCondenserTypesForTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KoefIDColumn {
                get {
                    return this.columnKoefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserTypeIDColumn {
                get {
                    return this.columnCondenserTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserTypeNameColumn {
                get {
                    return this.columnCondenserTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypesForTableRow this[int index] {
                get {
                    return ((QCondenserTypesForTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserTypesForTableRowChangeEventHandler QCondenserTypesForTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserTypesForTableRowChangeEventHandler QCondenserTypesForTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserTypesForTableRowChangeEventHandler QCondenserTypesForTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondenserTypesForTableRowChangeEventHandler QCondenserTypesForTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddQCondenserTypesForTableRow(QCondenserTypesForTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypesForTableRow AddQCondenserTypesForTableRow(long KoefID, QCondenserTypesRow parentQCondenserTypesRowByFK_CondenserTypeParameters_01, string CondenserTypeName) {
                QCondenserTypesForTableRow rowQCondenserTypesForTableRow = ((QCondenserTypesForTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KoefID,
                        null,
                        CondenserTypeName};
                if ((parentQCondenserTypesRowByFK_CondenserTypeParameters_01 != null)) {
                    columnValuesArray[1] = parentQCondenserTypesRowByFK_CondenserTypeParameters_01[2];
                }
                rowQCondenserTypesForTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQCondenserTypesForTableRow);
                return rowQCondenserTypesForTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypesForTableRow FindByKoefID(long KoefID) {
                return ((QCondenserTypesForTableRow)(this.Rows.Find(new object[] {
                            KoefID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                QCondenserTypesForTableDataTable cln = ((QCondenserTypesForTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QCondenserTypesForTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnKoefID = base.Columns["KoefID"];
                this.columnCondenserTypeID = base.Columns["CondenserTypeID"];
                this.columnCondenserTypeName = base.Columns["CondenserTypeName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnKoefID = new global::System.Data.DataColumn("KoefID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKoefID);
                this.columnCondenserTypeID = new global::System.Data.DataColumn("CondenserTypeID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserTypeID);
                this.columnCondenserTypeName = new global::System.Data.DataColumn("CondenserTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserTypeName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnKoefID}, true));
                this.columnKoefID.AllowDBNull = false;
                this.columnKoefID.Unique = true;
                this.columnCondenserTypeID.AllowDBNull = false;
                this.columnCondenserTypeName.AllowDBNull = false;
                this.columnCondenserTypeName.MaxLength = 256;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypesForTableRow NewQCondenserTypesForTableRow() {
                return ((QCondenserTypesForTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QCondenserTypesForTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(QCondenserTypesForTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QCondenserTypesForTableRowChanged != null)) {
                    this.QCondenserTypesForTableRowChanged(this, new QCondenserTypesForTableRowChangeEvent(((QCondenserTypesForTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QCondenserTypesForTableRowChanging != null)) {
                    this.QCondenserTypesForTableRowChanging(this, new QCondenserTypesForTableRowChangeEvent(((QCondenserTypesForTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QCondenserTypesForTableRowDeleted != null)) {
                    this.QCondenserTypesForTableRowDeleted(this, new QCondenserTypesForTableRowChangeEvent(((QCondenserTypesForTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QCondenserTypesForTableRowDeleting != null)) {
                    this.QCondenserTypesForTableRowDeleting(this, new QCondenserTypesForTableRowChangeEvent(((QCondenserTypesForTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveQCondenserTypesForTableRow(QCondenserTypesForTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetQuery ds = new DataSetQuery();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QCondenserTypesForTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QCondensersDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCondenserID;
            
            private global::System.Data.DataColumn columnCondenserNumber;
            
            private global::System.Data.DataColumn columnCondenserTypeName;
            
            private global::System.Data.DataColumn columnInsulatingLiquidTypeName;
            
            private global::System.Data.DataColumn columnNominalVoltage;
            
            private global::System.Data.DataColumn columnNominalCapacitance;
            
            private global::System.Data.DataColumn columnCondenserState;
            
            private global::System.Data.DataColumn columnCondenserTestType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondensersDataTable() {
                this.TableName = "QCondensers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QCondensersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected QCondensersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserIDColumn {
                get {
                    return this.columnCondenserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserNumberColumn {
                get {
                    return this.columnCondenserNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserTypeNameColumn {
                get {
                    return this.columnCondenserTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsulatingLiquidTypeNameColumn {
                get {
                    return this.columnInsulatingLiquidTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NominalVoltageColumn {
                get {
                    return this.columnNominalVoltage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NominalCapacitanceColumn {
                get {
                    return this.columnNominalCapacitance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserStateColumn {
                get {
                    return this.columnCondenserState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CondenserTestTypeColumn {
                get {
                    return this.columnCondenserTestType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondensersRow this[int index] {
                get {
                    return ((QCondensersRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondensersRowChangeEventHandler QCondensersRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondensersRowChangeEventHandler QCondensersRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondensersRowChangeEventHandler QCondensersRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QCondensersRowChangeEventHandler QCondensersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddQCondensersRow(QCondensersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondensersRow AddQCondensersRow(string CondenserNumber, string CondenserTypeName, string InsulatingLiquidTypeName, decimal NominalVoltage, decimal NominalCapacitance, long CondenserState, long CondenserTestType) {
                QCondensersRow rowQCondensersRow = ((QCondensersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CondenserNumber,
                        CondenserTypeName,
                        InsulatingLiquidTypeName,
                        NominalVoltage,
                        NominalCapacitance,
                        CondenserState,
                        CondenserTestType};
                rowQCondensersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQCondensersRow);
                return rowQCondensersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondensersRow FindByCondenserID(long CondenserID) {
                return ((QCondensersRow)(this.Rows.Find(new object[] {
                            CondenserID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                QCondensersDataTable cln = ((QCondensersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QCondensersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCondenserID = base.Columns["CondenserID"];
                this.columnCondenserNumber = base.Columns["CondenserNumber"];
                this.columnCondenserTypeName = base.Columns["CondenserTypeName"];
                this.columnInsulatingLiquidTypeName = base.Columns["InsulatingLiquidTypeName"];
                this.columnNominalVoltage = base.Columns["NominalVoltage"];
                this.columnNominalCapacitance = base.Columns["NominalCapacitance"];
                this.columnCondenserState = base.Columns["CondenserState"];
                this.columnCondenserTestType = base.Columns["CondenserTestType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCondenserID = new global::System.Data.DataColumn("CondenserID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserID);
                this.columnCondenserNumber = new global::System.Data.DataColumn("CondenserNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserNumber);
                this.columnCondenserTypeName = new global::System.Data.DataColumn("CondenserTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserTypeName);
                this.columnInsulatingLiquidTypeName = new global::System.Data.DataColumn("InsulatingLiquidTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsulatingLiquidTypeName);
                this.columnNominalVoltage = new global::System.Data.DataColumn("NominalVoltage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalVoltage);
                this.columnNominalCapacitance = new global::System.Data.DataColumn("NominalCapacitance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalCapacitance);
                this.columnCondenserState = new global::System.Data.DataColumn("CondenserState", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserState);
                this.columnCondenserTestType = new global::System.Data.DataColumn("CondenserTestType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondenserTestType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCondenserID}, true));
                this.columnCondenserID.AutoIncrement = true;
                this.columnCondenserID.AutoIncrementSeed = -1;
                this.columnCondenserID.AutoIncrementStep = -1;
                this.columnCondenserID.AllowDBNull = false;
                this.columnCondenserID.Unique = true;
                this.columnCondenserNumber.AllowDBNull = false;
                this.columnCondenserNumber.MaxLength = 64;
                this.columnCondenserTypeName.AllowDBNull = false;
                this.columnCondenserTypeName.MaxLength = 256;
                this.columnInsulatingLiquidTypeName.AllowDBNull = false;
                this.columnInsulatingLiquidTypeName.MaxLength = 256;
                this.columnNominalVoltage.AllowDBNull = false;
                this.columnNominalCapacitance.AllowDBNull = false;
                this.columnCondenserState.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondensersRow NewQCondensersRow() {
                return ((QCondensersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QCondensersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(QCondensersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QCondensersRowChanged != null)) {
                    this.QCondensersRowChanged(this, new QCondensersRowChangeEvent(((QCondensersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QCondensersRowChanging != null)) {
                    this.QCondensersRowChanging(this, new QCondensersRowChangeEvent(((QCondensersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QCondensersRowDeleted != null)) {
                    this.QCondensersRowDeleted(this, new QCondensersRowChangeEvent(((QCondensersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QCondensersRowDeleting != null)) {
                    this.QCondensersRowDeleting(this, new QCondensersRowChangeEvent(((QCondensersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveQCondensersRow(QCondensersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetQuery ds = new DataSetQuery();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QCondensersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class QMainEquipmentsRow : global::System.Data.DataRow {
            
            private QMainEquipmentsDataTable tableQMainEquipments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QMainEquipmentsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQMainEquipments = ((QMainEquipmentsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CondenserID {
                get {
                    return ((long)(this[this.tableQMainEquipments.CondenserIDColumn]));
                }
                set {
                    this[this.tableQMainEquipments.CondenserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CondenserNumber {
                get {
                    return ((string)(this[this.tableQMainEquipments.CondenserNumberColumn]));
                }
                set {
                    this[this.tableQMainEquipments.CondenserNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CondenserTypeName {
                get {
                    return ((string)(this[this.tableQMainEquipments.CondenserTypeNameColumn]));
                }
                set {
                    this[this.tableQMainEquipments.CondenserTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsulatingLiquidTypeName {
                get {
                    return ((string)(this[this.tableQMainEquipments.InsulatingLiquidTypeNameColumn]));
                }
                set {
                    this[this.tableQMainEquipments.InsulatingLiquidTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NominalVoltage {
                get {
                    return ((decimal)(this[this.tableQMainEquipments.NominalVoltageColumn]));
                }
                set {
                    this[this.tableQMainEquipments.NominalVoltageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NominalCapacitance {
                get {
                    return ((decimal)(this[this.tableQMainEquipments.NominalCapacitanceColumn]));
                }
                set {
                    this[this.tableQMainEquipments.NominalCapacitanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CondenserState {
                get {
                    return ((long)(this[this.tableQMainEquipments.CondenserStateColumn]));
                }
                set {
                    this[this.tableQMainEquipments.CondenserStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CondenserTestType {
                get {
                    try {
                        return ((long)(this[this.tableQMainEquipments.CondenserTestTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CondenserTestType\' in table \'QMainEquipments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQMainEquipments.CondenserTestTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCondenserTestTypeNull() {
                return this.IsNull(this.tableQMainEquipments.CondenserTestTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCondenserTestTypeNull() {
                this[this.tableQMainEquipments.CondenserTestTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTestRecordRow[] GetQCondenserTestRecordRows() {
                if ((this.Table.ChildRelations["FK_CondenserTest_0"] == null)) {
                    return new QCondenserTestRecordRow[0];
                }
                else {
                    return ((QCondenserTestRecordRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CondenserTest_0"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTestRow[] GetQCondenserTestRows() {
                if ((this.Table.ChildRelations["FK_CondenserTest_02"] == null)) {
                    return new QCondenserTestRow[0];
                }
                else {
                    return ((QCondenserTestRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CondenserTest_02"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class QInsulatingLiquidTypesRow : global::System.Data.DataRow {
            
            private QInsulatingLiquidTypesDataTable tableQInsulatingLiquidTypes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QInsulatingLiquidTypesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQInsulatingLiquidTypes = ((QInsulatingLiquidTypesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InsulatingLiquidTypeID {
                get {
                    return ((long)(this[this.tableQInsulatingLiquidTypes.InsulatingLiquidTypeIDColumn]));
                }
                set {
                    this[this.tableQInsulatingLiquidTypes.InsulatingLiquidTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsulatingLiquidTypeName {
                get {
                    return ((string)(this[this.tableQInsulatingLiquidTypes.InsulatingLiquidTypeNameColumn]));
                }
                set {
                    this[this.tableQInsulatingLiquidTypes.InsulatingLiquidTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypesRow[] GetQCondenserTypesRows() {
                if ((this.Table.ChildRelations["FK_CondenserTypes_0"] == null)) {
                    return new QCondenserTypesRow[0];
                }
                else {
                    return ((QCondenserTypesRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CondenserTypes_0"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class QCondenserRecordRow : global::System.Data.DataRow {
            
            private QCondenserRecordDataTable tableQCondenserRecord;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QCondenserRecordRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQCondenserRecord = ((QCondenserRecordDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CondenserTypeName {
                get {
                    try {
                        return ((string)(this[this.tableQCondenserRecord.CondenserTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CondenserTypeName\' in table \'QCondenserRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.CondenserTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InsulatingLiquidTypeID {
                get {
                    try {
                        return ((long)(this[this.tableQCondenserRecord.InsulatingLiquidTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsulatingLiquidTypeID\' in table \'QCondenserRecord\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.InsulatingLiquidTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DielectricType {
                get {
                    try {
                        return ((long)(this[this.tableQCondenserRecord.DielectricTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DielectricType\' in table \'QCondenserRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.DielectricTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DielectricThickness {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserRecord.DielectricThicknessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DielectricThickness\' in table \'QCondenserRecord\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.DielectricThicknessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TangentAngle {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserRecord.TangentAngleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TangentAngle\' in table \'QCondenserRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.TangentAngleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DielectricInductiveCapacity {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserRecord.DielectricInductiveCapacityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DielectricInductiveCapacity\' in table \'QCondenserRecord\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.DielectricInductiveCapacityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CasingType {
                get {
                    try {
                        return ((long)(this[this.tableQCondenserRecord.CasingTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CasingType\' in table \'QCondenserRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.CasingTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CasingThickness {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserRecord.CasingThicknessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CasingThickness\' in table \'QCondenserRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.CasingThicknessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CondenserID {
                get {
                    return ((long)(this[this.tableQCondenserRecord.CondenserIDColumn]));
                }
                set {
                    this[this.tableQCondenserRecord.CondenserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CondenserNumber {
                get {
                    try {
                        return ((string)(this[this.tableQCondenserRecord.CondenserNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CondenserNumber\' in table \'QCondenserRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.CondenserNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NominalVoltage {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserRecord.NominalVoltageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NominalVoltage\' in table \'QCondenserRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.NominalVoltageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NominalCapacitance {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserRecord.NominalCapacitanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NominalCapacitance\' in table \'QCondenserRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.NominalCapacitanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EnergyCharge {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserRecord.EnergyChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnergyCharge\' in table \'QCondenserRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.EnergyChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Inductivity {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserRecord.InductivityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inductivity\' in table \'QCondenserRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.InductivityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long NormalizedResource {
                get {
                    try {
                        return ((long)(this[this.tableQCondenserRecord.NormalizedResourceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NormalizedResource\' in table \'QCondenserRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.NormalizedResourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MaxDischargeCurrent {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserRecord.MaxDischargeCurrentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDischargeCurrent\' in table \'QCondenserRecord\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.MaxDischargeCurrentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CondenserWeight {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserRecord.CondenserWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CondenserWeight\' in table \'QCondenserRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.CondenserWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CondenserVolume {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserRecord.CondenserVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CondenserVolume\' in table \'QCondenserRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.CondenserVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DesignFeaturesSection {
                get {
                    try {
                        return ((string)(this[this.tableQCondenserRecord.DesignFeaturesSectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DesignFeaturesSection\' in table \'QCondenserRecord\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.DesignFeaturesSectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal InsulationResistance {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserRecord.InsulationResistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsulationResistance\' in table \'QCondenserRecord\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.InsulationResistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TemperatureKoeff {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserRecord.TemperatureKoeffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TemperatureKoeff\' in table \'QCondenserRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.TemperatureKoeffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TechnologicalFeatures {
                get {
                    try {
                        return ((string)(this[this.tableQCondenserRecord.TechnologicalFeaturesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TechnologicalFeatures\' in table \'QCondenserRecord\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.TechnologicalFeaturesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] CondenserImage {
                get {
                    try {
                        return ((byte[])(this[this.tableQCondenserRecord.CondenserImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CondenserImage\' in table \'QCondenserRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.CondenserImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SpecificCapacityByWeight {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserRecord.SpecificCapacityByWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecificCapacityByWeight\' in table \'QCondenserRecord\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.SpecificCapacityByWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SpecificEnergyByWeight {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserRecord.SpecificEnergyByWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecificEnergyByWeight\' in table \'QCondenserRecord\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.SpecificEnergyByWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SpecificEnergyByVolume {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserRecord.SpecificEnergyByVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecificEnergyByVolume\' in table \'QCondenserRecord\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.SpecificEnergyByVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CondenserTypeID {
                get {
                    try {
                        return ((long)(this[this.tableQCondenserRecord.CondenserTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CondenserTypeID\' in table \'QCondenserRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserRecord.CondenserTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypesRow QCondenserTypesRow {
                get {
                    return ((QCondenserTypesRow)(this.GetParentRow(this.Table.ParentRelations["FK_Condensers_0"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Condensers_0"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCondenserTypeNameNull() {
                return this.IsNull(this.tableQCondenserRecord.CondenserTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCondenserTypeNameNull() {
                this[this.tableQCondenserRecord.CondenserTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInsulatingLiquidTypeIDNull() {
                return this.IsNull(this.tableQCondenserRecord.InsulatingLiquidTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInsulatingLiquidTypeIDNull() {
                this[this.tableQCondenserRecord.InsulatingLiquidTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDielectricTypeNull() {
                return this.IsNull(this.tableQCondenserRecord.DielectricTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDielectricTypeNull() {
                this[this.tableQCondenserRecord.DielectricTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDielectricThicknessNull() {
                return this.IsNull(this.tableQCondenserRecord.DielectricThicknessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDielectricThicknessNull() {
                this[this.tableQCondenserRecord.DielectricThicknessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTangentAngleNull() {
                return this.IsNull(this.tableQCondenserRecord.TangentAngleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTangentAngleNull() {
                this[this.tableQCondenserRecord.TangentAngleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDielectricInductiveCapacityNull() {
                return this.IsNull(this.tableQCondenserRecord.DielectricInductiveCapacityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDielectricInductiveCapacityNull() {
                this[this.tableQCondenserRecord.DielectricInductiveCapacityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCasingTypeNull() {
                return this.IsNull(this.tableQCondenserRecord.CasingTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCasingTypeNull() {
                this[this.tableQCondenserRecord.CasingTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCasingThicknessNull() {
                return this.IsNull(this.tableQCondenserRecord.CasingThicknessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCasingThicknessNull() {
                this[this.tableQCondenserRecord.CasingThicknessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCondenserNumberNull() {
                return this.IsNull(this.tableQCondenserRecord.CondenserNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCondenserNumberNull() {
                this[this.tableQCondenserRecord.CondenserNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNominalVoltageNull() {
                return this.IsNull(this.tableQCondenserRecord.NominalVoltageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNominalVoltageNull() {
                this[this.tableQCondenserRecord.NominalVoltageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNominalCapacitanceNull() {
                return this.IsNull(this.tableQCondenserRecord.NominalCapacitanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNominalCapacitanceNull() {
                this[this.tableQCondenserRecord.NominalCapacitanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnergyChargeNull() {
                return this.IsNull(this.tableQCondenserRecord.EnergyChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnergyChargeNull() {
                this[this.tableQCondenserRecord.EnergyChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInductivityNull() {
                return this.IsNull(this.tableQCondenserRecord.InductivityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInductivityNull() {
                this[this.tableQCondenserRecord.InductivityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNormalizedResourceNull() {
                return this.IsNull(this.tableQCondenserRecord.NormalizedResourceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNormalizedResourceNull() {
                this[this.tableQCondenserRecord.NormalizedResourceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxDischargeCurrentNull() {
                return this.IsNull(this.tableQCondenserRecord.MaxDischargeCurrentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxDischargeCurrentNull() {
                this[this.tableQCondenserRecord.MaxDischargeCurrentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCondenserWeightNull() {
                return this.IsNull(this.tableQCondenserRecord.CondenserWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCondenserWeightNull() {
                this[this.tableQCondenserRecord.CondenserWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCondenserVolumeNull() {
                return this.IsNull(this.tableQCondenserRecord.CondenserVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCondenserVolumeNull() {
                this[this.tableQCondenserRecord.CondenserVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDesignFeaturesSectionNull() {
                return this.IsNull(this.tableQCondenserRecord.DesignFeaturesSectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDesignFeaturesSectionNull() {
                this[this.tableQCondenserRecord.DesignFeaturesSectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInsulationResistanceNull() {
                return this.IsNull(this.tableQCondenserRecord.InsulationResistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInsulationResistanceNull() {
                this[this.tableQCondenserRecord.InsulationResistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTemperatureKoeffNull() {
                return this.IsNull(this.tableQCondenserRecord.TemperatureKoeffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTemperatureKoeffNull() {
                this[this.tableQCondenserRecord.TemperatureKoeffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTechnologicalFeaturesNull() {
                return this.IsNull(this.tableQCondenserRecord.TechnologicalFeaturesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTechnologicalFeaturesNull() {
                this[this.tableQCondenserRecord.TechnologicalFeaturesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCondenserImageNull() {
                return this.IsNull(this.tableQCondenserRecord.CondenserImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCondenserImageNull() {
                this[this.tableQCondenserRecord.CondenserImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpecificCapacityByWeightNull() {
                return this.IsNull(this.tableQCondenserRecord.SpecificCapacityByWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpecificCapacityByWeightNull() {
                this[this.tableQCondenserRecord.SpecificCapacityByWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpecificEnergyByWeightNull() {
                return this.IsNull(this.tableQCondenserRecord.SpecificEnergyByWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpecificEnergyByWeightNull() {
                this[this.tableQCondenserRecord.SpecificEnergyByWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpecificEnergyByVolumeNull() {
                return this.IsNull(this.tableQCondenserRecord.SpecificEnergyByVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpecificEnergyByVolumeNull() {
                this[this.tableQCondenserRecord.SpecificEnergyByVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCondenserTypeIDNull() {
                return this.IsNull(this.tableQCondenserRecord.CondenserTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCondenserTypeIDNull() {
                this[this.tableQCondenserRecord.CondenserTypeIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class QCondenserTestRecordRow : global::System.Data.DataRow {
            
            private QCondenserTestRecordDataTable tableQCondenserTestRecord;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QCondenserTestRecordRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQCondenserTestRecord = ((QCondenserTestRecordDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CondenserID {
                get {
                    return ((long)(this[this.tableQCondenserTestRecord.CondenserIDColumn]));
                }
                set {
                    this[this.tableQCondenserTestRecord.CondenserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CondenserTestType {
                get {
                    return ((long)(this[this.tableQCondenserTestRecord.CondenserTestTypeColumn]));
                }
                set {
                    this[this.tableQCondenserTestRecord.CondenserTestTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CondenserTestDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableQCondenserTestRecord.CondenserTestDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CondenserTestDate\' in table \'QCondenserTestRecord\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.CondenserTestDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CondenserTestEquipment {
                get {
                    return ((string)(this[this.tableQCondenserTestRecord.CondenserTestEquipmentColumn]));
                }
                set {
                    this[this.tableQCondenserTestRecord.CondenserTestEquipmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] TestVoltageImageForm {
                get {
                    try {
                        return ((byte[])(this[this.tableQCondenserTestRecord.TestVoltageImageFormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TestVoltageImageForm\' in table \'QCondenserTestRecord\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.TestVoltageImageFormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TestVoltageImagePoints {
                get {
                    return ((string)(this[this.tableQCondenserTestRecord.TestVoltageImagePointsColumn]));
                }
                set {
                    this[this.tableQCondenserTestRecord.TestVoltageImagePointsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TestVoltageFrequency {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.TestVoltageFrequencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TestVoltageFrequency\' in table \'QCondenserTestRecord\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.TestVoltageFrequencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TestVoltageAmplitude {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.TestVoltageAmplitudeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TestVoltageAmplitude\' in table \'QCondenserTestRecord\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.TestVoltageAmplitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AnalysisDateProbe {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableQCondenserTestRecord.AnalysisDateProbeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnalysisDateProbe\' in table \'QCondenserTestRecord\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.AnalysisDateProbeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AnalysisDateExecute {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableQCondenserTestRecord.AnalysisDateExecuteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnalysisDateExecute\' in table \'QCondenserTestRecord\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.AnalysisDateExecuteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal H2 {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.H2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'H2\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.H2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CH4 {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.CH4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CH4\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.CH4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CO {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.COColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CO\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.COColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CO2_CO {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.CO2_COColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CO2_CO\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.CO2_COColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CO2 {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.CO2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CO2\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.CO2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal C2H4 {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.C2H4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2H4\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.C2H4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal C2H6 {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.C2H6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2H6\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.C2H6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal C2H2 {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.C2H2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2H2\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.C2H2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CondenserTestID {
                get {
                    return ((long)(this[this.tableQCondenserTestRecord.CondenserTestIDColumn]));
                }
                set {
                    this[this.tableQCondenserTestRecord.CondenserTestIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AnalysisEmployeeFIO {
                get {
                    return ((string)(this[this.tableQCondenserTestRecord.AnalysisEmployeeFIOColumn]));
                }
                set {
                    this[this.tableQCondenserTestRecord.AnalysisEmployeeFIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal H2_Vabs {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.H2_VabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'H2_Vabs\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.H2_VabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal H2_Votn {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.H2_VotnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'H2_Votn\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.H2_VotnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal O2 {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.O2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O2\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.O2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal O2_Vabs {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.O2_VabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O2_Vabs\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.O2_VabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal O2_Votn {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.O2_VotnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O2_Votn\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.O2_VotnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal N2 {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.N2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'N2\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.N2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal N2_Vabs {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.N2_VabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'N2_Vabs\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.N2_VabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal N2_Votn {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.N2_VotnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'N2_Votn\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.N2_VotnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CH4_Vabs {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.CH4_VabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CH4_Vabs\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.CH4_VabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CH4_Votn {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.CH4_VotnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CH4_Votn\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.CH4_VotnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CO_Vabs {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.CO_VabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CO_Vabs\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.CO_VabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CO_Votn {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.CO_VotnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CO_Votn\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.CO_VotnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CO2_CO_Vabs {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.CO2_CO_VabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CO2_CO_Vabs\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.CO2_CO_VabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CO2_CO_Votn {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.CO2_CO_VotnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CO2_CO_Votn\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.CO2_CO_VotnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CO2_Vabs {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.CO2_VabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CO2_Vabs\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.CO2_VabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CO2_Votn {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.CO2_VotnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CO2_Votn\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.CO2_VotnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal C2H4_Vabs {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.C2H4_VabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2H4_Vabs\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.C2H4_VabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal C2H4_Votn {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.C2H4_VotnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2H4_Votn\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.C2H4_VotnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal C2H6_Vabs {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.C2H6_VabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2H6_Vabs\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.C2H6_VabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal C2H6_Votn {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.C2H6_VotnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2H6_Votn\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.C2H6_VotnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal C2H2_Vabs {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.C2H2_VabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2H2_Vabs\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.C2H2_VabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal C2H2_Votn {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.C2H2_VotnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2H2_Votn\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.C2H2_VotnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CycleCount {
                get {
                    try {
                        return ((long)(this[this.tableQCondenserTestRecord.CycleCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleCount\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.CycleCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CH3OH {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.CH3OHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CH3OH\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.CH3OHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CH3OH_Vabs {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.CH3OH_VabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CH3OH_Vabs\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.CH3OH_VabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CH3OH_Votn {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTestRecord.CH3OH_VotnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CH3OH_Votn\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.CH3OH_VotnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Temperature {
                get {
                    return ((string)(this[this.tableQCondenserTestRecord.TemperatureColumn]));
                }
                set {
                    this[this.tableQCondenserTestRecord.TemperatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CondenserState {
                get {
                    try {
                        return ((long)(this[this.tableQCondenserTestRecord.CondenserStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CondenserState\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.CondenserStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Recommendation {
                get {
                    return ((string)(this[this.tableQCondenserTestRecord.RecommendationColumn]));
                }
                set {
                    this[this.tableQCondenserTestRecord.RecommendationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Conclusion {
                get {
                    return ((string)(this[this.tableQCondenserTestRecord.ConclusionColumn]));
                }
                set {
                    this[this.tableQCondenserTestRecord.ConclusionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CCNext {
                get {
                    try {
                        return ((long)(this[this.tableQCondenserTestRecord.CCNextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CCNext\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.CCNextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VR {
                get {
                    try {
                        return ((double)(this[this.tableQCondenserTestRecord.VRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VR\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.VRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double KCF {
                get {
                    try {
                        return ((double)(this[this.tableQCondenserTestRecord.KCFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KCF\' in table \'QCondenserTestRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTestRecord.KCFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QMainEquipmentsRow QMainEquipmentsRow {
                get {
                    return ((QMainEquipmentsRow)(this.GetParentRow(this.Table.ParentRelations["FK_CondenserTest_0"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CondenserTest_0"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondensersRow QCondensersRow {
                get {
                    return ((QCondensersRow)(this.GetParentRow(this.Table.ParentRelations["FK_CondenserTest_03"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CondenserTest_03"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCondenserTestDateNull() {
                return this.IsNull(this.tableQCondenserTestRecord.CondenserTestDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCondenserTestDateNull() {
                this[this.tableQCondenserTestRecord.CondenserTestDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTestVoltageImageFormNull() {
                return this.IsNull(this.tableQCondenserTestRecord.TestVoltageImageFormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTestVoltageImageFormNull() {
                this[this.tableQCondenserTestRecord.TestVoltageImageFormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTestVoltageFrequencyNull() {
                return this.IsNull(this.tableQCondenserTestRecord.TestVoltageFrequencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTestVoltageFrequencyNull() {
                this[this.tableQCondenserTestRecord.TestVoltageFrequencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTestVoltageAmplitudeNull() {
                return this.IsNull(this.tableQCondenserTestRecord.TestVoltageAmplitudeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTestVoltageAmplitudeNull() {
                this[this.tableQCondenserTestRecord.TestVoltageAmplitudeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnalysisDateProbeNull() {
                return this.IsNull(this.tableQCondenserTestRecord.AnalysisDateProbeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnalysisDateProbeNull() {
                this[this.tableQCondenserTestRecord.AnalysisDateProbeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnalysisDateExecuteNull() {
                return this.IsNull(this.tableQCondenserTestRecord.AnalysisDateExecuteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnalysisDateExecuteNull() {
                this[this.tableQCondenserTestRecord.AnalysisDateExecuteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsH2Null() {
                return this.IsNull(this.tableQCondenserTestRecord.H2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetH2Null() {
                this[this.tableQCondenserTestRecord.H2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCH4Null() {
                return this.IsNull(this.tableQCondenserTestRecord.CH4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCH4Null() {
                this[this.tableQCondenserTestRecord.CH4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCONull() {
                return this.IsNull(this.tableQCondenserTestRecord.COColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCONull() {
                this[this.tableQCondenserTestRecord.COColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCO2_CONull() {
                return this.IsNull(this.tableQCondenserTestRecord.CO2_COColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCO2_CONull() {
                this[this.tableQCondenserTestRecord.CO2_COColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCO2Null() {
                return this.IsNull(this.tableQCondenserTestRecord.CO2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCO2Null() {
                this[this.tableQCondenserTestRecord.CO2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsC2H4Null() {
                return this.IsNull(this.tableQCondenserTestRecord.C2H4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetC2H4Null() {
                this[this.tableQCondenserTestRecord.C2H4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsC2H6Null() {
                return this.IsNull(this.tableQCondenserTestRecord.C2H6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetC2H6Null() {
                this[this.tableQCondenserTestRecord.C2H6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsC2H2Null() {
                return this.IsNull(this.tableQCondenserTestRecord.C2H2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetC2H2Null() {
                this[this.tableQCondenserTestRecord.C2H2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsH2_VabsNull() {
                return this.IsNull(this.tableQCondenserTestRecord.H2_VabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetH2_VabsNull() {
                this[this.tableQCondenserTestRecord.H2_VabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsH2_VotnNull() {
                return this.IsNull(this.tableQCondenserTestRecord.H2_VotnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetH2_VotnNull() {
                this[this.tableQCondenserTestRecord.H2_VotnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsO2Null() {
                return this.IsNull(this.tableQCondenserTestRecord.O2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetO2Null() {
                this[this.tableQCondenserTestRecord.O2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsO2_VabsNull() {
                return this.IsNull(this.tableQCondenserTestRecord.O2_VabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetO2_VabsNull() {
                this[this.tableQCondenserTestRecord.O2_VabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsO2_VotnNull() {
                return this.IsNull(this.tableQCondenserTestRecord.O2_VotnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetO2_VotnNull() {
                this[this.tableQCondenserTestRecord.O2_VotnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsN2Null() {
                return this.IsNull(this.tableQCondenserTestRecord.N2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetN2Null() {
                this[this.tableQCondenserTestRecord.N2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsN2_VabsNull() {
                return this.IsNull(this.tableQCondenserTestRecord.N2_VabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetN2_VabsNull() {
                this[this.tableQCondenserTestRecord.N2_VabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsN2_VotnNull() {
                return this.IsNull(this.tableQCondenserTestRecord.N2_VotnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetN2_VotnNull() {
                this[this.tableQCondenserTestRecord.N2_VotnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCH4_VabsNull() {
                return this.IsNull(this.tableQCondenserTestRecord.CH4_VabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCH4_VabsNull() {
                this[this.tableQCondenserTestRecord.CH4_VabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCH4_VotnNull() {
                return this.IsNull(this.tableQCondenserTestRecord.CH4_VotnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCH4_VotnNull() {
                this[this.tableQCondenserTestRecord.CH4_VotnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCO_VabsNull() {
                return this.IsNull(this.tableQCondenserTestRecord.CO_VabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCO_VabsNull() {
                this[this.tableQCondenserTestRecord.CO_VabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCO_VotnNull() {
                return this.IsNull(this.tableQCondenserTestRecord.CO_VotnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCO_VotnNull() {
                this[this.tableQCondenserTestRecord.CO_VotnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCO2_CO_VabsNull() {
                return this.IsNull(this.tableQCondenserTestRecord.CO2_CO_VabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCO2_CO_VabsNull() {
                this[this.tableQCondenserTestRecord.CO2_CO_VabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCO2_CO_VotnNull() {
                return this.IsNull(this.tableQCondenserTestRecord.CO2_CO_VotnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCO2_CO_VotnNull() {
                this[this.tableQCondenserTestRecord.CO2_CO_VotnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCO2_VabsNull() {
                return this.IsNull(this.tableQCondenserTestRecord.CO2_VabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCO2_VabsNull() {
                this[this.tableQCondenserTestRecord.CO2_VabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCO2_VotnNull() {
                return this.IsNull(this.tableQCondenserTestRecord.CO2_VotnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCO2_VotnNull() {
                this[this.tableQCondenserTestRecord.CO2_VotnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsC2H4_VabsNull() {
                return this.IsNull(this.tableQCondenserTestRecord.C2H4_VabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetC2H4_VabsNull() {
                this[this.tableQCondenserTestRecord.C2H4_VabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsC2H4_VotnNull() {
                return this.IsNull(this.tableQCondenserTestRecord.C2H4_VotnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetC2H4_VotnNull() {
                this[this.tableQCondenserTestRecord.C2H4_VotnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsC2H6_VabsNull() {
                return this.IsNull(this.tableQCondenserTestRecord.C2H6_VabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetC2H6_VabsNull() {
                this[this.tableQCondenserTestRecord.C2H6_VabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsC2H6_VotnNull() {
                return this.IsNull(this.tableQCondenserTestRecord.C2H6_VotnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetC2H6_VotnNull() {
                this[this.tableQCondenserTestRecord.C2H6_VotnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsC2H2_VabsNull() {
                return this.IsNull(this.tableQCondenserTestRecord.C2H2_VabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetC2H2_VabsNull() {
                this[this.tableQCondenserTestRecord.C2H2_VabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsC2H2_VotnNull() {
                return this.IsNull(this.tableQCondenserTestRecord.C2H2_VotnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetC2H2_VotnNull() {
                this[this.tableQCondenserTestRecord.C2H2_VotnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleCountNull() {
                return this.IsNull(this.tableQCondenserTestRecord.CycleCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleCountNull() {
                this[this.tableQCondenserTestRecord.CycleCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCH3OHNull() {
                return this.IsNull(this.tableQCondenserTestRecord.CH3OHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCH3OHNull() {
                this[this.tableQCondenserTestRecord.CH3OHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCH3OH_VabsNull() {
                return this.IsNull(this.tableQCondenserTestRecord.CH3OH_VabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCH3OH_VabsNull() {
                this[this.tableQCondenserTestRecord.CH3OH_VabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCH3OH_VotnNull() {
                return this.IsNull(this.tableQCondenserTestRecord.CH3OH_VotnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCH3OH_VotnNull() {
                this[this.tableQCondenserTestRecord.CH3OH_VotnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCondenserStateNull() {
                return this.IsNull(this.tableQCondenserTestRecord.CondenserStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCondenserStateNull() {
                this[this.tableQCondenserTestRecord.CondenserStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCCNextNull() {
                return this.IsNull(this.tableQCondenserTestRecord.CCNextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCCNextNull() {
                this[this.tableQCondenserTestRecord.CCNextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVRNull() {
                return this.IsNull(this.tableQCondenserTestRecord.VRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVRNull() {
                this[this.tableQCondenserTestRecord.VRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKCFNull() {
                return this.IsNull(this.tableQCondenserTestRecord.KCFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKCFNull() {
                this[this.tableQCondenserTestRecord.KCFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTestRow[] GetQCondenserTestRows() {
                if ((this.Table.ChildRelations["FK_CondenserTest_01"] == null)) {
                    return new QCondenserTestRow[0];
                }
                else {
                    return ((QCondenserTestRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CondenserTest_01"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class QCondenserTestRow : global::System.Data.DataRow {
            
            private QCondenserTestDataTable tableQCondenserTest;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QCondenserTestRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQCondenserTest = ((QCondenserTestDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CondenserTestID {
                get {
                    return ((long)(this[this.tableQCondenserTest.CondenserTestIDColumn]));
                }
                set {
                    this[this.tableQCondenserTest.CondenserTestIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CondenserID {
                get {
                    return ((long)(this[this.tableQCondenserTest.CondenserIDColumn]));
                }
                set {
                    this[this.tableQCondenserTest.CondenserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CondenserTestType {
                get {
                    return ((long)(this[this.tableQCondenserTest.CondenserTestTypeColumn]));
                }
                set {
                    this[this.tableQCondenserTest.CondenserTestTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CondenserTestDate {
                get {
                    return ((global::System.DateTime)(this[this.tableQCondenserTest.CondenserTestDateColumn]));
                }
                set {
                    this[this.tableQCondenserTest.CondenserTestDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CondenserTestEquipment {
                get {
                    return ((string)(this[this.tableQCondenserTest.CondenserTestEquipmentColumn]));
                }
                set {
                    this[this.tableQCondenserTest.CondenserTestEquipmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] TestVoltageImageForm {
                get {
                    try {
                        return ((byte[])(this[this.tableQCondenserTest.TestVoltageImageFormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TestVoltageImageForm\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.TestVoltageImageFormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TestVoltageImagePoints {
                get {
                    return ((string)(this[this.tableQCondenserTest.TestVoltageImagePointsColumn]));
                }
                set {
                    this[this.tableQCondenserTest.TestVoltageImagePointsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TestVoltageFrequency {
                get {
                    return ((decimal)(this[this.tableQCondenserTest.TestVoltageFrequencyColumn]));
                }
                set {
                    this[this.tableQCondenserTest.TestVoltageFrequencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TestVoltageAmplitude {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.TestVoltageAmplitudeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TestVoltageAmplitude\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.TestVoltageAmplitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AnalysisDateProbe {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableQCondenserTest.AnalysisDateProbeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnalysisDateProbe\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.AnalysisDateProbeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AnalysisDateExecute {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableQCondenserTest.AnalysisDateExecuteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnalysisDateExecute\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.AnalysisDateExecuteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal H2 {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.H2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'H2\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.H2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CH4 {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.CH4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CH4\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.CH4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CO {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.COColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CO\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.COColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CO2 {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.CO2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CO2\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.CO2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal C2H4 {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.C2H4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2H4\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.C2H4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal C2H6 {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.C2H6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2H6\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.C2H6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal C2H2 {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.C2H2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2H2\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.C2H2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AnalysisEmployeeFIO {
                get {
                    try {
                        return ((string)(this[this.tableQCondenserTest.AnalysisEmployeeFIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnalysisEmployeeFIO\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.AnalysisEmployeeFIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal H2_Vabs {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.H2_VabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'H2_Vabs\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.H2_VabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal H2_Votn {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.H2_VotnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'H2_Votn\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.H2_VotnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal O2 {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.O2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O2\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.O2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal O2_Vabs {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.O2_VabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O2_Vabs\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.O2_VabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal O2_Votn {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.O2_VotnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'O2_Votn\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.O2_VotnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal N2 {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.N2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'N2\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.N2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal N2_Vabs {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.N2_VabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'N2_Vabs\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.N2_VabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal N2_Votn {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.N2_VotnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'N2_Votn\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.N2_VotnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CH4_Vabs {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.CH4_VabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CH4_Vabs\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.CH4_VabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CH4_Votn {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.CH4_VotnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CH4_Votn\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.CH4_VotnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CO_Vabs {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.CO_VabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CO_Vabs\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.CO_VabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CO_Votn {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.CO_VotnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CO_Votn\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.CO_VotnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CO2_Vabs {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.CO2_VabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CO2_Vabs\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.CO2_VabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CO2_Votn {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.CO2_VotnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CO2_Votn\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.CO2_VotnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal C2H4_Vabs {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.C2H4_VabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2H4_Vabs\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.C2H4_VabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal C2H4_Votn {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.C2H4_VotnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2H4_Votn\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.C2H4_VotnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal C2H6_Vabs {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.C2H6_VabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2H6_Vabs\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.C2H6_VabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal C2H6_Votn {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.C2H6_VotnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2H6_Votn\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.C2H6_VotnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal C2H2_Vabs {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.C2H2_VabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2H2_Vabs\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.C2H2_VabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal C2H2_Votn {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.C2H2_VotnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2H2_Votn\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.C2H2_VotnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CycleCount {
                get {
                    try {
                        return ((long)(this[this.tableQCondenserTest.CycleCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleCount\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.CycleCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CH3OH {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.CH3OHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CH3OH\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.CH3OHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CH3OH_Vabs {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.CH3OH_VabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CH3OH_Vabs\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.CH3OH_VabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CH3OH_Votn {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.CH3OH_VotnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CH3OH_Votn\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.CH3OH_VotnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Temperature {
                get {
                    try {
                        return ((string)(this[this.tableQCondenserTest.TemperatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Temperature\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.TemperatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CondenserState {
                get {
                    return ((long)(this[this.tableQCondenserTest.CondenserStateColumn]));
                }
                set {
                    this[this.tableQCondenserTest.CondenserStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Recommendation {
                get {
                    try {
                        return ((string)(this[this.tableQCondenserTest.RecommendationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Recommendation\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.RecommendationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Conclusion {
                get {
                    try {
                        return ((string)(this[this.tableQCondenserTest.ConclusionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Conclusion\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.ConclusionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CCNext {
                get {
                    try {
                        return ((long)(this[this.tableQCondenserTest.CCNextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CCNext\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.CCNextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VR {
                get {
                    try {
                        return ((double)(this[this.tableQCondenserTest.VRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VR\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.VRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double KCF {
                get {
                    try {
                        return ((double)(this[this.tableQCondenserTest.KCFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KCF\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.KCFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CO2_CO {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.CO2_COColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CO2_CO\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.CO2_COColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CO2_CO_Vabs {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.CO2_CO_VabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CO2_CO_Vabs\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.CO2_CO_VabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CO2_CO_Votn {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTest.CO2_CO_VotnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CO2_CO_Votn\' in table \'QCondenserTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTest.CO2_CO_VotnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTestRecordRow QCondenserTestRecordRow {
                get {
                    return ((QCondenserTestRecordRow)(this.GetParentRow(this.Table.ParentRelations["FK_CondenserTest_01"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CondenserTest_01"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QMainEquipmentsRow QMainEquipmentsRow {
                get {
                    return ((QMainEquipmentsRow)(this.GetParentRow(this.Table.ParentRelations["FK_CondenserTest_02"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CondenserTest_02"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondensersRow QCondensersRow {
                get {
                    return ((QCondensersRow)(this.GetParentRow(this.Table.ParentRelations["FK_CondenserTest_04"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CondenserTest_04"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTestVoltageImageFormNull() {
                return this.IsNull(this.tableQCondenserTest.TestVoltageImageFormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTestVoltageImageFormNull() {
                this[this.tableQCondenserTest.TestVoltageImageFormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTestVoltageAmplitudeNull() {
                return this.IsNull(this.tableQCondenserTest.TestVoltageAmplitudeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTestVoltageAmplitudeNull() {
                this[this.tableQCondenserTest.TestVoltageAmplitudeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnalysisDateProbeNull() {
                return this.IsNull(this.tableQCondenserTest.AnalysisDateProbeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnalysisDateProbeNull() {
                this[this.tableQCondenserTest.AnalysisDateProbeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnalysisDateExecuteNull() {
                return this.IsNull(this.tableQCondenserTest.AnalysisDateExecuteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnalysisDateExecuteNull() {
                this[this.tableQCondenserTest.AnalysisDateExecuteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsH2Null() {
                return this.IsNull(this.tableQCondenserTest.H2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetH2Null() {
                this[this.tableQCondenserTest.H2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCH4Null() {
                return this.IsNull(this.tableQCondenserTest.CH4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCH4Null() {
                this[this.tableQCondenserTest.CH4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCONull() {
                return this.IsNull(this.tableQCondenserTest.COColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCONull() {
                this[this.tableQCondenserTest.COColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCO2Null() {
                return this.IsNull(this.tableQCondenserTest.CO2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCO2Null() {
                this[this.tableQCondenserTest.CO2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsC2H4Null() {
                return this.IsNull(this.tableQCondenserTest.C2H4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetC2H4Null() {
                this[this.tableQCondenserTest.C2H4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsC2H6Null() {
                return this.IsNull(this.tableQCondenserTest.C2H6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetC2H6Null() {
                this[this.tableQCondenserTest.C2H6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsC2H2Null() {
                return this.IsNull(this.tableQCondenserTest.C2H2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetC2H2Null() {
                this[this.tableQCondenserTest.C2H2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnalysisEmployeeFIONull() {
                return this.IsNull(this.tableQCondenserTest.AnalysisEmployeeFIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnalysisEmployeeFIONull() {
                this[this.tableQCondenserTest.AnalysisEmployeeFIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsH2_VabsNull() {
                return this.IsNull(this.tableQCondenserTest.H2_VabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetH2_VabsNull() {
                this[this.tableQCondenserTest.H2_VabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsH2_VotnNull() {
                return this.IsNull(this.tableQCondenserTest.H2_VotnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetH2_VotnNull() {
                this[this.tableQCondenserTest.H2_VotnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsO2Null() {
                return this.IsNull(this.tableQCondenserTest.O2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetO2Null() {
                this[this.tableQCondenserTest.O2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsO2_VabsNull() {
                return this.IsNull(this.tableQCondenserTest.O2_VabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetO2_VabsNull() {
                this[this.tableQCondenserTest.O2_VabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsO2_VotnNull() {
                return this.IsNull(this.tableQCondenserTest.O2_VotnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetO2_VotnNull() {
                this[this.tableQCondenserTest.O2_VotnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsN2Null() {
                return this.IsNull(this.tableQCondenserTest.N2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetN2Null() {
                this[this.tableQCondenserTest.N2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsN2_VabsNull() {
                return this.IsNull(this.tableQCondenserTest.N2_VabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetN2_VabsNull() {
                this[this.tableQCondenserTest.N2_VabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsN2_VotnNull() {
                return this.IsNull(this.tableQCondenserTest.N2_VotnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetN2_VotnNull() {
                this[this.tableQCondenserTest.N2_VotnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCH4_VabsNull() {
                return this.IsNull(this.tableQCondenserTest.CH4_VabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCH4_VabsNull() {
                this[this.tableQCondenserTest.CH4_VabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCH4_VotnNull() {
                return this.IsNull(this.tableQCondenserTest.CH4_VotnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCH4_VotnNull() {
                this[this.tableQCondenserTest.CH4_VotnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCO_VabsNull() {
                return this.IsNull(this.tableQCondenserTest.CO_VabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCO_VabsNull() {
                this[this.tableQCondenserTest.CO_VabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCO_VotnNull() {
                return this.IsNull(this.tableQCondenserTest.CO_VotnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCO_VotnNull() {
                this[this.tableQCondenserTest.CO_VotnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCO2_VabsNull() {
                return this.IsNull(this.tableQCondenserTest.CO2_VabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCO2_VabsNull() {
                this[this.tableQCondenserTest.CO2_VabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCO2_VotnNull() {
                return this.IsNull(this.tableQCondenserTest.CO2_VotnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCO2_VotnNull() {
                this[this.tableQCondenserTest.CO2_VotnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsC2H4_VabsNull() {
                return this.IsNull(this.tableQCondenserTest.C2H4_VabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetC2H4_VabsNull() {
                this[this.tableQCondenserTest.C2H4_VabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsC2H4_VotnNull() {
                return this.IsNull(this.tableQCondenserTest.C2H4_VotnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetC2H4_VotnNull() {
                this[this.tableQCondenserTest.C2H4_VotnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsC2H6_VabsNull() {
                return this.IsNull(this.tableQCondenserTest.C2H6_VabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetC2H6_VabsNull() {
                this[this.tableQCondenserTest.C2H6_VabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsC2H6_VotnNull() {
                return this.IsNull(this.tableQCondenserTest.C2H6_VotnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetC2H6_VotnNull() {
                this[this.tableQCondenserTest.C2H6_VotnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsC2H2_VabsNull() {
                return this.IsNull(this.tableQCondenserTest.C2H2_VabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetC2H2_VabsNull() {
                this[this.tableQCondenserTest.C2H2_VabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsC2H2_VotnNull() {
                return this.IsNull(this.tableQCondenserTest.C2H2_VotnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetC2H2_VotnNull() {
                this[this.tableQCondenserTest.C2H2_VotnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleCountNull() {
                return this.IsNull(this.tableQCondenserTest.CycleCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleCountNull() {
                this[this.tableQCondenserTest.CycleCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCH3OHNull() {
                return this.IsNull(this.tableQCondenserTest.CH3OHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCH3OHNull() {
                this[this.tableQCondenserTest.CH3OHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCH3OH_VabsNull() {
                return this.IsNull(this.tableQCondenserTest.CH3OH_VabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCH3OH_VabsNull() {
                this[this.tableQCondenserTest.CH3OH_VabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCH3OH_VotnNull() {
                return this.IsNull(this.tableQCondenserTest.CH3OH_VotnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCH3OH_VotnNull() {
                this[this.tableQCondenserTest.CH3OH_VotnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTemperatureNull() {
                return this.IsNull(this.tableQCondenserTest.TemperatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTemperatureNull() {
                this[this.tableQCondenserTest.TemperatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRecommendationNull() {
                return this.IsNull(this.tableQCondenserTest.RecommendationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRecommendationNull() {
                this[this.tableQCondenserTest.RecommendationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConclusionNull() {
                return this.IsNull(this.tableQCondenserTest.ConclusionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConclusionNull() {
                this[this.tableQCondenserTest.ConclusionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCCNextNull() {
                return this.IsNull(this.tableQCondenserTest.CCNextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCCNextNull() {
                this[this.tableQCondenserTest.CCNextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVRNull() {
                return this.IsNull(this.tableQCondenserTest.VRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVRNull() {
                this[this.tableQCondenserTest.VRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKCFNull() {
                return this.IsNull(this.tableQCondenserTest.KCFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKCFNull() {
                this[this.tableQCondenserTest.KCFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCO2_CONull() {
                return this.IsNull(this.tableQCondenserTest.CO2_COColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCO2_CONull() {
                this[this.tableQCondenserTest.CO2_COColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCO2_CO_VabsNull() {
                return this.IsNull(this.tableQCondenserTest.CO2_CO_VabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCO2_CO_VabsNull() {
                this[this.tableQCondenserTest.CO2_CO_VabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCO2_CO_VotnNull() {
                return this.IsNull(this.tableQCondenserTest.CO2_CO_VotnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCO2_CO_VotnNull() {
                this[this.tableQCondenserTest.CO2_CO_VotnColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class QCondenserTypesRow : global::System.Data.DataRow {
            
            private QCondenserTypesDataTable tableQCondenserTypes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QCondenserTypesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQCondenserTypes = ((QCondenserTypesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CasingType {
                get {
                    try {
                        return ((long)(this[this.tableQCondenserTypes.CasingTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CasingType\' in table \'QCondenserTypes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTypes.CasingTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CasingThickness {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTypes.CasingThicknessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CasingThickness\' in table \'QCondenserTypes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTypes.CasingThicknessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CondenserTypeID {
                get {
                    return ((long)(this[this.tableQCondenserTypes.CondenserTypeIDColumn]));
                }
                set {
                    this[this.tableQCondenserTypes.CondenserTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CondenserTypeName {
                get {
                    return ((string)(this[this.tableQCondenserTypes.CondenserTypeNameColumn]));
                }
                set {
                    this[this.tableQCondenserTypes.CondenserTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InsulatingLiquidTypeID {
                get {
                    try {
                        return ((long)(this[this.tableQCondenserTypes.InsulatingLiquidTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsulatingLiquidTypeID\' in table \'QCondenserTypes\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTypes.InsulatingLiquidTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DielectricType {
                get {
                    try {
                        return ((long)(this[this.tableQCondenserTypes.DielectricTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DielectricType\' in table \'QCondenserTypes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTypes.DielectricTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DielectricThickness {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTypes.DielectricThicknessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DielectricThickness\' in table \'QCondenserTypes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTypes.DielectricThicknessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TangentAngle {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTypes.TangentAngleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TangentAngle\' in table \'QCondenserTypes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTypes.TangentAngleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DielectricInductiveCapacity {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTypes.DielectricInductiveCapacityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DielectricInductiveCapacity\' in table \'QCondenserTypes\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTypes.DielectricInductiveCapacityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public object Status {
                get {
                    try {
                        return ((object)(this[this.tableQCondenserTypes.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'QCondenserTypes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTypes.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QInsulatingLiquidTypesRow QInsulatingLiquidTypesRow {
                get {
                    return ((QInsulatingLiquidTypesRow)(this.GetParentRow(this.Table.ParentRelations["FK_CondenserTypes_0"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CondenserTypes_0"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCasingTypeNull() {
                return this.IsNull(this.tableQCondenserTypes.CasingTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCasingTypeNull() {
                this[this.tableQCondenserTypes.CasingTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCasingThicknessNull() {
                return this.IsNull(this.tableQCondenserTypes.CasingThicknessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCasingThicknessNull() {
                this[this.tableQCondenserTypes.CasingThicknessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInsulatingLiquidTypeIDNull() {
                return this.IsNull(this.tableQCondenserTypes.InsulatingLiquidTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInsulatingLiquidTypeIDNull() {
                this[this.tableQCondenserTypes.InsulatingLiquidTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDielectricTypeNull() {
                return this.IsNull(this.tableQCondenserTypes.DielectricTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDielectricTypeNull() {
                this[this.tableQCondenserTypes.DielectricTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDielectricThicknessNull() {
                return this.IsNull(this.tableQCondenserTypes.DielectricThicknessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDielectricThicknessNull() {
                this[this.tableQCondenserTypes.DielectricThicknessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTangentAngleNull() {
                return this.IsNull(this.tableQCondenserTypes.TangentAngleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTangentAngleNull() {
                this[this.tableQCondenserTypes.TangentAngleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDielectricInductiveCapacityNull() {
                return this.IsNull(this.tableQCondenserTypes.DielectricInductiveCapacityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDielectricInductiveCapacityNull() {
                this[this.tableQCondenserTypes.DielectricInductiveCapacityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStatusNull() {
                return this.IsNull(this.tableQCondenserTypes.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStatusNull() {
                this[this.tableQCondenserTypes.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserRecordRow[] GetQCondenserRecordRows() {
                if ((this.Table.ChildRelations["FK_Condensers_0"] == null)) {
                    return new QCondenserRecordRow[0];
                }
                else {
                    return ((QCondenserRecordRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Condensers_0"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypesForTableRow[] GetQCondenserTypesForTableRows() {
                if ((this.Table.ChildRelations["FK_CondenserTypeParameters_01"] == null)) {
                    return new QCondenserTypesForTableRow[0];
                }
                else {
                    return ((QCondenserTypesForTableRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CondenserTypeParameters_01"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class QCondenserTypeParametersRow : global::System.Data.DataRow {
            
            private QCondenserTypeParametersDataTable tableQCondenserTypeParameters;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QCondenserTypeParametersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQCondenserTypeParameters = ((QCondenserTypeParametersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long KoefID {
                get {
                    try {
                        return ((long)(this[this.tableQCondenserTypeParameters.KoefIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KoefID\' in table \'QCondenserTypeParameters\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTypeParameters.KoefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CondenserTypeID {
                get {
                    return ((long)(this[this.tableQCondenserTypeParameters.CondenserTypeIDColumn]));
                }
                set {
                    this[this.tableQCondenserTypeParameters.CondenserTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal KI1 {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTypeParameters.KI1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KI1\' in table \'QCondenserTypeParameters\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTypeParameters.KI1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal KoefA {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTypeParameters.KoefAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KoefA\' in table \'QCondenserTypeParameters\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTypeParameters.KoefAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal KoefB {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTypeParameters.KoefBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KoefB\' in table \'QCondenserTypeParameters\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTypeParameters.KoefBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long FunctionType {
                get {
                    try {
                        return ((long)(this[this.tableQCondenserTypeParameters.FunctionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FunctionType\' in table \'QCondenserTypeParameters\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableQCondenserTypeParameters.FunctionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal KoefR2 {
                get {
                    try {
                        return ((decimal)(this[this.tableQCondenserTypeParameters.KoefR2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KoefR2\' in table \'QCondenserTypeParameters\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondenserTypeParameters.KoefR2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKoefIDNull() {
                return this.IsNull(this.tableQCondenserTypeParameters.KoefIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKoefIDNull() {
                this[this.tableQCondenserTypeParameters.KoefIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKI1Null() {
                return this.IsNull(this.tableQCondenserTypeParameters.KI1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKI1Null() {
                this[this.tableQCondenserTypeParameters.KI1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKoefANull() {
                return this.IsNull(this.tableQCondenserTypeParameters.KoefAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKoefANull() {
                this[this.tableQCondenserTypeParameters.KoefAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKoefBNull() {
                return this.IsNull(this.tableQCondenserTypeParameters.KoefBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKoefBNull() {
                this[this.tableQCondenserTypeParameters.KoefBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFunctionTypeNull() {
                return this.IsNull(this.tableQCondenserTypeParameters.FunctionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFunctionTypeNull() {
                this[this.tableQCondenserTypeParameters.FunctionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKoefR2Null() {
                return this.IsNull(this.tableQCondenserTypeParameters.KoefR2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKoefR2Null() {
                this[this.tableQCondenserTypeParameters.KoefR2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class QCondenserTypesForTableRow : global::System.Data.DataRow {
            
            private QCondenserTypesForTableDataTable tableQCondenserTypesForTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QCondenserTypesForTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQCondenserTypesForTable = ((QCondenserTypesForTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long KoefID {
                get {
                    return ((long)(this[this.tableQCondenserTypesForTable.KoefIDColumn]));
                }
                set {
                    this[this.tableQCondenserTypesForTable.KoefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CondenserTypeID {
                get {
                    return ((long)(this[this.tableQCondenserTypesForTable.CondenserTypeIDColumn]));
                }
                set {
                    this[this.tableQCondenserTypesForTable.CondenserTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CondenserTypeName {
                get {
                    return ((string)(this[this.tableQCondenserTypesForTable.CondenserTypeNameColumn]));
                }
                set {
                    this[this.tableQCondenserTypesForTable.CondenserTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypesRow QCondenserTypesRow {
                get {
                    return ((QCondenserTypesRow)(this.GetParentRow(this.Table.ParentRelations["FK_CondenserTypeParameters_01"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CondenserTypeParameters_01"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class QCondensersRow : global::System.Data.DataRow {
            
            private QCondensersDataTable tableQCondensers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QCondensersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQCondensers = ((QCondensersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CondenserID {
                get {
                    return ((long)(this[this.tableQCondensers.CondenserIDColumn]));
                }
                set {
                    this[this.tableQCondensers.CondenserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CondenserNumber {
                get {
                    return ((string)(this[this.tableQCondensers.CondenserNumberColumn]));
                }
                set {
                    this[this.tableQCondensers.CondenserNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CondenserTypeName {
                get {
                    return ((string)(this[this.tableQCondensers.CondenserTypeNameColumn]));
                }
                set {
                    this[this.tableQCondensers.CondenserTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsulatingLiquidTypeName {
                get {
                    return ((string)(this[this.tableQCondensers.InsulatingLiquidTypeNameColumn]));
                }
                set {
                    this[this.tableQCondensers.InsulatingLiquidTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NominalVoltage {
                get {
                    return ((decimal)(this[this.tableQCondensers.NominalVoltageColumn]));
                }
                set {
                    this[this.tableQCondensers.NominalVoltageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NominalCapacitance {
                get {
                    return ((decimal)(this[this.tableQCondensers.NominalCapacitanceColumn]));
                }
                set {
                    this[this.tableQCondensers.NominalCapacitanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CondenserState {
                get {
                    return ((long)(this[this.tableQCondensers.CondenserStateColumn]));
                }
                set {
                    this[this.tableQCondensers.CondenserStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CondenserTestType {
                get {
                    try {
                        return ((long)(this[this.tableQCondensers.CondenserTestTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CondenserTestType\' in table \'QCondensers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQCondensers.CondenserTestTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCondenserTestTypeNull() {
                return this.IsNull(this.tableQCondensers.CondenserTestTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCondenserTestTypeNull() {
                this[this.tableQCondensers.CondenserTestTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTestRecordRow[] GetQCondenserTestRecordRows() {
                if ((this.Table.ChildRelations["FK_CondenserTest_03"] == null)) {
                    return new QCondenserTestRecordRow[0];
                }
                else {
                    return ((QCondenserTestRecordRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CondenserTest_03"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTestRow[] GetQCondenserTestRows() {
                if ((this.Table.ChildRelations["FK_CondenserTest_04"] == null)) {
                    return new QCondenserTestRow[0];
                }
                else {
                    return ((QCondenserTestRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CondenserTest_04"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class QMainEquipmentsRowChangeEvent : global::System.EventArgs {
            
            private QMainEquipmentsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QMainEquipmentsRowChangeEvent(QMainEquipmentsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QMainEquipmentsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class QInsulatingLiquidTypesRowChangeEvent : global::System.EventArgs {
            
            private QInsulatingLiquidTypesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QInsulatingLiquidTypesRowChangeEvent(QInsulatingLiquidTypesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QInsulatingLiquidTypesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class QCondenserRecordRowChangeEvent : global::System.EventArgs {
            
            private QCondenserRecordRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserRecordRowChangeEvent(QCondenserRecordRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserRecordRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class QCondenserTestRecordRowChangeEvent : global::System.EventArgs {
            
            private QCondenserTestRecordRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTestRecordRowChangeEvent(QCondenserTestRecordRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTestRecordRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class QCondenserTestRowChangeEvent : global::System.EventArgs {
            
            private QCondenserTestRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTestRowChangeEvent(QCondenserTestRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTestRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class QCondenserTypesRowChangeEvent : global::System.EventArgs {
            
            private QCondenserTypesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypesRowChangeEvent(QCondenserTypesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class QCondenserTypeParametersRowChangeEvent : global::System.EventArgs {
            
            private QCondenserTypeParametersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypeParametersRowChangeEvent(QCondenserTypeParametersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypeParametersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class QCondenserTypesForTableRowChangeEvent : global::System.EventArgs {
            
            private QCondenserTypesForTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypesForTableRowChangeEvent(QCondenserTypesForTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondenserTypesForTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class QCondensersRowChangeEvent : global::System.EventArgs {
            
            private QCondensersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondensersRowChangeEvent(QCondensersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QCondensersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Condenser.DataSetQueryTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QMainEquipmentsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public QMainEquipmentsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QMainEquipments";
            tableMapping.ColumnMappings.Add("CondenserID", "CondenserID");
            tableMapping.ColumnMappings.Add("CondenserNumber", "CondenserNumber");
            tableMapping.ColumnMappings.Add("CondenserTypeName", "CondenserTypeName");
            tableMapping.ColumnMappings.Add("InsulatingLiquidTypeName", "InsulatingLiquidTypeName");
            tableMapping.ColumnMappings.Add("NominalVoltage", "NominalVoltage");
            tableMapping.ColumnMappings.Add("NominalCapacitance", "NominalCapacitance");
            tableMapping.ColumnMappings.Add("CondenserState", "CondenserState");
            tableMapping.ColumnMappings.Add("CondenserTestType", "CondenserTestType");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Condenser.Properties.Settings.Default.condenserConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT c.CondenserID, c.CondenserNumber, ct.CondenserTypeName, 
                    ilt.InsulatingLiquidTypeName, c.NominalVoltage, c.NominalCapacitance, c.CondenserState, c.CondenserTestType 
                    FROM Condensers AS c 
                    INNER JOIN CondenserTypes AS ct ON ct.CondenserTypeID = c.CondenserTypeID 
                    INNER JOIN InsulatingLiquidTypes AS ilt ON ilt.InsulatingLiquidTypeID = ct.InsulatingLiquidTypeID 
                    WHERE  
                    COMPARE_STR(c.CondenserNumber, ?) >= 0 
                    OR COMPARE_STR(ct.CondenserTypeName, ?) >= 0 
                    OR COMPARE_STR(ilt.InsulatingLiquidTypeName, ?) >= 0";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Param1";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.Size = 1024;
            param.SourceColumn = "";
            this._commandCollection[0].Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Param2";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.Size = 1024;
            param.SourceColumn = "";
            this._commandCollection[0].Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Param3";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.Size = 1024;
            param.SourceColumn = "";
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetQuery.QMainEquipmentsDataTable dataTable, string Param1, string Param2, string Param3) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Param1 == null)) {
                throw new global::System.ArgumentNullException("Param1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Param1));
            }
            if ((Param2 == null)) {
                throw new global::System.ArgumentNullException("Param2");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Param2));
            }
            if ((Param3 == null)) {
                throw new global::System.ArgumentNullException("Param3");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Param3));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetQuery.QMainEquipmentsDataTable GetData(string Param1, string Param2, string Param3) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Param1 == null)) {
                throw new global::System.ArgumentNullException("Param1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Param1));
            }
            if ((Param2 == null)) {
                throw new global::System.ArgumentNullException("Param2");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Param2));
            }
            if ((Param3 == null)) {
                throw new global::System.ArgumentNullException("Param3");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Param3));
            }
            DataSetQuery.QMainEquipmentsDataTable dataTable = new DataSetQuery.QMainEquipmentsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QInsulatingLiquidTypesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public QInsulatingLiquidTypesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QInsulatingLiquidTypes";
            tableMapping.ColumnMappings.Add("InsulatingLiquidTypeID", "InsulatingLiquidTypeID");
            tableMapping.ColumnMappings.Add("InsulatingLiquidTypeName", "InsulatingLiquidTypeName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Condenser.Properties.Settings.Default.condenserConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT InsulatingLiquidTypeID, InsulatingLiquidTypeName FROM InsulatingLiquidType" +
                "s ORDER BY InsulatingLiquidTypeName";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetQuery.QInsulatingLiquidTypesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetQuery.QInsulatingLiquidTypesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetQuery.QInsulatingLiquidTypesDataTable dataTable = new DataSetQuery.QInsulatingLiquidTypesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QCondenserRecordTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public QCondenserRecordTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QCondenserRecord";
            tableMapping.ColumnMappings.Add("CondenserTypeName", "CondenserTypeName");
            tableMapping.ColumnMappings.Add("InsulatingLiquidTypeID", "InsulatingLiquidTypeID");
            tableMapping.ColumnMappings.Add("DielectricType", "DielectricType");
            tableMapping.ColumnMappings.Add("DielectricThickness", "DielectricThickness");
            tableMapping.ColumnMappings.Add("TangentAngle", "TangentAngle");
            tableMapping.ColumnMappings.Add("DielectricInductiveCapacity", "DielectricInductiveCapacity");
            tableMapping.ColumnMappings.Add("CasingType", "CasingType");
            tableMapping.ColumnMappings.Add("CasingThickness", "CasingThickness");
            tableMapping.ColumnMappings.Add("CondenserID", "CondenserID");
            tableMapping.ColumnMappings.Add("CondenserNumber", "CondenserNumber");
            tableMapping.ColumnMappings.Add("NominalVoltage", "NominalVoltage");
            tableMapping.ColumnMappings.Add("NominalCapacitance", "NominalCapacitance");
            tableMapping.ColumnMappings.Add("EnergyCharge", "EnergyCharge");
            tableMapping.ColumnMappings.Add("Inductivity", "Inductivity");
            tableMapping.ColumnMappings.Add("NormalizedResource", "NormalizedResource");
            tableMapping.ColumnMappings.Add("MaxDischargeCurrent", "MaxDischargeCurrent");
            tableMapping.ColumnMappings.Add("CondenserWeight", "CondenserWeight");
            tableMapping.ColumnMappings.Add("CondenserVolume", "CondenserVolume");
            tableMapping.ColumnMappings.Add("DesignFeaturesSection", "DesignFeaturesSection");
            tableMapping.ColumnMappings.Add("InsulationResistance", "InsulationResistance");
            tableMapping.ColumnMappings.Add("TemperatureKoeff", "TemperatureKoeff");
            tableMapping.ColumnMappings.Add("TechnologicalFeatures", "TechnologicalFeatures");
            tableMapping.ColumnMappings.Add("CondenserImage", "CondenserImage");
            tableMapping.ColumnMappings.Add("SpecificCapacityByWeight", "SpecificCapacityByWeight");
            tableMapping.ColumnMappings.Add("SpecificEnergyByWeight", "SpecificEnergyByWeight");
            tableMapping.ColumnMappings.Add("SpecificEnergyByVolume", "SpecificEnergyByVolume");
            tableMapping.ColumnMappings.Add("CondenserTypeID", "CondenserTypeID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Condenser.Properties.Settings.Default.condenserConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        ct.CondenserTypeName, ct.InsulatingLiquidTypeID, ct.DielectricType, ct.DielectricThickness, ct.TangentAngle, ct.DielectricInductiveCapacity, ct.CasingType, 
                         ct.CasingThickness, c.CondenserID, c.CondenserNumber, c.CondenserTypeID AS CondenserTypeID, c.NominalVoltage, c.NominalCapacitance, c.EnergyCharge, c.Inductivity, 
                         c.NormalizedResource, c.MaxDischargeCurrent, c.CondenserWeight, c.CondenserVolume, c.DesignFeaturesSection, c.InsulationResistance, c.TemperatureKoeff, 
                         c.TechnologicalFeatures, c.CondenserImage, c.SpecificCapacityByWeight, c.SpecificEnergyByWeight, c.SpecificEnergyByVolume
FROM            Condensers c INNER JOIN
                         CondenserTypes ct ON ct.CondenserTypeID = c.CondenserTypeID
WHERE        (c.CondenserID = @Param1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Param1";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.Size = 8;
            param.SourceColumn = "CondenserID";
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetQuery.QCondenserRecordDataTable dataTable, long Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((long)(Param1));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetQuery.QCondenserRecordDataTable GetData(long Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((long)(Param1));
            DataSetQuery.QCondenserRecordDataTable dataTable = new DataSetQuery.QCondenserRecordDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QCondenserTestRecordTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public QCondenserTestRecordTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QCondenserTestRecord";
            tableMapping.ColumnMappings.Add("CondenserID", "CondenserID");
            tableMapping.ColumnMappings.Add("CondenserTestType", "CondenserTestType");
            tableMapping.ColumnMappings.Add("CondenserTestDate", "CondenserTestDate");
            tableMapping.ColumnMappings.Add("CondenserTestEquipment", "CondenserTestEquipment");
            tableMapping.ColumnMappings.Add("TestVoltageImageForm", "TestVoltageImageForm");
            tableMapping.ColumnMappings.Add("TestVoltageImagePoints", "TestVoltageImagePoints");
            tableMapping.ColumnMappings.Add("TestVoltageFrequency", "TestVoltageFrequency");
            tableMapping.ColumnMappings.Add("TestVoltageAmplitude", "TestVoltageAmplitude");
            tableMapping.ColumnMappings.Add("AnalysisDateProbe", "AnalysisDateProbe");
            tableMapping.ColumnMappings.Add("AnalysisDateExecute", "AnalysisDateExecute");
            tableMapping.ColumnMappings.Add("H2", "H2");
            tableMapping.ColumnMappings.Add("CH4", "CH4");
            tableMapping.ColumnMappings.Add("CO", "CO");
            tableMapping.ColumnMappings.Add("CO2", "CO2");
            tableMapping.ColumnMappings.Add("C2H4", "C2H4");
            tableMapping.ColumnMappings.Add("C2H6", "C2H6");
            tableMapping.ColumnMappings.Add("C2H2", "C2H2");
            tableMapping.ColumnMappings.Add("CondenserTestID", "CondenserTestID");
            tableMapping.ColumnMappings.Add("AnalysisEmployeeFIO", "AnalysisEmployeeFIO");
            tableMapping.ColumnMappings.Add("H2_Vabs", "H2_Vabs");
            tableMapping.ColumnMappings.Add("H2_Votn", "H2_Votn");
            tableMapping.ColumnMappings.Add("O2", "O2");
            tableMapping.ColumnMappings.Add("O2_Vabs", "O2_Vabs");
            tableMapping.ColumnMappings.Add("O2_Votn", "O2_Votn");
            tableMapping.ColumnMappings.Add("N2", "N2");
            tableMapping.ColumnMappings.Add("N2_Vabs", "N2_Vabs");
            tableMapping.ColumnMappings.Add("N2_Votn", "N2_Votn");
            tableMapping.ColumnMappings.Add("CH4_Vabs", "CH4_Vabs");
            tableMapping.ColumnMappings.Add("CH4_Votn", "CH4_Votn");
            tableMapping.ColumnMappings.Add("CO_Vabs", "CO_Vabs");
            tableMapping.ColumnMappings.Add("CO_Votn", "CO_Votn");
            tableMapping.ColumnMappings.Add("CO2_Vabs", "CO2_Vabs");
            tableMapping.ColumnMappings.Add("CO2_Votn", "CO2_Votn");
            tableMapping.ColumnMappings.Add("C2H4_Vabs", "C2H4_Vabs");
            tableMapping.ColumnMappings.Add("C2H4_Votn", "C2H4_Votn");
            tableMapping.ColumnMappings.Add("C2H6_Vabs", "C2H6_Vabs");
            tableMapping.ColumnMappings.Add("C2H6_Votn", "C2H6_Votn");
            tableMapping.ColumnMappings.Add("C2H2_Vabs", "C2H2_Vabs");
            tableMapping.ColumnMappings.Add("C2H2_Votn", "C2H2_Votn");
            tableMapping.ColumnMappings.Add("CycleCount", "CycleCount");
            tableMapping.ColumnMappings.Add("CH3OH", "CH3OH");
            tableMapping.ColumnMappings.Add("CH3OH_Vabs", "CH3OH_Vabs");
            tableMapping.ColumnMappings.Add("CH3OH_Votn", "CH3OH_Votn");
            tableMapping.ColumnMappings.Add("CondenserState", "CondenserState");
            tableMapping.ColumnMappings.Add("Temperature", "Temperature");
            tableMapping.ColumnMappings.Add("Recommendation", "Recommendation");
            tableMapping.ColumnMappings.Add("Conclusion", "Conclusion");
            tableMapping.ColumnMappings.Add("CCNext", "CCNext");
            tableMapping.ColumnMappings.Add("VR", "VR");
            tableMapping.ColumnMappings.Add("KCF", "KCF");
            tableMapping.ColumnMappings.Add("CO2_CO", "CO2_CO");
            tableMapping.ColumnMappings.Add("CO2_CO_Vabs", "CO2_CO_Vabs");
            tableMapping.ColumnMappings.Add("CO2_CO_Votn", "CO2_CO_Votn");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Condenser.Properties.Settings.Default.condenserConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT t.*\r\nFROM CondenserTest AS t\r\nWHERE  t.CondenserTestID = @cond_test_id AND" +
                " t.CondenserID = @cond_id ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@cond_test_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.Size = 8;
            param.SourceColumn = "CondenserTestID";
            this._commandCollection[0].Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@cond_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.Size = 8;
            param.SourceColumn = "CondenserID";
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetQuery.QCondenserTestRecordDataTable dataTable, long cond_test_id, long cond_id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((long)(cond_test_id));
            this.Adapter.SelectCommand.Parameters[1].Value = ((long)(cond_id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetQuery.QCondenserTestRecordDataTable GetData(long cond_test_id, long cond_id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((long)(cond_test_id));
            this.Adapter.SelectCommand.Parameters[1].Value = ((long)(cond_id));
            DataSetQuery.QCondenserTestRecordDataTable dataTable = new DataSetQuery.QCondenserTestRecordDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QCondenserTestTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public QCondenserTestTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QCondenserTest";
            tableMapping.ColumnMappings.Add("CondenserTestID", "CondenserTestID");
            tableMapping.ColumnMappings.Add("CondenserID", "CondenserID");
            tableMapping.ColumnMappings.Add("CondenserTestType", "CondenserTestType");
            tableMapping.ColumnMappings.Add("CondenserTestDate", "CondenserTestDate");
            tableMapping.ColumnMappings.Add("CondenserTestEquipment", "CondenserTestEquipment");
            tableMapping.ColumnMappings.Add("TestVoltageImageForm", "TestVoltageImageForm");
            tableMapping.ColumnMappings.Add("TestVoltageImagePoints", "TestVoltageImagePoints");
            tableMapping.ColumnMappings.Add("TestVoltageFrequency", "TestVoltageFrequency");
            tableMapping.ColumnMappings.Add("TestVoltageAmplitude", "TestVoltageAmplitude");
            tableMapping.ColumnMappings.Add("AnalysisDateProbe", "AnalysisDateProbe");
            tableMapping.ColumnMappings.Add("AnalysisDateExecute", "AnalysisDateExecute");
            tableMapping.ColumnMappings.Add("H2", "H2");
            tableMapping.ColumnMappings.Add("CH4", "CH4");
            tableMapping.ColumnMappings.Add("CO", "CO");
            tableMapping.ColumnMappings.Add("CO2", "CO2");
            tableMapping.ColumnMappings.Add("C2H4", "C2H4");
            tableMapping.ColumnMappings.Add("C2H6", "C2H6");
            tableMapping.ColumnMappings.Add("C2H2", "C2H2");
            tableMapping.ColumnMappings.Add("AnalysisEmployeeFIO", "AnalysisEmployeeFIO");
            tableMapping.ColumnMappings.Add("H2_Vabs", "H2_Vabs");
            tableMapping.ColumnMappings.Add("H2_Votn", "H2_Votn");
            tableMapping.ColumnMappings.Add("O2", "O2");
            tableMapping.ColumnMappings.Add("O2_Vabs", "O2_Vabs");
            tableMapping.ColumnMappings.Add("O2_Votn", "O2_Votn");
            tableMapping.ColumnMappings.Add("N2", "N2");
            tableMapping.ColumnMappings.Add("N2_Vabs", "N2_Vabs");
            tableMapping.ColumnMappings.Add("N2_Votn", "N2_Votn");
            tableMapping.ColumnMappings.Add("CH4_Vabs", "CH4_Vabs");
            tableMapping.ColumnMappings.Add("CH4_Votn", "CH4_Votn");
            tableMapping.ColumnMappings.Add("CO_Vabs", "CO_Vabs");
            tableMapping.ColumnMappings.Add("CO_Votn", "CO_Votn");
            tableMapping.ColumnMappings.Add("CO2_Vabs", "CO2_Vabs");
            tableMapping.ColumnMappings.Add("CO2_Votn", "CO2_Votn");
            tableMapping.ColumnMappings.Add("C2H4_Vabs", "C2H4_Vabs");
            tableMapping.ColumnMappings.Add("C2H4_Votn", "C2H4_Votn");
            tableMapping.ColumnMappings.Add("C2H6_Vabs", "C2H6_Vabs");
            tableMapping.ColumnMappings.Add("C2H6_Votn", "C2H6_Votn");
            tableMapping.ColumnMappings.Add("C2H2_Vabs", "C2H2_Vabs");
            tableMapping.ColumnMappings.Add("C2H2_Votn", "C2H2_Votn");
            tableMapping.ColumnMappings.Add("CycleCount", "CycleCount");
            tableMapping.ColumnMappings.Add("CH3OH", "CH3OH");
            tableMapping.ColumnMappings.Add("CH3OH_Vabs", "CH3OH_Vabs");
            tableMapping.ColumnMappings.Add("CH3OH_Votn", "CH3OH_Votn");
            tableMapping.ColumnMappings.Add("Temperature", "Temperature");
            tableMapping.ColumnMappings.Add("CondenserState", "CondenserState");
            tableMapping.ColumnMappings.Add("Recommendation", "Recommendation");
            tableMapping.ColumnMappings.Add("Conclusion", "Conclusion");
            tableMapping.ColumnMappings.Add("CCNext", "CCNext");
            tableMapping.ColumnMappings.Add("VR", "VR");
            tableMapping.ColumnMappings.Add("KCF", "KCF");
            tableMapping.ColumnMappings.Add("CO2_CO_Votn", "CO2_CO_Votn");
            tableMapping.ColumnMappings.Add("CO2_CO_Vabs", "CO2_CO_Vabs");
            tableMapping.ColumnMappings.Add("CO2_CO", "CO2_CO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [CondenserTest] WHERE (([CondenserTestID] = @Original_CondenserTestID" +
                ") AND ([CondenserID] = @Original_CondenserID) AND ([CondenserTestType] = @Origin" +
                "al_CondenserTestType) AND ([CondenserTestDate] = @Original_CondenserTestDate) AN" +
                "D ([CondenserTestEquipment] = @Original_CondenserTestEquipment) AND ((@IsNull_Te" +
                "mperature = 1 AND [Temperature] IS NULL) OR ([Temperature] = @Original_Temperatu" +
                "re)) AND ((@IsNull_TestVoltageImageForm = 1 AND [TestVoltageImageForm] IS NULL) " +
                "OR ([TestVoltageImageForm] = @Original_TestVoltageImageForm)) AND ([TestVoltageI" +
                "magePoints] = @Original_TestVoltageImagePoints) AND ([TestVoltageFrequency] = @O" +
                "riginal_TestVoltageFrequency) AND ((@IsNull_TestVoltageAmplitude = 1 AND [TestVo" +
                "ltageAmplitude] IS NULL) OR ([TestVoltageAmplitude] = @Original_TestVoltageAmpli" +
                "tude)) AND ((@IsNull_CycleCount = 1 AND [CycleCount] IS NULL) OR ([CycleCount] =" +
                " @Original_CycleCount)) AND ((@IsNull_AnalysisDateProbe = 1 AND [AnalysisDatePro" +
                "be] IS NULL) OR ([AnalysisDateProbe] = @Original_AnalysisDateProbe)) AND ((@IsNu" +
                "ll_AnalysisDateExecute = 1 AND [AnalysisDateExecute] IS NULL) OR ([AnalysisDateE" +
                "xecute] = @Original_AnalysisDateExecute)) AND ((@IsNull_AnalysisEmployeeFIO = 1 " +
                "AND [AnalysisEmployeeFIO] IS NULL) OR ([AnalysisEmployeeFIO] = @Original_Analysi" +
                "sEmployeeFIO)) AND ([CondenserState] = @Original_CondenserState) AND ((@IsNull_H" +
                "2 = 1 AND [H2] IS NULL) OR ([H2] = @Original_H2)) AND ((@IsNull_H2_Vabs = 1 AND " +
                "[H2_Vabs] IS NULL) OR ([H2_Vabs] = @Original_H2_Vabs)) AND ((@IsNull_H2_Votn = 1" +
                " AND [H2_Votn] IS NULL) OR ([H2_Votn] = @Original_H2_Votn)) AND ((@IsNull_O2 = 1" +
                " AND [O2] IS NULL) OR ([O2] = @Original_O2)) AND ((@IsNull_O2_Vabs = 1 AND [O2_V" +
                "abs] IS NULL) OR ([O2_Vabs] = @Original_O2_Vabs)) AND ((@IsNull_O2_Votn = 1 AND " +
                "[O2_Votn] IS NULL) OR ([O2_Votn] = @Original_O2_Votn)) AND ((@IsNull_N2 = 1 AND " +
                "[N2] IS NULL) OR ([N2] = @Original_N2)) AND ((@IsNull_N2_Vabs = 1 AND [N2_Vabs] " +
                "IS NULL) OR ([N2_Vabs] = @Original_N2_Vabs)) AND ((@IsNull_N2_Votn = 1 AND [N2_V" +
                "otn] IS NULL) OR ([N2_Votn] = @Original_N2_Votn)) AND ((@IsNull_CH4 = 1 AND [CH4" +
                "] IS NULL) OR ([CH4] = @Original_CH4)) AND ((@IsNull_CH4_Vabs = 1 AND [CH4_Vabs]" +
                " IS NULL) OR ([CH4_Vabs] = @Original_CH4_Vabs)) AND ((@IsNull_CH4_Votn = 1 AND [" +
                "CH4_Votn] IS NULL) OR ([CH4_Votn] = @Original_CH4_Votn)) AND ((@IsNull_CO = 1 AN" +
                "D [CO] IS NULL) OR ([CO] = @Original_CO)) AND ((@IsNull_CO_Vabs = 1 AND [CO_Vabs" +
                "] IS NULL) OR ([CO_Vabs] = @Original_CO_Vabs)) AND ((@IsNull_CO_Votn = 1 AND [CO" +
                "_Votn] IS NULL) OR ([CO_Votn] = @Original_CO_Votn)) AND ((@IsNull_CO2 = 1 AND [C" +
                "O2] IS NULL) OR ([CO2] = @Original_CO2)) AND ((@IsNull_CO2_Vabs = 1 AND [CO2_Vab" +
                "s] IS NULL) OR ([CO2_Vabs] = @Original_CO2_Vabs)) AND ((@IsNull_CO2_Votn = 1 AND" +
                " [CO2_Votn] IS NULL) OR ([CO2_Votn] = @Original_CO2_Votn)) AND ((@IsNull_C2H4 = " +
                "1 AND [C2H4] IS NULL) OR ([C2H4] = @Original_C2H4)) AND ((@IsNull_C2H4_Vabs = 1 " +
                "AND [C2H4_Vabs] IS NULL) OR ([C2H4_Vabs] = @Original_C2H4_Vabs)) AND ((@IsNull_C" +
                "2H4_Votn = 1 AND [C2H4_Votn] IS NULL) OR ([C2H4_Votn] = @Original_C2H4_Votn)) AN" +
                "D ((@IsNull_C2H6 = 1 AND [C2H6] IS NULL) OR ([C2H6] = @Original_C2H6)) AND ((@Is" +
                "Null_C2H6_Vabs = 1 AND [C2H6_Vabs] IS NULL) OR ([C2H6_Vabs] = @Original_C2H6_Vab" +
                "s)) AND ((@IsNull_C2H6_Votn = 1 AND [C2H6_Votn] IS NULL) OR ([C2H6_Votn] = @Orig" +
                "inal_C2H6_Votn)) AND ((@IsNull_C2H2 = 1 AND [C2H2] IS NULL) OR ([C2H2] = @Origin" +
                "al_C2H2)) AND ((@IsNull_C2H2_Vabs = 1 AND [C2H2_Vabs] IS NULL) OR ([C2H2_Vabs] =" +
                " @Original_C2H2_Vabs)) AND ((@IsNull_C2H2_Votn = 1 AND [C2H2_Votn] IS NULL) OR (" +
                "[C2H2_Votn] = @Original_C2H2_Votn)) AND ((@IsNull_CH3OH = 1 AND [CH3OH] IS NULL)" +
                " OR ([CH3OH] = @Original_CH3OH)) AND ((@IsNull_CH3OH_Vabs = 1 AND [CH3OH_Vabs] I" +
                "S NULL) OR ([CH3OH_Vabs] = @Original_CH3OH_Vabs)) AND ((@IsNull_CH3OH_Votn = 1 A" +
                "ND [CH3OH_Votn] IS NULL) OR ([CH3OH_Votn] = @Original_CH3OH_Votn)) AND ((@IsNull" +
                "_Recommendation = 1 AND [Recommendation] IS NULL) OR ([Recommendation] = @Origin" +
                "al_Recommendation)) AND ((@IsNull_Conclusion = 1 AND [Conclusion] IS NULL) OR ([" +
                "Conclusion] = @Original_Conclusion)) AND ((@IsNull_CCNext = 1 AND [CCNext] IS NU" +
                "LL) OR ([CCNext] = @Original_CCNext)) AND ((@IsNull_VR = 1 AND [VR] IS NULL) OR " +
                "([VR] = @Original_VR)) AND ((@IsNull_KCF = 1 AND [KCF] IS NULL) OR ([KCF] = @Ori" +
                "ginal_KCF)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CondenserTestID";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "CondenserTestID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CondenserID";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "CondenserID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CondenserTestType";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "CondenserTestType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CondenserTestDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "CondenserTestDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CondenserTestEquipment";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "CondenserTestEquipment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Temperature";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Temperature";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Temperature";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Temperature";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_TestVoltageImageForm";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "TestVoltageImageForm";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_TestVoltageImageForm";
            param.DbType = global::System.Data.DbType.Binary;
            param.DbType = global::System.Data.DbType.Binary;
            param.SourceColumn = "TestVoltageImageForm";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_TestVoltageImagePoints";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "TestVoltageImagePoints";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_TestVoltageFrequency";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "TestVoltageFrequency";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_TestVoltageAmplitude";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "TestVoltageAmplitude";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_TestVoltageAmplitude";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "TestVoltageAmplitude";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CycleCount";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CycleCount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CycleCount";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "CycleCount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_AnalysisDateProbe";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "AnalysisDateProbe";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_AnalysisDateProbe";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "AnalysisDateProbe";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_AnalysisDateExecute";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "AnalysisDateExecute";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_AnalysisDateExecute";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "AnalysisDateExecute";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_AnalysisEmployeeFIO";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "AnalysisEmployeeFIO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_AnalysisEmployeeFIO";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "AnalysisEmployeeFIO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CondenserState";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "CondenserState";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_H2";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "H2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_H2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "H2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_H2_Vabs";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "H2_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_H2_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "H2_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_H2_Votn";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "H2_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_H2_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "H2_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_O2";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "O2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_O2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "O2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_O2_Vabs";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "O2_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_O2_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "O2_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_O2_Votn";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "O2_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_O2_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "O2_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_N2";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "N2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_N2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "N2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_N2_Vabs";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "N2_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_N2_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "N2_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_N2_Votn";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "N2_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_N2_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "N2_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CH4";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CH4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CH4";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CH4_Vabs";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CH4_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CH4_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH4_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CH4_Votn";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CH4_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CH4_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH4_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CO";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CO";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CO_Vabs";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CO_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CO_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CO_Votn";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CO_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CO_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CO2";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CO2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CO2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CO2_Vabs";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CO2_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CO2_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO2_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CO2_Votn";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CO2_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CO2_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO2_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_C2H4";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "C2H4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_C2H4";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_C2H4_Vabs";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "C2H4_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_C2H4_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H4_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_C2H4_Votn";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "C2H4_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_C2H4_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H4_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_C2H6";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "C2H6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_C2H6";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_C2H6_Vabs";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "C2H6_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_C2H6_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H6_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_C2H6_Votn";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "C2H6_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_C2H6_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H6_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_C2H2";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "C2H2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_C2H2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_C2H2_Vabs";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "C2H2_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_C2H2_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H2_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_C2H2_Votn";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "C2H2_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_C2H2_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H2_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CH3OH";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CH3OH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CH3OH";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH3OH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CH3OH_Vabs";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CH3OH_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CH3OH_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH3OH_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CH3OH_Votn";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CH3OH_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CH3OH_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH3OH_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Recommendation";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Recommendation";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Recommendation";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Recommendation";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Conclusion";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Conclusion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Conclusion";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Conclusion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CCNext";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CCNext";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CCNext";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "CCNext";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_VR";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "VR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_VR";
            param.DbType = global::System.Data.DbType.Double;
            param.DbType = global::System.Data.DbType.Double;
            param.SourceColumn = "VR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KCF";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KCF";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KCF";
            param.DbType = global::System.Data.DbType.Double;
            param.DbType = global::System.Data.DbType.Double;
            param.SourceColumn = "KCF";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [CondenserTest] ([CondenserID], [CondenserTestType], [CondenserTestDate], [CondenserTestEquipment], [Temperature], [TestVoltageImageForm], [TestVoltageImagePoints], [TestVoltageFrequency], [TestVoltageAmplitude], [CycleCount], [AnalysisDateProbe], [AnalysisDateExecute], [AnalysisEmployeeFIO], [CondenserState], [H2], [H2_Vabs], [H2_Votn], [O2], [O2_Vabs], [O2_Votn], [N2], [N2_Vabs], [N2_Votn], [CH4], [CH4_Vabs], [CH4_Votn], [CO], [CO_Vabs], [CO_Votn], [CO2], [CO2_Vabs], [CO2_Votn], [C2H4], [C2H4_Vabs], [C2H4_Votn], [C2H6], [C2H6_Vabs], [C2H6_Votn], [C2H2], [C2H2_Vabs], [C2H2_Votn], [CH3OH], [CH3OH_Vabs], [CH3OH_Votn], [Recommendation], [Conclusion], [CCNext], [VR], [KCF]) VALUES (@CondenserID, @CondenserTestType, @CondenserTestDate, @CondenserTestEquipment, @Temperature, @TestVoltageImageForm, @TestVoltageImagePoints, @TestVoltageFrequency, @TestVoltageAmplitude, @CycleCount, @AnalysisDateProbe, @AnalysisDateExecute, @AnalysisEmployeeFIO, @CondenserState, @H2, @H2_Vabs, @H2_Votn, @O2, @O2_Vabs, @O2_Votn, @N2, @N2_Vabs, @N2_Votn, @CH4, @CH4_Vabs, @CH4_Votn, @CO, @CO_Vabs, @CO_Votn, @CO2, @CO2_Vabs, @CO2_Votn, @C2H4, @C2H4_Vabs, @C2H4_Votn, @C2H6, @C2H6_Vabs, @C2H6_Votn, @C2H2, @C2H2_Vabs, @C2H2_Votn, @CH3OH, @CH3OH_Vabs, @CH3OH_Votn, @Recommendation, @Conclusion, @CCNext, @VR, @KCF)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CondenserID";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "CondenserID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CondenserTestType";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "CondenserTestType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CondenserTestDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "CondenserTestDate";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CondenserTestEquipment";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "CondenserTestEquipment";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Temperature";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Temperature";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@TestVoltageImageForm";
            param.DbType = global::System.Data.DbType.Binary;
            param.DbType = global::System.Data.DbType.Binary;
            param.SourceColumn = "TestVoltageImageForm";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@TestVoltageImagePoints";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "TestVoltageImagePoints";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@TestVoltageFrequency";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "TestVoltageFrequency";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@TestVoltageAmplitude";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "TestVoltageAmplitude";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CycleCount";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "CycleCount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@AnalysisDateProbe";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "AnalysisDateProbe";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@AnalysisDateExecute";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "AnalysisDateExecute";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@AnalysisEmployeeFIO";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "AnalysisEmployeeFIO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CondenserState";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "CondenserState";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@H2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "H2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@H2_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "H2_Vabs";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@H2_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "H2_Votn";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@O2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "O2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@O2_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "O2_Vabs";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@O2_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "O2_Votn";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@N2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "N2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@N2_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "N2_Vabs";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@N2_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "N2_Votn";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CH4";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH4";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CH4_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH4_Vabs";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CH4_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH4_Votn";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CO";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CO_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO_Vabs";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CO_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO_Votn";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CO2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CO2_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO2_Vabs";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CO2_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO2_Votn";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@C2H4";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H4";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@C2H4_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H4_Vabs";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@C2H4_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H4_Votn";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@C2H6";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H6";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@C2H6_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H6_Vabs";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@C2H6_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H6_Votn";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@C2H2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@C2H2_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H2_Vabs";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@C2H2_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H2_Votn";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CH3OH";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH3OH";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CH3OH_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH3OH_Vabs";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CH3OH_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH3OH_Votn";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Recommendation";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Recommendation";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Conclusion";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Conclusion";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CCNext";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "CCNext";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@VR";
            param.DbType = global::System.Data.DbType.Double;
            param.DbType = global::System.Data.DbType.Double;
            param.SourceColumn = "VR";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KCF";
            param.DbType = global::System.Data.DbType.Double;
            param.DbType = global::System.Data.DbType.Double;
            param.SourceColumn = "KCF";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::System.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [CondenserTest] SET [CondenserID] = @CondenserID, [CondenserTestType] = @C" +
                "ondenserTestType, [CondenserTestDate] = @CondenserTestDate, [CondenserTestEquipm" +
                "ent] = @CondenserTestEquipment, [Temperature] = @Temperature, [TestVoltageImageF" +
                "orm] = @TestVoltageImageForm, [TestVoltageImagePoints] = @TestVoltageImagePoints" +
                ", [TestVoltageFrequency] = @TestVoltageFrequency, [TestVoltageAmplitude] = @Test" +
                "VoltageAmplitude, [CycleCount] = @CycleCount, [AnalysisDateProbe] = @AnalysisDat" +
                "eProbe, [AnalysisDateExecute] = @AnalysisDateExecute, [AnalysisEmployeeFIO] = @A" +
                "nalysisEmployeeFIO, [CondenserState] = @CondenserState, [H2] = @H2, [H2_Vabs] = " +
                "@H2_Vabs, [H2_Votn] = @H2_Votn, [O2] = @O2, [O2_Vabs] = @O2_Vabs, [O2_Votn] = @O" +
                "2_Votn, [N2] = @N2, [N2_Vabs] = @N2_Vabs, [N2_Votn] = @N2_Votn, [CH4] = @CH4, [C" +
                "H4_Vabs] = @CH4_Vabs, [CH4_Votn] = @CH4_Votn, [CO] = @CO, [CO_Vabs] = @CO_Vabs, " +
                "[CO_Votn] = @CO_Votn, [CO2] = @CO2, [CO2_Vabs] = @CO2_Vabs, [CO2_Votn] = @CO2_Vo" +
                "tn, [C2H4] = @C2H4, [C2H4_Vabs] = @C2H4_Vabs, [C2H4_Votn] = @C2H4_Votn, [C2H6] =" +
                " @C2H6, [C2H6_Vabs] = @C2H6_Vabs, [C2H6_Votn] = @C2H6_Votn, [C2H2] = @C2H2, [C2H" +
                "2_Vabs] = @C2H2_Vabs, [C2H2_Votn] = @C2H2_Votn, [CH3OH] = @CH3OH, [CH3OH_Vabs] =" +
                " @CH3OH_Vabs, [CH3OH_Votn] = @CH3OH_Votn, [Recommendation] = @Recommendation, [C" +
                "onclusion] = @Conclusion, [CCNext] = @CCNext, [VR] = @VR, [KCF] = @KCF WHERE (([" +
                "CondenserTestID] = @Original_CondenserTestID) AND ([CondenserID] = @Original_Con" +
                "denserID) AND ([CondenserTestType] = @Original_CondenserTestType) AND ([Condense" +
                "rTestDate] = @Original_CondenserTestDate) AND ([CondenserTestEquipment] = @Origi" +
                "nal_CondenserTestEquipment) AND ((@IsNull_Temperature = 1 AND [Temperature] IS N" +
                "ULL) OR ([Temperature] = @Original_Temperature)) AND ((@IsNull_TestVoltageImageF" +
                "orm = 1 AND [TestVoltageImageForm] IS NULL) OR ([TestVoltageImageForm] = @Origin" +
                "al_TestVoltageImageForm)) AND ([TestVoltageImagePoints] = @Original_TestVoltageI" +
                "magePoints) AND ([TestVoltageFrequency] = @Original_TestVoltageFrequency) AND ((" +
                "@IsNull_TestVoltageAmplitude = 1 AND [TestVoltageAmplitude] IS NULL) OR ([TestVo" +
                "ltageAmplitude] = @Original_TestVoltageAmplitude)) AND ((@IsNull_CycleCount = 1 " +
                "AND [CycleCount] IS NULL) OR ([CycleCount] = @Original_CycleCount)) AND ((@IsNul" +
                "l_AnalysisDateProbe = 1 AND [AnalysisDateProbe] IS NULL) OR ([AnalysisDateProbe]" +
                " = @Original_AnalysisDateProbe)) AND ((@IsNull_AnalysisDateExecute = 1 AND [Anal" +
                "ysisDateExecute] IS NULL) OR ([AnalysisDateExecute] = @Original_AnalysisDateExec" +
                "ute)) AND ((@IsNull_AnalysisEmployeeFIO = 1 AND [AnalysisEmployeeFIO] IS NULL) O" +
                "R ([AnalysisEmployeeFIO] = @Original_AnalysisEmployeeFIO)) AND ([CondenserState]" +
                " = @Original_CondenserState) AND ((@IsNull_H2 = 1 AND [H2] IS NULL) OR ([H2] = @" +
                "Original_H2)) AND ((@IsNull_H2_Vabs = 1 AND [H2_Vabs] IS NULL) OR ([H2_Vabs] = @" +
                "Original_H2_Vabs)) AND ((@IsNull_H2_Votn = 1 AND [H2_Votn] IS NULL) OR ([H2_Votn" +
                "] = @Original_H2_Votn)) AND ((@IsNull_O2 = 1 AND [O2] IS NULL) OR ([O2] = @Origi" +
                "nal_O2)) AND ((@IsNull_O2_Vabs = 1 AND [O2_Vabs] IS NULL) OR ([O2_Vabs] = @Origi" +
                "nal_O2_Vabs)) AND ((@IsNull_O2_Votn = 1 AND [O2_Votn] IS NULL) OR ([O2_Votn] = @" +
                "Original_O2_Votn)) AND ((@IsNull_N2 = 1 AND [N2] IS NULL) OR ([N2] = @Original_N" +
                "2)) AND ((@IsNull_N2_Vabs = 1 AND [N2_Vabs] IS NULL) OR ([N2_Vabs] = @Original_N" +
                "2_Vabs)) AND ((@IsNull_N2_Votn = 1 AND [N2_Votn] IS NULL) OR ([N2_Votn] = @Origi" +
                "nal_N2_Votn)) AND ((@IsNull_CH4 = 1 AND [CH4] IS NULL) OR ([CH4] = @Original_CH4" +
                ")) AND ((@IsNull_CH4_Vabs = 1 AND [CH4_Vabs] IS NULL) OR ([CH4_Vabs] = @Original" +
                "_CH4_Vabs)) AND ((@IsNull_CH4_Votn = 1 AND [CH4_Votn] IS NULL) OR ([CH4_Votn] = " +
                "@Original_CH4_Votn)) AND ((@IsNull_CO = 1 AND [CO] IS NULL) OR ([CO] = @Original" +
                "_CO)) AND ((@IsNull_CO_Vabs = 1 AND [CO_Vabs] IS NULL) OR ([CO_Vabs] = @Original" +
                "_CO_Vabs)) AND ((@IsNull_CO_Votn = 1 AND [CO_Votn] IS NULL) OR ([CO_Votn] = @Ori" +
                "ginal_CO_Votn)) AND ((@IsNull_CO2 = 1 AND [CO2] IS NULL) OR ([CO2] = @Original_C" +
                "O2)) AND ((@IsNull_CO2_Vabs = 1 AND [CO2_Vabs] IS NULL) OR ([CO2_Vabs] = @Origin" +
                "al_CO2_Vabs)) AND ((@IsNull_CO2_Votn = 1 AND [CO2_Votn] IS NULL) OR ([CO2_Votn] " +
                "= @Original_CO2_Votn)) AND ((@IsNull_C2H4 = 1 AND [C2H4] IS NULL) OR ([C2H4] = @" +
                "Original_C2H4)) AND ((@IsNull_C2H4_Vabs = 1 AND [C2H4_Vabs] IS NULL) OR ([C2H4_V" +
                "abs] = @Original_C2H4_Vabs)) AND ((@IsNull_C2H4_Votn = 1 AND [C2H4_Votn] IS NULL" +
                ") OR ([C2H4_Votn] = @Original_C2H4_Votn)) AND ((@IsNull_C2H6 = 1 AND [C2H6] IS N" +
                "ULL) OR ([C2H6] = @Original_C2H6)) AND ((@IsNull_C2H6_Vabs = 1 AND [C2H6_Vabs] I" +
                "S NULL) OR ([C2H6_Vabs] = @Original_C2H6_Vabs)) AND ((@IsNull_C2H6_Votn = 1 AND " +
                "[C2H6_Votn] IS NULL) OR ([C2H6_Votn] = @Original_C2H6_Votn)) AND ((@IsNull_C2H2 " +
                "= 1 AND [C2H2] IS NULL) OR ([C2H2] = @Original_C2H2)) AND ((@IsNull_C2H2_Vabs = " +
                "1 AND [C2H2_Vabs] IS NULL) OR ([C2H2_Vabs] = @Original_C2H2_Vabs)) AND ((@IsNull" +
                "_C2H2_Votn = 1 AND [C2H2_Votn] IS NULL) OR ([C2H2_Votn] = @Original_C2H2_Votn)) " +
                "AND ((@IsNull_CH3OH = 1 AND [CH3OH] IS NULL) OR ([CH3OH] = @Original_CH3OH)) AND" +
                " ((@IsNull_CH3OH_Vabs = 1 AND [CH3OH_Vabs] IS NULL) OR ([CH3OH_Vabs] = @Original" +
                "_CH3OH_Vabs)) AND ((@IsNull_CH3OH_Votn = 1 AND [CH3OH_Votn] IS NULL) OR ([CH3OH_" +
                "Votn] = @Original_CH3OH_Votn)) AND ((@IsNull_Recommendation = 1 AND [Recommendat" +
                "ion] IS NULL) OR ([Recommendation] = @Original_Recommendation)) AND ((@IsNull_Co" +
                "nclusion = 1 AND [Conclusion] IS NULL) OR ([Conclusion] = @Original_Conclusion))" +
                " AND ((@IsNull_CCNext = 1 AND [CCNext] IS NULL) OR ([CCNext] = @Original_CCNext)" +
                ") AND ((@IsNull_VR = 1 AND [VR] IS NULL) OR ([VR] = @Original_VR)) AND ((@IsNull" +
                "_KCF = 1 AND [KCF] IS NULL) OR ([KCF] = @Original_KCF)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CondenserID";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "CondenserID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CondenserTestType";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "CondenserTestType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CondenserTestDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "CondenserTestDate";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CondenserTestEquipment";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "CondenserTestEquipment";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Temperature";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Temperature";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@TestVoltageImageForm";
            param.DbType = global::System.Data.DbType.Binary;
            param.DbType = global::System.Data.DbType.Binary;
            param.SourceColumn = "TestVoltageImageForm";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@TestVoltageImagePoints";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "TestVoltageImagePoints";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@TestVoltageFrequency";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "TestVoltageFrequency";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@TestVoltageAmplitude";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "TestVoltageAmplitude";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CycleCount";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "CycleCount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@AnalysisDateProbe";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "AnalysisDateProbe";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@AnalysisDateExecute";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "AnalysisDateExecute";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@AnalysisEmployeeFIO";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "AnalysisEmployeeFIO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CondenserState";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "CondenserState";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@H2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "H2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@H2_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "H2_Vabs";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@H2_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "H2_Votn";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@O2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "O2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@O2_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "O2_Vabs";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@O2_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "O2_Votn";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@N2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "N2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@N2_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "N2_Vabs";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@N2_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "N2_Votn";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CH4";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH4";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CH4_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH4_Vabs";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CH4_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH4_Votn";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CO";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CO_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO_Vabs";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CO_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO_Votn";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CO2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CO2_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO2_Vabs";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CO2_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO2_Votn";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@C2H4";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H4";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@C2H4_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H4_Vabs";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@C2H4_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H4_Votn";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@C2H6";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H6";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@C2H6_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H6_Vabs";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@C2H6_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H6_Votn";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@C2H2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@C2H2_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H2_Vabs";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@C2H2_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H2_Votn";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CH3OH";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH3OH";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CH3OH_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH3OH_Vabs";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CH3OH_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH3OH_Votn";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Recommendation";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Recommendation";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Conclusion";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Conclusion";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@CCNext";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "CCNext";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@VR";
            param.DbType = global::System.Data.DbType.Double;
            param.DbType = global::System.Data.DbType.Double;
            param.SourceColumn = "VR";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@KCF";
            param.DbType = global::System.Data.DbType.Double;
            param.DbType = global::System.Data.DbType.Double;
            param.SourceColumn = "KCF";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CondenserTestID";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "CondenserTestID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CondenserID";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "CondenserID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CondenserTestType";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "CondenserTestType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CondenserTestDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "CondenserTestDate";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CondenserTestEquipment";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "CondenserTestEquipment";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Temperature";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Temperature";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Temperature";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Temperature";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_TestVoltageImageForm";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "TestVoltageImageForm";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_TestVoltageImageForm";
            param.DbType = global::System.Data.DbType.Binary;
            param.DbType = global::System.Data.DbType.Binary;
            param.SourceColumn = "TestVoltageImageForm";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_TestVoltageImagePoints";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "TestVoltageImagePoints";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_TestVoltageFrequency";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "TestVoltageFrequency";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_TestVoltageAmplitude";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "TestVoltageAmplitude";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_TestVoltageAmplitude";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "TestVoltageAmplitude";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CycleCount";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CycleCount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CycleCount";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "CycleCount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_AnalysisDateProbe";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "AnalysisDateProbe";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_AnalysisDateProbe";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "AnalysisDateProbe";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_AnalysisDateExecute";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "AnalysisDateExecute";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_AnalysisDateExecute";
            param.DbType = global::System.Data.DbType.DateTime;
            param.DbType = global::System.Data.DbType.DateTime;
            param.SourceColumn = "AnalysisDateExecute";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_AnalysisEmployeeFIO";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "AnalysisEmployeeFIO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_AnalysisEmployeeFIO";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "AnalysisEmployeeFIO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CondenserState";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "CondenserState";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_H2";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "H2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_H2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "H2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_H2_Vabs";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "H2_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_H2_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "H2_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_H2_Votn";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "H2_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_H2_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "H2_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_O2";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "O2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_O2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "O2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_O2_Vabs";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "O2_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_O2_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "O2_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_O2_Votn";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "O2_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_O2_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "O2_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_N2";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "N2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_N2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "N2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_N2_Vabs";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "N2_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_N2_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "N2_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_N2_Votn";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "N2_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_N2_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "N2_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CH4";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CH4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CH4";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CH4_Vabs";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CH4_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CH4_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH4_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CH4_Votn";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CH4_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CH4_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH4_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CO";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CO";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CO_Vabs";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CO_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CO_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CO_Votn";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CO_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CO_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CO2";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CO2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CO2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CO2_Vabs";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CO2_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CO2_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO2_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CO2_Votn";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CO2_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CO2_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CO2_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_C2H4";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "C2H4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_C2H4";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H4";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_C2H4_Vabs";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "C2H4_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_C2H4_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H4_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_C2H4_Votn";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "C2H4_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_C2H4_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H4_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_C2H6";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "C2H6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_C2H6";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H6";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_C2H6_Vabs";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "C2H6_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_C2H6_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H6_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_C2H6_Votn";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "C2H6_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_C2H6_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H6_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_C2H2";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "C2H2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_C2H2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_C2H2_Vabs";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "C2H2_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_C2H2_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H2_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_C2H2_Votn";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "C2H2_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_C2H2_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "C2H2_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CH3OH";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CH3OH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CH3OH";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH3OH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CH3OH_Vabs";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CH3OH_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CH3OH_Vabs";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH3OH_Vabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CH3OH_Votn";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CH3OH_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CH3OH_Votn";
            param.DbType = global::System.Data.DbType.Decimal;
            param.DbType = global::System.Data.DbType.Decimal;
            param.SourceColumn = "CH3OH_Votn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Recommendation";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Recommendation";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Recommendation";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Recommendation";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_Conclusion";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "Conclusion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_Conclusion";
            param.DbType = global::System.Data.DbType.String;
            param.SourceColumn = "Conclusion";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_CCNext";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "CCNext";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_CCNext";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.SourceColumn = "CCNext";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_VR";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "VR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_VR";
            param.DbType = global::System.Data.DbType.Double;
            param.DbType = global::System.Data.DbType.Double;
            param.SourceColumn = "VR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@IsNull_KCF";
            param.DbType = global::System.Data.DbType.Int32;
            param.DbType = global::System.Data.DbType.Int32;
            param.SourceColumn = "KCF";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Original_KCF";
            param.DbType = global::System.Data.DbType.Double;
            param.DbType = global::System.Data.DbType.Double;
            param.SourceColumn = "KCF";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Condenser.Properties.Settings.Default.condenserConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM CondenserTest WHERE CondenserID = @condenser_id ORDER BY CondenserT" +
                "estDate";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@condenser_id";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.Size = 8;
            param.SourceColumn = "CondenserID";
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetQuery.QCondenserTestDataTable dataTable, long condenser_id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((long)(condenser_id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetQuery.QCondenserTestDataTable GetData(long condenser_id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((long)(condenser_id));
            DataSetQuery.QCondenserTestDataTable dataTable = new DataSetQuery.QCondenserTestDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetQuery.QCondenserTestDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetQuery dataSet) {
            return this.Adapter.Update(dataSet, "QCondenserTest");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    long Original_CondenserTestID, 
                    long Original_CondenserID, 
                    long Original_CondenserTestType, 
                    System.DateTime Original_CondenserTestDate, 
                    string Original_CondenserTestEquipment, 
                    string Original_Temperature, 
                    byte[] Original_TestVoltageImageForm, 
                    string Original_TestVoltageImagePoints, 
                    decimal Original_TestVoltageFrequency, 
                    global::System.Nullable<decimal> Original_TestVoltageAmplitude, 
                    global::System.Nullable<long> Original_CycleCount, 
                    global::System.Nullable<global::System.DateTime> Original_AnalysisDateProbe, 
                    global::System.Nullable<global::System.DateTime> Original_AnalysisDateExecute, 
                    string Original_AnalysisEmployeeFIO, 
                    long Original_CondenserState, 
                    global::System.Nullable<decimal> Original_H2, 
                    global::System.Nullable<decimal> Original_H2_Vabs, 
                    global::System.Nullable<decimal> Original_H2_Votn, 
                    global::System.Nullable<decimal> Original_O2, 
                    global::System.Nullable<decimal> Original_O2_Vabs, 
                    global::System.Nullable<decimal> Original_O2_Votn, 
                    global::System.Nullable<decimal> Original_N2, 
                    global::System.Nullable<decimal> Original_N2_Vabs, 
                    global::System.Nullable<decimal> Original_N2_Votn, 
                    global::System.Nullable<decimal> Original_CH4, 
                    global::System.Nullable<decimal> Original_CH4_Vabs, 
                    global::System.Nullable<decimal> Original_CH4_Votn, 
                    global::System.Nullable<decimal> Original_CO, 
                    global::System.Nullable<decimal> Original_CO_Vabs, 
                    global::System.Nullable<decimal> Original_CO_Votn, 
                    global::System.Nullable<decimal> Original_CO2, 
                    global::System.Nullable<decimal> Original_CO2_Vabs, 
                    global::System.Nullable<decimal> Original_CO2_Votn, 
                    global::System.Nullable<decimal> Original_C2H4, 
                    global::System.Nullable<decimal> Original_C2H4_Vabs, 
                    global::System.Nullable<decimal> Original_C2H4_Votn, 
                    global::System.Nullable<decimal> Original_C2H6, 
                    global::System.Nullable<decimal> Original_C2H6_Vabs, 
                    global::System.Nullable<decimal> Original_C2H6_Votn, 
                    global::System.Nullable<decimal> Original_C2H2, 
                    global::System.Nullable<decimal> Original_C2H2_Vabs, 
                    global::System.Nullable<decimal> Original_C2H2_Votn, 
                    global::System.Nullable<decimal> Original_CH3OH, 
                    global::System.Nullable<decimal> Original_CH3OH_Vabs, 
                    global::System.Nullable<decimal> Original_CH3OH_Votn, 
                    string Original_Recommendation, 
                    string Original_Conclusion, 
                    global::System.Nullable<long> Original_CCNext, 
                    global::System.Nullable<double> Original_VR, 
                    global::System.Nullable<double> Original_KCF) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_CondenserTestID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(Original_CondenserID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_CondenserTestType));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_CondenserTestDate));
            if ((Original_CondenserTestEquipment == null)) {
                throw new global::System.ArgumentNullException("Original_CondenserTestEquipment");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_CondenserTestEquipment));
            }
            if ((Original_Temperature == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Temperature));
            }
            if ((Original_TestVoltageImageForm == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((byte[])(Original_TestVoltageImageForm));
            }
            if ((Original_TestVoltageImagePoints == null)) {
                throw new global::System.ArgumentNullException("Original_TestVoltageImagePoints");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_TestVoltageImagePoints));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_TestVoltageFrequency));
            if ((Original_TestVoltageAmplitude.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_TestVoltageAmplitude.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_CycleCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((long)(Original_CycleCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_AnalysisDateProbe.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_AnalysisDateProbe.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_AnalysisDateExecute.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_AnalysisDateExecute.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_AnalysisEmployeeFIO == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_AnalysisEmployeeFIO));
            }
            this.Adapter.DeleteCommand.Parameters[21].Value = ((long)(Original_CondenserState));
            if ((Original_H2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((decimal)(Original_H2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_H2_Vabs.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((decimal)(Original_H2_Vabs.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_H2_Votn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((decimal)(Original_H2_Votn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_O2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((decimal)(Original_O2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_O2_Vabs.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((decimal)(Original_O2_Vabs.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_O2_Votn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((decimal)(Original_O2_Votn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_N2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((decimal)(Original_N2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_N2_Vabs.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((decimal)(Original_N2_Vabs.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_N2_Votn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((decimal)(Original_N2_Votn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_CH4.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((decimal)(Original_CH4.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_CH4_Vabs.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((decimal)(Original_CH4_Vabs.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_CH4_Votn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((decimal)(Original_CH4_Votn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_CO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((decimal)(Original_CO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_CO_Vabs.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((decimal)(Original_CO_Vabs.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_CO_Votn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((decimal)(Original_CO_Votn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_CO2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((decimal)(Original_CO2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_CO2_Vabs.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((decimal)(Original_CO2_Vabs.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_CO2_Votn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((decimal)(Original_CO2_Votn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_C2H4.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((decimal)(Original_C2H4.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_C2H4_Vabs.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((decimal)(Original_C2H4_Vabs.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_C2H4_Votn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((decimal)(Original_C2H4_Votn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_C2H6.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((decimal)(Original_C2H6.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_C2H6_Vabs.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((decimal)(Original_C2H6_Vabs.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_C2H6_Votn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((decimal)(Original_C2H6_Votn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_C2H2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((decimal)(Original_C2H2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_C2H2_Vabs.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((decimal)(Original_C2H2_Vabs.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_C2H2_Votn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((decimal)(Original_C2H2_Votn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_CH3OH.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((decimal)(Original_CH3OH.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_CH3OH_Vabs.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[79].Value = ((decimal)(Original_CH3OH_Vabs.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_CH3OH_Votn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((decimal)(Original_CH3OH_Votn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_Recommendation == null)) {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[83].Value = ((string)(Original_Recommendation));
            }
            if ((Original_Conclusion == null)) {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[85].Value = ((string)(Original_Conclusion));
            }
            if ((Original_CCNext.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[87].Value = ((long)(Original_CCNext.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_VR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[89].Value = ((double)(Original_VR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_KCF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[91].Value = ((double)(Original_KCF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    long CondenserID, 
                    long CondenserTestType, 
                    System.DateTime CondenserTestDate, 
                    string CondenserTestEquipment, 
                    string Temperature, 
                    byte[] TestVoltageImageForm, 
                    string TestVoltageImagePoints, 
                    decimal TestVoltageFrequency, 
                    global::System.Nullable<decimal> TestVoltageAmplitude, 
                    global::System.Nullable<long> CycleCount, 
                    global::System.Nullable<global::System.DateTime> AnalysisDateProbe, 
                    global::System.Nullable<global::System.DateTime> AnalysisDateExecute, 
                    string AnalysisEmployeeFIO, 
                    long CondenserState, 
                    global::System.Nullable<decimal> H2, 
                    global::System.Nullable<decimal> H2_Vabs, 
                    global::System.Nullable<decimal> H2_Votn, 
                    global::System.Nullable<decimal> O2, 
                    global::System.Nullable<decimal> O2_Vabs, 
                    global::System.Nullable<decimal> O2_Votn, 
                    global::System.Nullable<decimal> N2, 
                    global::System.Nullable<decimal> N2_Vabs, 
                    global::System.Nullable<decimal> N2_Votn, 
                    global::System.Nullable<decimal> CH4, 
                    global::System.Nullable<decimal> CH4_Vabs, 
                    global::System.Nullable<decimal> CH4_Votn, 
                    global::System.Nullable<decimal> CO, 
                    global::System.Nullable<decimal> CO_Vabs, 
                    global::System.Nullable<decimal> CO_Votn, 
                    global::System.Nullable<decimal> CO2, 
                    global::System.Nullable<decimal> CO2_Vabs, 
                    global::System.Nullable<decimal> CO2_Votn, 
                    global::System.Nullable<decimal> C2H4, 
                    global::System.Nullable<decimal> C2H4_Vabs, 
                    global::System.Nullable<decimal> C2H4_Votn, 
                    global::System.Nullable<decimal> C2H6, 
                    global::System.Nullable<decimal> C2H6_Vabs, 
                    global::System.Nullable<decimal> C2H6_Votn, 
                    global::System.Nullable<decimal> C2H2, 
                    global::System.Nullable<decimal> C2H2_Vabs, 
                    global::System.Nullable<decimal> C2H2_Votn, 
                    global::System.Nullable<decimal> CH3OH, 
                    global::System.Nullable<decimal> CH3OH_Vabs, 
                    global::System.Nullable<decimal> CH3OH_Votn, 
                    string Recommendation, 
                    string Conclusion, 
                    global::System.Nullable<long> CCNext, 
                    global::System.Nullable<double> VR, 
                    global::System.Nullable<double> KCF) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(CondenserID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(CondenserTestType));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(CondenserTestDate));
            if ((CondenserTestEquipment == null)) {
                throw new global::System.ArgumentNullException("CondenserTestEquipment");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(CondenserTestEquipment));
            }
            if ((Temperature == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Temperature));
            }
            if ((TestVoltageImageForm == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((byte[])(TestVoltageImageForm));
            }
            if ((TestVoltageImagePoints == null)) {
                throw new global::System.ArgumentNullException("TestVoltageImagePoints");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(TestVoltageImagePoints));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(TestVoltageFrequency));
            if ((TestVoltageAmplitude.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(TestVoltageAmplitude.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CycleCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((long)(CycleCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((AnalysisDateProbe.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(AnalysisDateProbe.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((AnalysisDateExecute.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(AnalysisDateExecute.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((AnalysisEmployeeFIO == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(AnalysisEmployeeFIO));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((long)(CondenserState));
            if ((H2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(H2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((H2_Vabs.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(H2_Vabs.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((H2_Votn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(H2_Votn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((O2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(O2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((O2_Vabs.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(O2_Vabs.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((O2_Votn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(O2_Votn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((N2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(N2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((N2_Vabs.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(N2_Vabs.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((N2_Votn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(N2_Votn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((CH4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(CH4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((CH4_Vabs.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(CH4_Vabs.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((CH4_Votn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(CH4_Votn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((CO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(CO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((CO_Vabs.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(CO_Vabs.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((CO_Votn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(CO_Votn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((CO2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(CO2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((CO2_Vabs.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(CO2_Vabs.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((CO2_Votn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(CO2_Votn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((C2H4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(C2H4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((C2H4_Vabs.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(C2H4_Vabs.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((C2H4_Votn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(C2H4_Votn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((C2H6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(C2H6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((C2H6_Vabs.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((decimal)(C2H6_Vabs.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((C2H6_Votn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((decimal)(C2H6_Votn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((C2H2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((decimal)(C2H2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((C2H2_Vabs.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(C2H2_Vabs.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((C2H2_Votn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(C2H2_Votn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((CH3OH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((decimal)(CH3OH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((CH3OH_Vabs.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((decimal)(CH3OH_Vabs.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((CH3OH_Votn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(CH3OH_Votn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Recommendation == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(Recommendation));
            }
            if ((Conclusion == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(Conclusion));
            }
            if ((CCNext.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((long)(CCNext.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((VR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((double)(VR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((KCF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((double)(KCF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long CondenserID, 
                    long CondenserTestType, 
                    System.DateTime CondenserTestDate, 
                    string CondenserTestEquipment, 
                    string Temperature, 
                    byte[] TestVoltageImageForm, 
                    string TestVoltageImagePoints, 
                    decimal TestVoltageFrequency, 
                    global::System.Nullable<decimal> TestVoltageAmplitude, 
                    global::System.Nullable<long> CycleCount, 
                    global::System.Nullable<global::System.DateTime> AnalysisDateProbe, 
                    global::System.Nullable<global::System.DateTime> AnalysisDateExecute, 
                    string AnalysisEmployeeFIO, 
                    long CondenserState, 
                    global::System.Nullable<decimal> H2, 
                    global::System.Nullable<decimal> H2_Vabs, 
                    global::System.Nullable<decimal> H2_Votn, 
                    global::System.Nullable<decimal> O2, 
                    global::System.Nullable<decimal> O2_Vabs, 
                    global::System.Nullable<decimal> O2_Votn, 
                    global::System.Nullable<decimal> N2, 
                    global::System.Nullable<decimal> N2_Vabs, 
                    global::System.Nullable<decimal> N2_Votn, 
                    global::System.Nullable<decimal> CH4, 
                    global::System.Nullable<decimal> CH4_Vabs, 
                    global::System.Nullable<decimal> CH4_Votn, 
                    global::System.Nullable<decimal> CO, 
                    global::System.Nullable<decimal> CO_Vabs, 
                    global::System.Nullable<decimal> CO_Votn, 
                    global::System.Nullable<decimal> CO2, 
                    global::System.Nullable<decimal> CO2_Vabs, 
                    global::System.Nullable<decimal> CO2_Votn, 
                    global::System.Nullable<decimal> C2H4, 
                    global::System.Nullable<decimal> C2H4_Vabs, 
                    global::System.Nullable<decimal> C2H4_Votn, 
                    global::System.Nullable<decimal> C2H6, 
                    global::System.Nullable<decimal> C2H6_Vabs, 
                    global::System.Nullable<decimal> C2H6_Votn, 
                    global::System.Nullable<decimal> C2H2, 
                    global::System.Nullable<decimal> C2H2_Vabs, 
                    global::System.Nullable<decimal> C2H2_Votn, 
                    global::System.Nullable<decimal> CH3OH, 
                    global::System.Nullable<decimal> CH3OH_Vabs, 
                    global::System.Nullable<decimal> CH3OH_Votn, 
                    string Recommendation, 
                    string Conclusion, 
                    global::System.Nullable<long> CCNext, 
                    global::System.Nullable<double> VR, 
                    global::System.Nullable<double> KCF, 
                    long Original_CondenserTestID, 
                    long Original_CondenserID, 
                    long Original_CondenserTestType, 
                    System.DateTime Original_CondenserTestDate, 
                    string Original_CondenserTestEquipment, 
                    string Original_Temperature, 
                    byte[] Original_TestVoltageImageForm, 
                    string Original_TestVoltageImagePoints, 
                    decimal Original_TestVoltageFrequency, 
                    global::System.Nullable<decimal> Original_TestVoltageAmplitude, 
                    global::System.Nullable<long> Original_CycleCount, 
                    global::System.Nullable<global::System.DateTime> Original_AnalysisDateProbe, 
                    global::System.Nullable<global::System.DateTime> Original_AnalysisDateExecute, 
                    string Original_AnalysisEmployeeFIO, 
                    long Original_CondenserState, 
                    global::System.Nullable<decimal> Original_H2, 
                    global::System.Nullable<decimal> Original_H2_Vabs, 
                    global::System.Nullable<decimal> Original_H2_Votn, 
                    global::System.Nullable<decimal> Original_O2, 
                    global::System.Nullable<decimal> Original_O2_Vabs, 
                    global::System.Nullable<decimal> Original_O2_Votn, 
                    global::System.Nullable<decimal> Original_N2, 
                    global::System.Nullable<decimal> Original_N2_Vabs, 
                    global::System.Nullable<decimal> Original_N2_Votn, 
                    global::System.Nullable<decimal> Original_CH4, 
                    global::System.Nullable<decimal> Original_CH4_Vabs, 
                    global::System.Nullable<decimal> Original_CH4_Votn, 
                    global::System.Nullable<decimal> Original_CO, 
                    global::System.Nullable<decimal> Original_CO_Vabs, 
                    global::System.Nullable<decimal> Original_CO_Votn, 
                    global::System.Nullable<decimal> Original_CO2, 
                    global::System.Nullable<decimal> Original_CO2_Vabs, 
                    global::System.Nullable<decimal> Original_CO2_Votn, 
                    global::System.Nullable<decimal> Original_C2H4, 
                    global::System.Nullable<decimal> Original_C2H4_Vabs, 
                    global::System.Nullable<decimal> Original_C2H4_Votn, 
                    global::System.Nullable<decimal> Original_C2H6, 
                    global::System.Nullable<decimal> Original_C2H6_Vabs, 
                    global::System.Nullable<decimal> Original_C2H6_Votn, 
                    global::System.Nullable<decimal> Original_C2H2, 
                    global::System.Nullable<decimal> Original_C2H2_Vabs, 
                    global::System.Nullable<decimal> Original_C2H2_Votn, 
                    global::System.Nullable<decimal> Original_CH3OH, 
                    global::System.Nullable<decimal> Original_CH3OH_Vabs, 
                    global::System.Nullable<decimal> Original_CH3OH_Votn, 
                    string Original_Recommendation, 
                    string Original_Conclusion, 
                    global::System.Nullable<long> Original_CCNext, 
                    global::System.Nullable<double> Original_VR, 
                    global::System.Nullable<double> Original_KCF) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(CondenserID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(CondenserTestType));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(CondenserTestDate));
            if ((CondenserTestEquipment == null)) {
                throw new global::System.ArgumentNullException("CondenserTestEquipment");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(CondenserTestEquipment));
            }
            if ((Temperature == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Temperature));
            }
            if ((TestVoltageImageForm == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((byte[])(TestVoltageImageForm));
            }
            if ((TestVoltageImagePoints == null)) {
                throw new global::System.ArgumentNullException("TestVoltageImagePoints");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(TestVoltageImagePoints));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(TestVoltageFrequency));
            if ((TestVoltageAmplitude.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(TestVoltageAmplitude.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CycleCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(CycleCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((AnalysisDateProbe.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(AnalysisDateProbe.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((AnalysisDateExecute.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(AnalysisDateExecute.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((AnalysisEmployeeFIO == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(AnalysisEmployeeFIO));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((long)(CondenserState));
            if ((H2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(H2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((H2_Vabs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(H2_Vabs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((H2_Votn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(H2_Votn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((O2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(O2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((O2_Vabs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(O2_Vabs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((O2_Votn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(O2_Votn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((N2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(N2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((N2_Vabs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(N2_Vabs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((N2_Votn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(N2_Votn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((CH4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(CH4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((CH4_Vabs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(CH4_Vabs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((CH4_Votn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(CH4_Votn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((CO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(CO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((CO_Vabs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(CO_Vabs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((CO_Votn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(CO_Votn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((CO2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(CO2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((CO2_Vabs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(CO2_Vabs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((CO2_Votn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(CO2_Votn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((C2H4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(C2H4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((C2H4_Vabs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(C2H4_Vabs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((C2H4_Votn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(C2H4_Votn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((C2H6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(C2H6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((C2H6_Vabs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(C2H6_Vabs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((C2H6_Votn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(C2H6_Votn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((C2H2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(C2H2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((C2H2_Vabs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(C2H2_Vabs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((C2H2_Votn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(C2H2_Votn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((CH3OH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(CH3OH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((CH3OH_Vabs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(CH3OH_Vabs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((CH3OH_Votn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(CH3OH_Votn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Recommendation == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Recommendation));
            }
            if ((Conclusion == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Conclusion));
            }
            if ((CCNext.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((long)(CCNext.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((VR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((double)(VR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((KCF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((double)(KCF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[49].Value = ((long)(Original_CondenserTestID));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((long)(Original_CondenserID));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((long)(Original_CondenserTestType));
            this.Adapter.UpdateCommand.Parameters[52].Value = ((System.DateTime)(Original_CondenserTestDate));
            if ((Original_CondenserTestEquipment == null)) {
                throw new global::System.ArgumentNullException("Original_CondenserTestEquipment");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_CondenserTestEquipment));
            }
            if ((Original_Temperature == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_Temperature));
            }
            if ((Original_TestVoltageImageForm == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((byte[])(Original_TestVoltageImageForm));
            }
            if ((Original_TestVoltageImagePoints == null)) {
                throw new global::System.ArgumentNullException("Original_TestVoltageImagePoints");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_TestVoltageImagePoints));
            }
            this.Adapter.UpdateCommand.Parameters[59].Value = ((decimal)(Original_TestVoltageFrequency));
            if ((Original_TestVoltageAmplitude.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((decimal)(Original_TestVoltageAmplitude.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_CycleCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((long)(Original_CycleCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_AnalysisDateProbe.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((System.DateTime)(Original_AnalysisDateProbe.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_AnalysisDateExecute.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((System.DateTime)(Original_AnalysisDateExecute.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_AnalysisEmployeeFIO == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_AnalysisEmployeeFIO));
            }
            this.Adapter.UpdateCommand.Parameters[70].Value = ((long)(Original_CondenserState));
            if ((Original_H2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((decimal)(Original_H2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_H2_Vabs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((decimal)(Original_H2_Vabs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_H2_Votn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((decimal)(Original_H2_Votn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_O2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((decimal)(Original_O2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_O2_Vabs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((decimal)(Original_O2_Vabs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_O2_Votn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((decimal)(Original_O2_Votn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_N2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((decimal)(Original_N2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_N2_Vabs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((decimal)(Original_N2_Vabs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((Original_N2_Votn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((decimal)(Original_N2_Votn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((Original_CH4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[90].Value = ((decimal)(Original_CH4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((Original_CH4_Vabs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[92].Value = ((decimal)(Original_CH4_Vabs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((Original_CH4_Votn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((decimal)(Original_CH4_Votn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((Original_CO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((decimal)(Original_CO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((Original_CO_Vabs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((decimal)(Original_CO_Vabs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((Original_CO_Votn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((decimal)(Original_CO_Votn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((Original_CO2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[102].Value = ((decimal)(Original_CO2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((Original_CO2_Vabs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[104].Value = ((decimal)(Original_CO2_Vabs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((Original_CO2_Votn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[106].Value = ((decimal)(Original_CO2_Votn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            if ((Original_C2H4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((decimal)(Original_C2H4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((Original_C2H4_Vabs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[110].Value = ((decimal)(Original_C2H4_Vabs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((Original_C2H4_Votn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((decimal)(Original_C2H4_Votn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((Original_C2H6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((decimal)(Original_C2H6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((Original_C2H6_Vabs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[116].Value = ((decimal)(Original_C2H6_Vabs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            if ((Original_C2H6_Votn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[118].Value = ((decimal)(Original_C2H6_Votn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((Original_C2H2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[120].Value = ((decimal)(Original_C2H2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((Original_C2H2_Vabs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[122].Value = ((decimal)(Original_C2H2_Vabs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            if ((Original_C2H2_Votn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[124].Value = ((decimal)(Original_C2H2_Votn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            if ((Original_CH3OH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[126].Value = ((decimal)(Original_CH3OH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            if ((Original_CH3OH_Vabs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[128].Value = ((decimal)(Original_CH3OH_Vabs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            if ((Original_CH3OH_Votn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[130].Value = ((decimal)(Original_CH3OH_Votn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((Original_Recommendation == null)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[132].Value = ((string)(Original_Recommendation));
            }
            if ((Original_Conclusion == null)) {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[134].Value = ((string)(Original_Conclusion));
            }
            if ((Original_CCNext.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[136].Value = ((long)(Original_CCNext.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((Original_VR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[138].Value = ((double)(Original_VR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            if ((Original_KCF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[140].Value = ((double)(Original_KCF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QCondenserTypesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public QCondenserTypesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QCondenserTypes";
            tableMapping.ColumnMappings.Add("CasingType", "CasingType");
            tableMapping.ColumnMappings.Add("CasingThickness", "CasingThickness");
            tableMapping.ColumnMappings.Add("CondenserTypeID", "CondenserTypeID");
            tableMapping.ColumnMappings.Add("CondenserTypeName", "CondenserTypeName");
            tableMapping.ColumnMappings.Add("InsulatingLiquidTypeID", "InsulatingLiquidTypeID");
            tableMapping.ColumnMappings.Add("DielectricType", "DielectricType");
            tableMapping.ColumnMappings.Add("DielectricThickness", "DielectricThickness");
            tableMapping.ColumnMappings.Add("TangentAngle", "TangentAngle");
            tableMapping.ColumnMappings.Add("DielectricInductiveCapacity", "DielectricInductiveCapacity");
            tableMapping.ColumnMappings.Add("Status", "Status");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Condenser.Properties.Settings.Default.condenserConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT *, 0 AS Status FROM CondenserTypes ORDER BY CondenserTypeName";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetQuery.QCondenserTypesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetQuery.QCondenserTypesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetQuery.QCondenserTypesDataTable dataTable = new DataSetQuery.QCondenserTypesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QCondenserTypeParametersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public QCondenserTypeParametersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QCondenserTypeParameters";
            tableMapping.ColumnMappings.Add("KoefID", "KoefID");
            tableMapping.ColumnMappings.Add("CondenserTypeID", "CondenserTypeID");
            tableMapping.ColumnMappings.Add("KI1", "KI1");
            tableMapping.ColumnMappings.Add("KoefA", "KoefA");
            tableMapping.ColumnMappings.Add("KoefB", "KoefB");
            tableMapping.ColumnMappings.Add("FunctionType", "FunctionType");
            tableMapping.ColumnMappings.Add("KoefR2", "KoefR2");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Condenser.Properties.Settings.Default.condenserConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ctp.KoefID, ct.CondenserTypeID, ctp.KI1, ctp.KoefA, ctp.KoefB, ctp.KoefR2," +
                " ctp.FunctionType\r\nFROM CondenserTypes AS ct\r\nLEFT JOIN CondenserTypeParameters " +
                "AS ctp ON ctp.CondenserTypeID = ct.CondenserTypeID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetQuery.QCondenserTypeParametersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetQuery.QCondenserTypeParametersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetQuery.QCondenserTypeParametersDataTable dataTable = new DataSetQuery.QCondenserTypeParametersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QCondenserTypesForTableTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public QCondenserTypesForTableTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QCondenserTypesForTable";
            tableMapping.ColumnMappings.Add("KoefID", "KoefID");
            tableMapping.ColumnMappings.Add("CondenserTypeID", "CondenserTypeID");
            tableMapping.ColumnMappings.Add("CondenserTypeName", "CondenserTypeName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Condenser.Properties.Settings.Default.condenserConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT CondenserTypeParameters.CondenserTypeID, CondenserTypes.CondenserTypeName, CondenserTypeParameters.KoefID FROM CondenserTypeParameters
INNER JOIN CondenserTypes ON CondenserTypeParameters.CondenserTypeID = CondenserTypes.CondenserTypeID
ORDER BY CondenserTypes.CondenserTypeName";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetQuery.QCondenserTypesForTableDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetQuery.QCondenserTypesForTableDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetQuery.QCondenserTypesForTableDataTable dataTable = new DataSetQuery.QCondenserTypesForTableDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QCondensersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public QCondensersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QCondensers";
            tableMapping.ColumnMappings.Add("CondenserID", "CondenserID");
            tableMapping.ColumnMappings.Add("CondenserNumber", "CondenserNumber");
            tableMapping.ColumnMappings.Add("CondenserTypeName", "CondenserTypeName");
            tableMapping.ColumnMappings.Add("InsulatingLiquidTypeName", "InsulatingLiquidTypeName");
            tableMapping.ColumnMappings.Add("NominalVoltage", "NominalVoltage");
            tableMapping.ColumnMappings.Add("NominalCapacitance", "NominalCapacitance");
            tableMapping.ColumnMappings.Add("CondenserState", "CondenserState");
            tableMapping.ColumnMappings.Add("CondenserTestType", "CondenserTestType");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Condenser.Properties.Settings.Default.condenserConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT c.CondenserID, c.CondenserNumber, ct.CondenserTypeName, 
                    ilt.InsulatingLiquidTypeName, c.NominalVoltage, c.NominalCapacitance, c.CondenserState, c.CondenserTestType 
                    FROM Condensers AS c 
                    INNER JOIN CondenserTypes AS ct ON ct.CondenserTypeID = c.CondenserTypeID 
                    INNER JOIN InsulatingLiquidTypes AS ilt ON ilt.InsulatingLiquidTypeID = ct.InsulatingLiquidTypeID 
";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetQuery.QCondensersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetQuery.QCondensersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetQuery.QCondensersDataTable dataTable = new DataSetQuery.QCondensersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private QCondenserTestTableAdapter _qCondenserTestTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public QCondenserTestTableAdapter QCondenserTestTableAdapter {
            get {
                return this._qCondenserTestTableAdapter;
            }
            set {
                this._qCondenserTestTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._qCondenserTestTableAdapter != null) 
                            && (this._qCondenserTestTableAdapter.Connection != null))) {
                    return this._qCondenserTestTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._qCondenserTestTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSetQuery dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._qCondenserTestTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.QCondenserTest.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._qCondenserTestTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSetQuery dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._qCondenserTestTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.QCondenserTest.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._qCondenserTestTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSetQuery dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._qCondenserTestTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.QCondenserTest.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._qCondenserTestTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSetQuery dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._qCondenserTestTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._qCondenserTestTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._qCondenserTestTableAdapter != null)) {
                    revertConnections.Add(this._qCondenserTestTableAdapter, this._qCondenserTestTableAdapter.Connection);
                    this._qCondenserTestTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(workConnection));
                    this._qCondenserTestTableAdapter.Transaction = ((global::System.Data.SQLite.SQLiteTransaction)(workTransaction));
                    if (this._qCondenserTestTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._qCondenserTestTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._qCondenserTestTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._qCondenserTestTableAdapter != null)) {
                    this._qCondenserTestTableAdapter.Connection = ((global::System.Data.SQLite.SQLiteConnection)(revertConnections[this._qCondenserTestTableAdapter]));
                    this._qCondenserTestTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591